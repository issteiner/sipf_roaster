

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Feb 18 10:26:05 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16LF15323
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 2.40
    79                           ; Generated 02/12/2021 GMT
    80                           ; 
    81                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16LF15323 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000E                     	;# 
   127  0012                     	;# 
   128  0014                     	;# 
   129  0018                     	;# 
   130  001A                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011C                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011D                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011E                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  018E                     	;# 
   165  018F                     	;# 
   166  0190                     	;# 
   167  0191                     	;# 
   168  0192                     	;# 
   169  020C                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  020E                     	;# 
   173  020F                     	;# 
   174  020F                     	;# 
   175  0210                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  028C                     	;# 
   180  028C                     	;# 
   181  028D                     	;# 
   182  028D                     	;# 
   183  028E                     	;# 
   184  028F                     	;# 
   185  0290                     	;# 
   186  0291                     	;# 
   187  030C                     	;# 
   188  030C                     	;# 
   189  030D                     	;# 
   190  030E                     	;# 
   191  030F                     	;# 
   192  0310                     	;# 
   193  0310                     	;# 
   194  0311                     	;# 
   195  0312                     	;# 
   196  0313                     	;# 
   197  0314                     	;# 
   198  0314                     	;# 
   199  0315                     	;# 
   200  0316                     	;# 
   201  0318                     	;# 
   202  0318                     	;# 
   203  0319                     	;# 
   204  031A                     	;# 
   205  031C                     	;# 
   206  031C                     	;# 
   207  031D                     	;# 
   208  031E                     	;# 
   209  038C                     	;# 
   210  038C                     	;# 
   211  038D                     	;# 
   212  038E                     	;# 
   213  058C                     	;# 
   214  058C                     	;# 
   215  058D                     	;# 
   216  058E                     	;# 
   217  058F                     	;# 
   218  058F                     	;# 
   219  0590                     	;# 
   220  0591                     	;# 
   221  0592                     	;# 
   222  0593                     	;# 
   223  059C                     	;# 
   224  059C                     	;# 
   225  059D                     	;# 
   226  059D                     	;# 
   227  059E                     	;# 
   228  059F                     	;# 
   229  060C                     	;# 
   230  060D                     	;# 
   231  060E                     	;# 
   232  060F                     	;# 
   233  0610                     	;# 
   234  0611                     	;# 
   235  0612                     	;# 
   236  0613                     	;# 
   237  0614                     	;# 
   238  070C                     	;# 
   239  070D                     	;# 
   240  070E                     	;# 
   241  070F                     	;# 
   242  0710                     	;# 
   243  0711                     	;# 
   244  0712                     	;# 
   245  0713                     	;# 
   246  0716                     	;# 
   247  0717                     	;# 
   248  0718                     	;# 
   249  0719                     	;# 
   250  071A                     	;# 
   251  071B                     	;# 
   252  071C                     	;# 
   253  071D                     	;# 
   254  0796                     	;# 
   255  0797                     	;# 
   256  0798                     	;# 
   257  0799                     	;# 
   258  079A                     	;# 
   259  079B                     	;# 
   260  080C                     	;# 
   261  080D                     	;# 
   262  080E                     	;# 
   263  080F                     	;# 
   264  0810                     	;# 
   265  0811                     	;# 
   266  0813                     	;# 
   267  0814                     	;# 
   268  081A                     	;# 
   269  081A                     	;# 
   270  081B                     	;# 
   271  081C                     	;# 
   272  081C                     	;# 
   273  081D                     	;# 
   274  081E                     	;# 
   275  081F                     	;# 
   276  088C                     	;# 
   277  088D                     	;# 
   278  088E                     	;# 
   279  088F                     	;# 
   280  0890                     	;# 
   281  0891                     	;# 
   282  0892                     	;# 
   283  0893                     	;# 
   284  0895                     	;# 
   285  0896                     	;# 
   286  090C                     	;# 
   287  090E                     	;# 
   288  090F                     	;# 
   289  091F                     	;# 
   290  098F                     	;# 
   291  098F                     	;# 
   292  0990                     	;# 
   293  0991                     	;# 
   294  0992                     	;# 
   295  0993                     	;# 
   296  0994                     	;# 
   297  0995                     	;# 
   298  0996                     	;# 
   299  0997                     	;# 
   300  1E0F                     	;# 
   301  1E10                     	;# 
   302  1E11                     	;# 
   303  1E12                     	;# 
   304  1E13                     	;# 
   305  1E14                     	;# 
   306  1E15                     	;# 
   307  1E16                     	;# 
   308  1E17                     	;# 
   309  1E18                     	;# 
   310  1E19                     	;# 
   311  1E1A                     	;# 
   312  1E1B                     	;# 
   313  1E1C                     	;# 
   314  1E1D                     	;# 
   315  1E1E                     	;# 
   316  1E1F                     	;# 
   317  1E20                     	;# 
   318  1E21                     	;# 
   319  1E22                     	;# 
   320  1E23                     	;# 
   321  1E24                     	;# 
   322  1E25                     	;# 
   323  1E26                     	;# 
   324  1E27                     	;# 
   325  1E28                     	;# 
   326  1E29                     	;# 
   327  1E2A                     	;# 
   328  1E2B                     	;# 
   329  1E2C                     	;# 
   330  1E2D                     	;# 
   331  1E2E                     	;# 
   332  1E2F                     	;# 
   333  1E30                     	;# 
   334  1E31                     	;# 
   335  1E32                     	;# 
   336  1E33                     	;# 
   337  1E34                     	;# 
   338  1E35                     	;# 
   339  1E36                     	;# 
   340  1E37                     	;# 
   341  1E8F                     	;# 
   342  1E90                     	;# 
   343  1E91                     	;# 
   344  1E92                     	;# 
   345  1E93                     	;# 
   346  1E9C                     	;# 
   347  1EA1                     	;# 
   348  1EA2                     	;# 
   349  1EB1                     	;# 
   350  1EBB                     	;# 
   351  1EBC                     	;# 
   352  1EBD                     	;# 
   353  1EBE                     	;# 
   354  1EC3                     	;# 
   355  1EC5                     	;# 
   356  1EC6                     	;# 
   357  1EC7                     	;# 
   358  1ECB                     	;# 
   359  1ECC                     	;# 
   360  1F10                     	;# 
   361  1F11                     	;# 
   362  1F12                     	;# 
   363  1F13                     	;# 
   364  1F14                     	;# 
   365  1F15                     	;# 
   366  1F20                     	;# 
   367  1F21                     	;# 
   368  1F22                     	;# 
   369  1F23                     	;# 
   370  1F24                     	;# 
   371  1F25                     	;# 
   372  1F38                     	;# 
   373  1F39                     	;# 
   374  1F3A                     	;# 
   375  1F3B                     	;# 
   376  1F3C                     	;# 
   377  1F3D                     	;# 
   378  1F3E                     	;# 
   379  1F3F                     	;# 
   380  1F4E                     	;# 
   381  1F4F                     	;# 
   382  1F50                     	;# 
   383  1F51                     	;# 
   384  1F52                     	;# 
   385  1F53                     	;# 
   386  1F54                     	;# 
   387  1F55                     	;# 
   388  1FE4                     	;# 
   389  1FE5                     	;# 
   390  1FE6                     	;# 
   391  1FE7                     	;# 
   392  1FE8                     	;# 
   393  1FE8                     	;# 
   394  1FE9                     	;# 
   395  1FEA                     	;# 
   396  1FEA                     	;# 
   397  1FEB                     	;# 
   398  1FED                     	;# 
   399  1FEE                     	;# 
   400  1FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000E                     	;# 
   415  0012                     	;# 
   416  0014                     	;# 
   417  0018                     	;# 
   418  001A                     	;# 
   419  009B                     	;# 
   420  009B                     	;# 
   421  009C                     	;# 
   422  009D                     	;# 
   423  009E                     	;# 
   424  009F                     	;# 
   425  0119                     	;# 
   426  0119                     	;# 
   427  0119                     	;# 
   428  011A                     	;# 
   429  011A                     	;# 
   430  011A                     	;# 
   431  011B                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011B                     	;# 
   435  011B                     	;# 
   436  011C                     	;# 
   437  011C                     	;# 
   438  011C                     	;# 
   439  011D                     	;# 
   440  011D                     	;# 
   441  011D                     	;# 
   442  011E                     	;# 
   443  011E                     	;# 
   444  011E                     	;# 
   445  011F                     	;# 
   446  011F                     	;# 
   447  011F                     	;# 
   448  011F                     	;# 
   449  011F                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  018E                     	;# 
   453  018F                     	;# 
   454  0190                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  020C                     	;# 
   458  020C                     	;# 
   459  020D                     	;# 
   460  020E                     	;# 
   461  020F                     	;# 
   462  020F                     	;# 
   463  0210                     	;# 
   464  0210                     	;# 
   465  0211                     	;# 
   466  0211                     	;# 
   467  028C                     	;# 
   468  028C                     	;# 
   469  028D                     	;# 
   470  028D                     	;# 
   471  028E                     	;# 
   472  028F                     	;# 
   473  0290                     	;# 
   474  0291                     	;# 
   475  030C                     	;# 
   476  030C                     	;# 
   477  030D                     	;# 
   478  030E                     	;# 
   479  030F                     	;# 
   480  0310                     	;# 
   481  0310                     	;# 
   482  0311                     	;# 
   483  0312                     	;# 
   484  0313                     	;# 
   485  0314                     	;# 
   486  0314                     	;# 
   487  0315                     	;# 
   488  0316                     	;# 
   489  0318                     	;# 
   490  0318                     	;# 
   491  0319                     	;# 
   492  031A                     	;# 
   493  031C                     	;# 
   494  031C                     	;# 
   495  031D                     	;# 
   496  031E                     	;# 
   497  038C                     	;# 
   498  038C                     	;# 
   499  038D                     	;# 
   500  038E                     	;# 
   501  058C                     	;# 
   502  058C                     	;# 
   503  058D                     	;# 
   504  058E                     	;# 
   505  058F                     	;# 
   506  058F                     	;# 
   507  0590                     	;# 
   508  0591                     	;# 
   509  0592                     	;# 
   510  0593                     	;# 
   511  059C                     	;# 
   512  059C                     	;# 
   513  059D                     	;# 
   514  059D                     	;# 
   515  059E                     	;# 
   516  059F                     	;# 
   517  060C                     	;# 
   518  060D                     	;# 
   519  060E                     	;# 
   520  060F                     	;# 
   521  0610                     	;# 
   522  0611                     	;# 
   523  0612                     	;# 
   524  0613                     	;# 
   525  0614                     	;# 
   526  070C                     	;# 
   527  070D                     	;# 
   528  070E                     	;# 
   529  070F                     	;# 
   530  0710                     	;# 
   531  0711                     	;# 
   532  0712                     	;# 
   533  0713                     	;# 
   534  0716                     	;# 
   535  0717                     	;# 
   536  0718                     	;# 
   537  0719                     	;# 
   538  071A                     	;# 
   539  071B                     	;# 
   540  071C                     	;# 
   541  071D                     	;# 
   542  0796                     	;# 
   543  0797                     	;# 
   544  0798                     	;# 
   545  0799                     	;# 
   546  079A                     	;# 
   547  079B                     	;# 
   548  080C                     	;# 
   549  080D                     	;# 
   550  080E                     	;# 
   551  080F                     	;# 
   552  0810                     	;# 
   553  0811                     	;# 
   554  0813                     	;# 
   555  0814                     	;# 
   556  081A                     	;# 
   557  081A                     	;# 
   558  081B                     	;# 
   559  081C                     	;# 
   560  081C                     	;# 
   561  081D                     	;# 
   562  081E                     	;# 
   563  081F                     	;# 
   564  088C                     	;# 
   565  088D                     	;# 
   566  088E                     	;# 
   567  088F                     	;# 
   568  0890                     	;# 
   569  0891                     	;# 
   570  0892                     	;# 
   571  0893                     	;# 
   572  0895                     	;# 
   573  0896                     	;# 
   574  090C                     	;# 
   575  090E                     	;# 
   576  090F                     	;# 
   577  091F                     	;# 
   578  098F                     	;# 
   579  098F                     	;# 
   580  0990                     	;# 
   581  0991                     	;# 
   582  0992                     	;# 
   583  0993                     	;# 
   584  0994                     	;# 
   585  0995                     	;# 
   586  0996                     	;# 
   587  0997                     	;# 
   588  1E0F                     	;# 
   589  1E10                     	;# 
   590  1E11                     	;# 
   591  1E12                     	;# 
   592  1E13                     	;# 
   593  1E14                     	;# 
   594  1E15                     	;# 
   595  1E16                     	;# 
   596  1E17                     	;# 
   597  1E18                     	;# 
   598  1E19                     	;# 
   599  1E1A                     	;# 
   600  1E1B                     	;# 
   601  1E1C                     	;# 
   602  1E1D                     	;# 
   603  1E1E                     	;# 
   604  1E1F                     	;# 
   605  1E20                     	;# 
   606  1E21                     	;# 
   607  1E22                     	;# 
   608  1E23                     	;# 
   609  1E24                     	;# 
   610  1E25                     	;# 
   611  1E26                     	;# 
   612  1E27                     	;# 
   613  1E28                     	;# 
   614  1E29                     	;# 
   615  1E2A                     	;# 
   616  1E2B                     	;# 
   617  1E2C                     	;# 
   618  1E2D                     	;# 
   619  1E2E                     	;# 
   620  1E2F                     	;# 
   621  1E30                     	;# 
   622  1E31                     	;# 
   623  1E32                     	;# 
   624  1E33                     	;# 
   625  1E34                     	;# 
   626  1E35                     	;# 
   627  1E36                     	;# 
   628  1E37                     	;# 
   629  1E8F                     	;# 
   630  1E90                     	;# 
   631  1E91                     	;# 
   632  1E92                     	;# 
   633  1E93                     	;# 
   634  1E9C                     	;# 
   635  1EA1                     	;# 
   636  1EA2                     	;# 
   637  1EB1                     	;# 
   638  1EBB                     	;# 
   639  1EBC                     	;# 
   640  1EBD                     	;# 
   641  1EBE                     	;# 
   642  1EC3                     	;# 
   643  1EC5                     	;# 
   644  1EC6                     	;# 
   645  1EC7                     	;# 
   646  1ECB                     	;# 
   647  1ECC                     	;# 
   648  1F10                     	;# 
   649  1F11                     	;# 
   650  1F12                     	;# 
   651  1F13                     	;# 
   652  1F14                     	;# 
   653  1F15                     	;# 
   654  1F20                     	;# 
   655  1F21                     	;# 
   656  1F22                     	;# 
   657  1F23                     	;# 
   658  1F24                     	;# 
   659  1F25                     	;# 
   660  1F38                     	;# 
   661  1F39                     	;# 
   662  1F3A                     	;# 
   663  1F3B                     	;# 
   664  1F3C                     	;# 
   665  1F3D                     	;# 
   666  1F3E                     	;# 
   667  1F3F                     	;# 
   668  1F4E                     	;# 
   669  1F4F                     	;# 
   670  1F50                     	;# 
   671  1F51                     	;# 
   672  1F52                     	;# 
   673  1F53                     	;# 
   674  1F54                     	;# 
   675  1F55                     	;# 
   676  1FE4                     	;# 
   677  1FE5                     	;# 
   678  1FE6                     	;# 
   679  1FE7                     	;# 
   680  1FE8                     	;# 
   681  1FE8                     	;# 
   682  1FE9                     	;# 
   683  1FEA                     	;# 
   684  1FEA                     	;# 
   685  1FEB                     	;# 
   686  1FED                     	;# 
   687  1FEE                     	;# 
   688  1FEF                     	;# 
   689  0000                     	;# 
   690  0001                     	;# 
   691  0002                     	;# 
   692  0003                     	;# 
   693  0004                     	;# 
   694  0005                     	;# 
   695  0006                     	;# 
   696  0007                     	;# 
   697  0008                     	;# 
   698  0009                     	;# 
   699  000A                     	;# 
   700  000B                     	;# 
   701  000C                     	;# 
   702  000E                     	;# 
   703  0012                     	;# 
   704  0014                     	;# 
   705  0018                     	;# 
   706  001A                     	;# 
   707  009B                     	;# 
   708  009B                     	;# 
   709  009C                     	;# 
   710  009D                     	;# 
   711  009E                     	;# 
   712  009F                     	;# 
   713  0119                     	;# 
   714  0119                     	;# 
   715  0119                     	;# 
   716  011A                     	;# 
   717  011A                     	;# 
   718  011A                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011B                     	;# 
   724  011C                     	;# 
   725  011C                     	;# 
   726  011C                     	;# 
   727  011D                     	;# 
   728  011D                     	;# 
   729  011D                     	;# 
   730  011E                     	;# 
   731  011E                     	;# 
   732  011E                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  011F                     	;# 
   738  018C                     	;# 
   739  018D                     	;# 
   740  018E                     	;# 
   741  018F                     	;# 
   742  0190                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  020C                     	;# 
   746  020C                     	;# 
   747  020D                     	;# 
   748  020E                     	;# 
   749  020F                     	;# 
   750  020F                     	;# 
   751  0210                     	;# 
   752  0210                     	;# 
   753  0211                     	;# 
   754  0211                     	;# 
   755  028C                     	;# 
   756  028C                     	;# 
   757  028D                     	;# 
   758  028D                     	;# 
   759  028E                     	;# 
   760  028F                     	;# 
   761  0290                     	;# 
   762  0291                     	;# 
   763  030C                     	;# 
   764  030C                     	;# 
   765  030D                     	;# 
   766  030E                     	;# 
   767  030F                     	;# 
   768  0310                     	;# 
   769  0310                     	;# 
   770  0311                     	;# 
   771  0312                     	;# 
   772  0313                     	;# 
   773  0314                     	;# 
   774  0314                     	;# 
   775  0315                     	;# 
   776  0316                     	;# 
   777  0318                     	;# 
   778  0318                     	;# 
   779  0319                     	;# 
   780  031A                     	;# 
   781  031C                     	;# 
   782  031C                     	;# 
   783  031D                     	;# 
   784  031E                     	;# 
   785  038C                     	;# 
   786  038C                     	;# 
   787  038D                     	;# 
   788  038E                     	;# 
   789  058C                     	;# 
   790  058C                     	;# 
   791  058D                     	;# 
   792  058E                     	;# 
   793  058F                     	;# 
   794  058F                     	;# 
   795  0590                     	;# 
   796  0591                     	;# 
   797  0592                     	;# 
   798  0593                     	;# 
   799  059C                     	;# 
   800  059C                     	;# 
   801  059D                     	;# 
   802  059D                     	;# 
   803  059E                     	;# 
   804  059F                     	;# 
   805  060C                     	;# 
   806  060D                     	;# 
   807  060E                     	;# 
   808  060F                     	;# 
   809  0610                     	;# 
   810  0611                     	;# 
   811  0612                     	;# 
   812  0613                     	;# 
   813  0614                     	;# 
   814  070C                     	;# 
   815  070D                     	;# 
   816  070E                     	;# 
   817  070F                     	;# 
   818  0710                     	;# 
   819  0711                     	;# 
   820  0712                     	;# 
   821  0713                     	;# 
   822  0716                     	;# 
   823  0717                     	;# 
   824  0718                     	;# 
   825  0719                     	;# 
   826  071A                     	;# 
   827  071B                     	;# 
   828  071C                     	;# 
   829  071D                     	;# 
   830  0796                     	;# 
   831  0797                     	;# 
   832  0798                     	;# 
   833  0799                     	;# 
   834  079A                     	;# 
   835  079B                     	;# 
   836  080C                     	;# 
   837  080D                     	;# 
   838  080E                     	;# 
   839  080F                     	;# 
   840  0810                     	;# 
   841  0811                     	;# 
   842  0813                     	;# 
   843  0814                     	;# 
   844  081A                     	;# 
   845  081A                     	;# 
   846  081B                     	;# 
   847  081C                     	;# 
   848  081C                     	;# 
   849  081D                     	;# 
   850  081E                     	;# 
   851  081F                     	;# 
   852  088C                     	;# 
   853  088D                     	;# 
   854  088E                     	;# 
   855  088F                     	;# 
   856  0890                     	;# 
   857  0891                     	;# 
   858  0892                     	;# 
   859  0893                     	;# 
   860  0895                     	;# 
   861  0896                     	;# 
   862  090C                     	;# 
   863  090E                     	;# 
   864  090F                     	;# 
   865  091F                     	;# 
   866  098F                     	;# 
   867  098F                     	;# 
   868  0990                     	;# 
   869  0991                     	;# 
   870  0992                     	;# 
   871  0993                     	;# 
   872  0994                     	;# 
   873  0995                     	;# 
   874  0996                     	;# 
   875  0997                     	;# 
   876  1E0F                     	;# 
   877  1E10                     	;# 
   878  1E11                     	;# 
   879  1E12                     	;# 
   880  1E13                     	;# 
   881  1E14                     	;# 
   882  1E15                     	;# 
   883  1E16                     	;# 
   884  1E17                     	;# 
   885  1E18                     	;# 
   886  1E19                     	;# 
   887  1E1A                     	;# 
   888  1E1B                     	;# 
   889  1E1C                     	;# 
   890  1E1D                     	;# 
   891  1E1E                     	;# 
   892  1E1F                     	;# 
   893  1E20                     	;# 
   894  1E21                     	;# 
   895  1E22                     	;# 
   896  1E23                     	;# 
   897  1E24                     	;# 
   898  1E25                     	;# 
   899  1E26                     	;# 
   900  1E27                     	;# 
   901  1E28                     	;# 
   902  1E29                     	;# 
   903  1E2A                     	;# 
   904  1E2B                     	;# 
   905  1E2C                     	;# 
   906  1E2D                     	;# 
   907  1E2E                     	;# 
   908  1E2F                     	;# 
   909  1E30                     	;# 
   910  1E31                     	;# 
   911  1E32                     	;# 
   912  1E33                     	;# 
   913  1E34                     	;# 
   914  1E35                     	;# 
   915  1E36                     	;# 
   916  1E37                     	;# 
   917  1E8F                     	;# 
   918  1E90                     	;# 
   919  1E91                     	;# 
   920  1E92                     	;# 
   921  1E93                     	;# 
   922  1E9C                     	;# 
   923  1EA1                     	;# 
   924  1EA2                     	;# 
   925  1EB1                     	;# 
   926  1EBB                     	;# 
   927  1EBC                     	;# 
   928  1EBD                     	;# 
   929  1EBE                     	;# 
   930  1EC3                     	;# 
   931  1EC5                     	;# 
   932  1EC6                     	;# 
   933  1EC7                     	;# 
   934  1ECB                     	;# 
   935  1ECC                     	;# 
   936  1F10                     	;# 
   937  1F11                     	;# 
   938  1F12                     	;# 
   939  1F13                     	;# 
   940  1F14                     	;# 
   941  1F15                     	;# 
   942  1F20                     	;# 
   943  1F21                     	;# 
   944  1F22                     	;# 
   945  1F23                     	;# 
   946  1F24                     	;# 
   947  1F25                     	;# 
   948  1F38                     	;# 
   949  1F39                     	;# 
   950  1F3A                     	;# 
   951  1F3B                     	;# 
   952  1F3C                     	;# 
   953  1F3D                     	;# 
   954  1F3E                     	;# 
   955  1F3F                     	;# 
   956  1F4E                     	;# 
   957  1F4F                     	;# 
   958  1F50                     	;# 
   959  1F51                     	;# 
   960  1F52                     	;# 
   961  1F53                     	;# 
   962  1F54                     	;# 
   963  1F55                     	;# 
   964  1FE4                     	;# 
   965  1FE5                     	;# 
   966  1FE6                     	;# 
   967  1FE7                     	;# 
   968  1FE8                     	;# 
   969  1FE8                     	;# 
   970  1FE9                     	;# 
   971  1FEA                     	;# 
   972  1FEA                     	;# 
   973  1FEB                     	;# 
   974  1FED                     	;# 
   975  1FEE                     	;# 
   976  1FEF                     	;# 
   977  0000                     	;# 
   978  0001                     	;# 
   979  0002                     	;# 
   980  0003                     	;# 
   981  0004                     	;# 
   982  0005                     	;# 
   983  0006                     	;# 
   984  0007                     	;# 
   985  0008                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000E                     	;# 
   991  0012                     	;# 
   992  0014                     	;# 
   993  0018                     	;# 
   994  001A                     	;# 
   995  009B                     	;# 
   996  009B                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009E                     	;# 
  1000  009F                     	;# 
  1001  0119                     	;# 
  1002  0119                     	;# 
  1003  0119                     	;# 
  1004  011A                     	;# 
  1005  011A                     	;# 
  1006  011A                     	;# 
  1007  011B                     	;# 
  1008  011B                     	;# 
  1009  011B                     	;# 
  1010  011B                     	;# 
  1011  011B                     	;# 
  1012  011C                     	;# 
  1013  011C                     	;# 
  1014  011C                     	;# 
  1015  011D                     	;# 
  1016  011D                     	;# 
  1017  011D                     	;# 
  1018  011E                     	;# 
  1019  011E                     	;# 
  1020  011E                     	;# 
  1021  011F                     	;# 
  1022  011F                     	;# 
  1023  011F                     	;# 
  1024  011F                     	;# 
  1025  011F                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  018F                     	;# 
  1030  0190                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  020C                     	;# 
  1034  020C                     	;# 
  1035  020D                     	;# 
  1036  020E                     	;# 
  1037  020F                     	;# 
  1038  020F                     	;# 
  1039  0210                     	;# 
  1040  0210                     	;# 
  1041  0211                     	;# 
  1042  0211                     	;# 
  1043  028C                     	;# 
  1044  028C                     	;# 
  1045  028D                     	;# 
  1046  028D                     	;# 
  1047  028E                     	;# 
  1048  028F                     	;# 
  1049  0290                     	;# 
  1050  0291                     	;# 
  1051  030C                     	;# 
  1052  030C                     	;# 
  1053  030D                     	;# 
  1054  030E                     	;# 
  1055  030F                     	;# 
  1056  0310                     	;# 
  1057  0310                     	;# 
  1058  0311                     	;# 
  1059  0312                     	;# 
  1060  0313                     	;# 
  1061  0314                     	;# 
  1062  0314                     	;# 
  1063  0315                     	;# 
  1064  0316                     	;# 
  1065  0318                     	;# 
  1066  0318                     	;# 
  1067  0319                     	;# 
  1068  031A                     	;# 
  1069  031C                     	;# 
  1070  031C                     	;# 
  1071  031D                     	;# 
  1072  031E                     	;# 
  1073  038C                     	;# 
  1074  038C                     	;# 
  1075  038D                     	;# 
  1076  038E                     	;# 
  1077  058C                     	;# 
  1078  058C                     	;# 
  1079  058D                     	;# 
  1080  058E                     	;# 
  1081  058F                     	;# 
  1082  058F                     	;# 
  1083  0590                     	;# 
  1084  0591                     	;# 
  1085  0592                     	;# 
  1086  0593                     	;# 
  1087  059C                     	;# 
  1088  059C                     	;# 
  1089  059D                     	;# 
  1090  059D                     	;# 
  1091  059E                     	;# 
  1092  059F                     	;# 
  1093  060C                     	;# 
  1094  060D                     	;# 
  1095  060E                     	;# 
  1096  060F                     	;# 
  1097  0610                     	;# 
  1098  0611                     	;# 
  1099  0612                     	;# 
  1100  0613                     	;# 
  1101  0614                     	;# 
  1102  070C                     	;# 
  1103  070D                     	;# 
  1104  070E                     	;# 
  1105  070F                     	;# 
  1106  0710                     	;# 
  1107  0711                     	;# 
  1108  0712                     	;# 
  1109  0713                     	;# 
  1110  0716                     	;# 
  1111  0717                     	;# 
  1112  0718                     	;# 
  1113  0719                     	;# 
  1114  071A                     	;# 
  1115  071B                     	;# 
  1116  071C                     	;# 
  1117  071D                     	;# 
  1118  0796                     	;# 
  1119  0797                     	;# 
  1120  0798                     	;# 
  1121  0799                     	;# 
  1122  079A                     	;# 
  1123  079B                     	;# 
  1124  080C                     	;# 
  1125  080D                     	;# 
  1126  080E                     	;# 
  1127  080F                     	;# 
  1128  0810                     	;# 
  1129  0811                     	;# 
  1130  0813                     	;# 
  1131  0814                     	;# 
  1132  081A                     	;# 
  1133  081A                     	;# 
  1134  081B                     	;# 
  1135  081C                     	;# 
  1136  081C                     	;# 
  1137  081D                     	;# 
  1138  081E                     	;# 
  1139  081F                     	;# 
  1140  088C                     	;# 
  1141  088D                     	;# 
  1142  088E                     	;# 
  1143  088F                     	;# 
  1144  0890                     	;# 
  1145  0891                     	;# 
  1146  0892                     	;# 
  1147  0893                     	;# 
  1148  0895                     	;# 
  1149  0896                     	;# 
  1150  090C                     	;# 
  1151  090E                     	;# 
  1152  090F                     	;# 
  1153  091F                     	;# 
  1154  098F                     	;# 
  1155  098F                     	;# 
  1156  0990                     	;# 
  1157  0991                     	;# 
  1158  0992                     	;# 
  1159  0993                     	;# 
  1160  0994                     	;# 
  1161  0995                     	;# 
  1162  0996                     	;# 
  1163  0997                     	;# 
  1164  1E0F                     	;# 
  1165  1E10                     	;# 
  1166  1E11                     	;# 
  1167  1E12                     	;# 
  1168  1E13                     	;# 
  1169  1E14                     	;# 
  1170  1E15                     	;# 
  1171  1E16                     	;# 
  1172  1E17                     	;# 
  1173  1E18                     	;# 
  1174  1E19                     	;# 
  1175  1E1A                     	;# 
  1176  1E1B                     	;# 
  1177  1E1C                     	;# 
  1178  1E1D                     	;# 
  1179  1E1E                     	;# 
  1180  1E1F                     	;# 
  1181  1E20                     	;# 
  1182  1E21                     	;# 
  1183  1E22                     	;# 
  1184  1E23                     	;# 
  1185  1E24                     	;# 
  1186  1E25                     	;# 
  1187  1E26                     	;# 
  1188  1E27                     	;# 
  1189  1E28                     	;# 
  1190  1E29                     	;# 
  1191  1E2A                     	;# 
  1192  1E2B                     	;# 
  1193  1E2C                     	;# 
  1194  1E2D                     	;# 
  1195  1E2E                     	;# 
  1196  1E2F                     	;# 
  1197  1E30                     	;# 
  1198  1E31                     	;# 
  1199  1E32                     	;# 
  1200  1E33                     	;# 
  1201  1E34                     	;# 
  1202  1E35                     	;# 
  1203  1E36                     	;# 
  1204  1E37                     	;# 
  1205  1E8F                     	;# 
  1206  1E90                     	;# 
  1207  1E91                     	;# 
  1208  1E92                     	;# 
  1209  1E93                     	;# 
  1210  1E9C                     	;# 
  1211  1EA1                     	;# 
  1212  1EA2                     	;# 
  1213  1EB1                     	;# 
  1214  1EBB                     	;# 
  1215  1EBC                     	;# 
  1216  1EBD                     	;# 
  1217  1EBE                     	;# 
  1218  1EC3                     	;# 
  1219  1EC5                     	;# 
  1220  1EC6                     	;# 
  1221  1EC7                     	;# 
  1222  1ECB                     	;# 
  1223  1ECC                     	;# 
  1224  1F10                     	;# 
  1225  1F11                     	;# 
  1226  1F12                     	;# 
  1227  1F13                     	;# 
  1228  1F14                     	;# 
  1229  1F15                     	;# 
  1230  1F20                     	;# 
  1231  1F21                     	;# 
  1232  1F22                     	;# 
  1233  1F23                     	;# 
  1234  1F24                     	;# 
  1235  1F25                     	;# 
  1236  1F38                     	;# 
  1237  1F39                     	;# 
  1238  1F3A                     	;# 
  1239  1F3B                     	;# 
  1240  1F3C                     	;# 
  1241  1F3D                     	;# 
  1242  1F3E                     	;# 
  1243  1F3F                     	;# 
  1244  1F4E                     	;# 
  1245  1F4F                     	;# 
  1246  1F50                     	;# 
  1247  1F51                     	;# 
  1248  1F52                     	;# 
  1249  1F53                     	;# 
  1250  1F54                     	;# 
  1251  1F55                     	;# 
  1252  1FE4                     	;# 
  1253  1FE5                     	;# 
  1254  1FE6                     	;# 
  1255  1FE7                     	;# 
  1256  1FE8                     	;# 
  1257  1FE8                     	;# 
  1258  1FE9                     	;# 
  1259  1FEA                     	;# 
  1260  1FEA                     	;# 
  1261  1FEB                     	;# 
  1262  1FED                     	;# 
  1263  1FEE                     	;# 
  1264  1FEF                     	;# 
  1265  0000                     	;# 
  1266  0001                     	;# 
  1267  0002                     	;# 
  1268  0003                     	;# 
  1269  0004                     	;# 
  1270  0005                     	;# 
  1271  0006                     	;# 
  1272  0007                     	;# 
  1273  0008                     	;# 
  1274  0009                     	;# 
  1275  000A                     	;# 
  1276  000B                     	;# 
  1277  000C                     	;# 
  1278  000E                     	;# 
  1279  0012                     	;# 
  1280  0014                     	;# 
  1281  0018                     	;# 
  1282  001A                     	;# 
  1283  009B                     	;# 
  1284  009B                     	;# 
  1285  009C                     	;# 
  1286  009D                     	;# 
  1287  009E                     	;# 
  1288  009F                     	;# 
  1289  0119                     	;# 
  1290  0119                     	;# 
  1291  0119                     	;# 
  1292  011A                     	;# 
  1293  011A                     	;# 
  1294  011A                     	;# 
  1295  011B                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011C                     	;# 
  1301  011C                     	;# 
  1302  011C                     	;# 
  1303  011D                     	;# 
  1304  011D                     	;# 
  1305  011D                     	;# 
  1306  011E                     	;# 
  1307  011E                     	;# 
  1308  011E                     	;# 
  1309  011F                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  018C                     	;# 
  1315  018D                     	;# 
  1316  018E                     	;# 
  1317  018F                     	;# 
  1318  0190                     	;# 
  1319  0191                     	;# 
  1320  0192                     	;# 
  1321  020C                     	;# 
  1322  020C                     	;# 
  1323  020D                     	;# 
  1324  020E                     	;# 
  1325  020F                     	;# 
  1326  020F                     	;# 
  1327  0210                     	;# 
  1328  0210                     	;# 
  1329  0211                     	;# 
  1330  0211                     	;# 
  1331  028C                     	;# 
  1332  028C                     	;# 
  1333  028D                     	;# 
  1334  028D                     	;# 
  1335  028E                     	;# 
  1336  028F                     	;# 
  1337  0290                     	;# 
  1338  0291                     	;# 
  1339  030C                     	;# 
  1340  030C                     	;# 
  1341  030D                     	;# 
  1342  030E                     	;# 
  1343  030F                     	;# 
  1344  0310                     	;# 
  1345  0310                     	;# 
  1346  0311                     	;# 
  1347  0312                     	;# 
  1348  0313                     	;# 
  1349  0314                     	;# 
  1350  0314                     	;# 
  1351  0315                     	;# 
  1352  0316                     	;# 
  1353  0318                     	;# 
  1354  0318                     	;# 
  1355  0319                     	;# 
  1356  031A                     	;# 
  1357  031C                     	;# 
  1358  031C                     	;# 
  1359  031D                     	;# 
  1360  031E                     	;# 
  1361  038C                     	;# 
  1362  038C                     	;# 
  1363  038D                     	;# 
  1364  038E                     	;# 
  1365  058C                     	;# 
  1366  058C                     	;# 
  1367  058D                     	;# 
  1368  058E                     	;# 
  1369  058F                     	;# 
  1370  058F                     	;# 
  1371  0590                     	;# 
  1372  0591                     	;# 
  1373  0592                     	;# 
  1374  0593                     	;# 
  1375  059C                     	;# 
  1376  059C                     	;# 
  1377  059D                     	;# 
  1378  059D                     	;# 
  1379  059E                     	;# 
  1380  059F                     	;# 
  1381  060C                     	;# 
  1382  060D                     	;# 
  1383  060E                     	;# 
  1384  060F                     	;# 
  1385  0610                     	;# 
  1386  0611                     	;# 
  1387  0612                     	;# 
  1388  0613                     	;# 
  1389  0614                     	;# 
  1390  070C                     	;# 
  1391  070D                     	;# 
  1392  070E                     	;# 
  1393  070F                     	;# 
  1394  0710                     	;# 
  1395  0711                     	;# 
  1396  0712                     	;# 
  1397  0713                     	;# 
  1398  0716                     	;# 
  1399  0717                     	;# 
  1400  0718                     	;# 
  1401  0719                     	;# 
  1402  071A                     	;# 
  1403  071B                     	;# 
  1404  071C                     	;# 
  1405  071D                     	;# 
  1406  0796                     	;# 
  1407  0797                     	;# 
  1408  0798                     	;# 
  1409  0799                     	;# 
  1410  079A                     	;# 
  1411  079B                     	;# 
  1412  080C                     	;# 
  1413  080D                     	;# 
  1414  080E                     	;# 
  1415  080F                     	;# 
  1416  0810                     	;# 
  1417  0811                     	;# 
  1418  0813                     	;# 
  1419  0814                     	;# 
  1420  081A                     	;# 
  1421  081A                     	;# 
  1422  081B                     	;# 
  1423  081C                     	;# 
  1424  081C                     	;# 
  1425  081D                     	;# 
  1426  081E                     	;# 
  1427  081F                     	;# 
  1428  088C                     	;# 
  1429  088D                     	;# 
  1430  088E                     	;# 
  1431  088F                     	;# 
  1432  0890                     	;# 
  1433  0891                     	;# 
  1434  0892                     	;# 
  1435  0893                     	;# 
  1436  0895                     	;# 
  1437  0896                     	;# 
  1438  090C                     	;# 
  1439  090E                     	;# 
  1440  090F                     	;# 
  1441  091F                     	;# 
  1442  098F                     	;# 
  1443  098F                     	;# 
  1444  0990                     	;# 
  1445  0991                     	;# 
  1446  0992                     	;# 
  1447  0993                     	;# 
  1448  0994                     	;# 
  1449  0995                     	;# 
  1450  0996                     	;# 
  1451  0997                     	;# 
  1452  1E0F                     	;# 
  1453  1E10                     	;# 
  1454  1E11                     	;# 
  1455  1E12                     	;# 
  1456  1E13                     	;# 
  1457  1E14                     	;# 
  1458  1E15                     	;# 
  1459  1E16                     	;# 
  1460  1E17                     	;# 
  1461  1E18                     	;# 
  1462  1E19                     	;# 
  1463  1E1A                     	;# 
  1464  1E1B                     	;# 
  1465  1E1C                     	;# 
  1466  1E1D                     	;# 
  1467  1E1E                     	;# 
  1468  1E1F                     	;# 
  1469  1E20                     	;# 
  1470  1E21                     	;# 
  1471  1E22                     	;# 
  1472  1E23                     	;# 
  1473  1E24                     	;# 
  1474  1E25                     	;# 
  1475  1E26                     	;# 
  1476  1E27                     	;# 
  1477  1E28                     	;# 
  1478  1E29                     	;# 
  1479  1E2A                     	;# 
  1480  1E2B                     	;# 
  1481  1E2C                     	;# 
  1482  1E2D                     	;# 
  1483  1E2E                     	;# 
  1484  1E2F                     	;# 
  1485  1E30                     	;# 
  1486  1E31                     	;# 
  1487  1E32                     	;# 
  1488  1E33                     	;# 
  1489  1E34                     	;# 
  1490  1E35                     	;# 
  1491  1E36                     	;# 
  1492  1E37                     	;# 
  1493  1E8F                     	;# 
  1494  1E90                     	;# 
  1495  1E91                     	;# 
  1496  1E92                     	;# 
  1497  1E93                     	;# 
  1498  1E9C                     	;# 
  1499  1EA1                     	;# 
  1500  1EA2                     	;# 
  1501  1EB1                     	;# 
  1502  1EBB                     	;# 
  1503  1EBC                     	;# 
  1504  1EBD                     	;# 
  1505  1EBE                     	;# 
  1506  1EC3                     	;# 
  1507  1EC5                     	;# 
  1508  1EC6                     	;# 
  1509  1EC7                     	;# 
  1510  1ECB                     	;# 
  1511  1ECC                     	;# 
  1512  1F10                     	;# 
  1513  1F11                     	;# 
  1514  1F12                     	;# 
  1515  1F13                     	;# 
  1516  1F14                     	;# 
  1517  1F15                     	;# 
  1518  1F20                     	;# 
  1519  1F21                     	;# 
  1520  1F22                     	;# 
  1521  1F23                     	;# 
  1522  1F24                     	;# 
  1523  1F25                     	;# 
  1524  1F38                     	;# 
  1525  1F39                     	;# 
  1526  1F3A                     	;# 
  1527  1F3B                     	;# 
  1528  1F3C                     	;# 
  1529  1F3D                     	;# 
  1530  1F3E                     	;# 
  1531  1F3F                     	;# 
  1532  1F4E                     	;# 
  1533  1F4F                     	;# 
  1534  1F50                     	;# 
  1535  1F51                     	;# 
  1536  1F52                     	;# 
  1537  1F53                     	;# 
  1538  1F54                     	;# 
  1539  1F55                     	;# 
  1540  1FE4                     	;# 
  1541  1FE5                     	;# 
  1542  1FE6                     	;# 
  1543  1FE7                     	;# 
  1544  1FE8                     	;# 
  1545  1FE8                     	;# 
  1546  1FE9                     	;# 
  1547  1FEA                     	;# 
  1548  1FEA                     	;# 
  1549  1FEB                     	;# 
  1550  1FED                     	;# 
  1551  1FEE                     	;# 
  1552  1FEF                     	;# 
  1553  0000                     	;# 
  1554  0001                     	;# 
  1555  0002                     	;# 
  1556  0003                     	;# 
  1557  0004                     	;# 
  1558  0005                     	;# 
  1559  0006                     	;# 
  1560  0007                     	;# 
  1561  0008                     	;# 
  1562  0009                     	;# 
  1563  000A                     	;# 
  1564  000B                     	;# 
  1565  000C                     	;# 
  1566  000E                     	;# 
  1567  0012                     	;# 
  1568  0014                     	;# 
  1569  0018                     	;# 
  1570  001A                     	;# 
  1571  009B                     	;# 
  1572  009B                     	;# 
  1573  009C                     	;# 
  1574  009D                     	;# 
  1575  009E                     	;# 
  1576  009F                     	;# 
  1577  0119                     	;# 
  1578  0119                     	;# 
  1579  0119                     	;# 
  1580  011A                     	;# 
  1581  011A                     	;# 
  1582  011A                     	;# 
  1583  011B                     	;# 
  1584  011B                     	;# 
  1585  011B                     	;# 
  1586  011B                     	;# 
  1587  011B                     	;# 
  1588  011C                     	;# 
  1589  011C                     	;# 
  1590  011C                     	;# 
  1591  011D                     	;# 
  1592  011D                     	;# 
  1593  011D                     	;# 
  1594  011E                     	;# 
  1595  011E                     	;# 
  1596  011E                     	;# 
  1597  011F                     	;# 
  1598  011F                     	;# 
  1599  011F                     	;# 
  1600  011F                     	;# 
  1601  011F                     	;# 
  1602  018C                     	;# 
  1603  018D                     	;# 
  1604  018E                     	;# 
  1605  018F                     	;# 
  1606  0190                     	;# 
  1607  0191                     	;# 
  1608  0192                     	;# 
  1609  020C                     	;# 
  1610  020C                     	;# 
  1611  020D                     	;# 
  1612  020E                     	;# 
  1613  020F                     	;# 
  1614  020F                     	;# 
  1615  0210                     	;# 
  1616  0210                     	;# 
  1617  0211                     	;# 
  1618  0211                     	;# 
  1619  028C                     	;# 
  1620  028C                     	;# 
  1621  028D                     	;# 
  1622  028D                     	;# 
  1623  028E                     	;# 
  1624  028F                     	;# 
  1625  0290                     	;# 
  1626  0291                     	;# 
  1627  030C                     	;# 
  1628  030C                     	;# 
  1629  030D                     	;# 
  1630  030E                     	;# 
  1631  030F                     	;# 
  1632  0310                     	;# 
  1633  0310                     	;# 
  1634  0311                     	;# 
  1635  0312                     	;# 
  1636  0313                     	;# 
  1637  0314                     	;# 
  1638  0314                     	;# 
  1639  0315                     	;# 
  1640  0316                     	;# 
  1641  0318                     	;# 
  1642  0318                     	;# 
  1643  0319                     	;# 
  1644  031A                     	;# 
  1645  031C                     	;# 
  1646  031C                     	;# 
  1647  031D                     	;# 
  1648  031E                     	;# 
  1649  038C                     	;# 
  1650  038C                     	;# 
  1651  038D                     	;# 
  1652  038E                     	;# 
  1653  058C                     	;# 
  1654  058C                     	;# 
  1655  058D                     	;# 
  1656  058E                     	;# 
  1657  058F                     	;# 
  1658  058F                     	;# 
  1659  0590                     	;# 
  1660  0591                     	;# 
  1661  0592                     	;# 
  1662  0593                     	;# 
  1663  059C                     	;# 
  1664  059C                     	;# 
  1665  059D                     	;# 
  1666  059D                     	;# 
  1667  059E                     	;# 
  1668  059F                     	;# 
  1669  060C                     	;# 
  1670  060D                     	;# 
  1671  060E                     	;# 
  1672  060F                     	;# 
  1673  0610                     	;# 
  1674  0611                     	;# 
  1675  0612                     	;# 
  1676  0613                     	;# 
  1677  0614                     	;# 
  1678  070C                     	;# 
  1679  070D                     	;# 
  1680  070E                     	;# 
  1681  070F                     	;# 
  1682  0710                     	;# 
  1683  0711                     	;# 
  1684  0712                     	;# 
  1685  0713                     	;# 
  1686  0716                     	;# 
  1687  0717                     	;# 
  1688  0718                     	;# 
  1689  0719                     	;# 
  1690  071A                     	;# 
  1691  071B                     	;# 
  1692  071C                     	;# 
  1693  071D                     	;# 
  1694  0796                     	;# 
  1695  0797                     	;# 
  1696  0798                     	;# 
  1697  0799                     	;# 
  1698  079A                     	;# 
  1699  079B                     	;# 
  1700  080C                     	;# 
  1701  080D                     	;# 
  1702  080E                     	;# 
  1703  080F                     	;# 
  1704  0810                     	;# 
  1705  0811                     	;# 
  1706  0813                     	;# 
  1707  0814                     	;# 
  1708  081A                     	;# 
  1709  081A                     	;# 
  1710  081B                     	;# 
  1711  081C                     	;# 
  1712  081C                     	;# 
  1713  081D                     	;# 
  1714  081E                     	;# 
  1715  081F                     	;# 
  1716  088C                     	;# 
  1717  088D                     	;# 
  1718  088E                     	;# 
  1719  088F                     	;# 
  1720  0890                     	;# 
  1721  0891                     	;# 
  1722  0892                     	;# 
  1723  0893                     	;# 
  1724  0895                     	;# 
  1725  0896                     	;# 
  1726  090C                     	;# 
  1727  090E                     	;# 
  1728  090F                     	;# 
  1729  091F                     	;# 
  1730  098F                     	;# 
  1731  098F                     	;# 
  1732  0990                     	;# 
  1733  0991                     	;# 
  1734  0992                     	;# 
  1735  0993                     	;# 
  1736  0994                     	;# 
  1737  0995                     	;# 
  1738  0996                     	;# 
  1739  0997                     	;# 
  1740  1E0F                     	;# 
  1741  1E10                     	;# 
  1742  1E11                     	;# 
  1743  1E12                     	;# 
  1744  1E13                     	;# 
  1745  1E14                     	;# 
  1746  1E15                     	;# 
  1747  1E16                     	;# 
  1748  1E17                     	;# 
  1749  1E18                     	;# 
  1750  1E19                     	;# 
  1751  1E1A                     	;# 
  1752  1E1B                     	;# 
  1753  1E1C                     	;# 
  1754  1E1D                     	;# 
  1755  1E1E                     	;# 
  1756  1E1F                     	;# 
  1757  1E20                     	;# 
  1758  1E21                     	;# 
  1759  1E22                     	;# 
  1760  1E23                     	;# 
  1761  1E24                     	;# 
  1762  1E25                     	;# 
  1763  1E26                     	;# 
  1764  1E27                     	;# 
  1765  1E28                     	;# 
  1766  1E29                     	;# 
  1767  1E2A                     	;# 
  1768  1E2B                     	;# 
  1769  1E2C                     	;# 
  1770  1E2D                     	;# 
  1771  1E2E                     	;# 
  1772  1E2F                     	;# 
  1773  1E30                     	;# 
  1774  1E31                     	;# 
  1775  1E32                     	;# 
  1776  1E33                     	;# 
  1777  1E34                     	;# 
  1778  1E35                     	;# 
  1779  1E36                     	;# 
  1780  1E37                     	;# 
  1781  1E8F                     	;# 
  1782  1E90                     	;# 
  1783  1E91                     	;# 
  1784  1E92                     	;# 
  1785  1E93                     	;# 
  1786  1E9C                     	;# 
  1787  1EA1                     	;# 
  1788  1EA2                     	;# 
  1789  1EB1                     	;# 
  1790  1EBB                     	;# 
  1791  1EBC                     	;# 
  1792  1EBD                     	;# 
  1793  1EBE                     	;# 
  1794  1EC3                     	;# 
  1795  1EC5                     	;# 
  1796  1EC6                     	;# 
  1797  1EC7                     	;# 
  1798  1ECB                     	;# 
  1799  1ECC                     	;# 
  1800  1F10                     	;# 
  1801  1F11                     	;# 
  1802  1F12                     	;# 
  1803  1F13                     	;# 
  1804  1F14                     	;# 
  1805  1F15                     	;# 
  1806  1F20                     	;# 
  1807  1F21                     	;# 
  1808  1F22                     	;# 
  1809  1F23                     	;# 
  1810  1F24                     	;# 
  1811  1F25                     	;# 
  1812  1F38                     	;# 
  1813  1F39                     	;# 
  1814  1F3A                     	;# 
  1815  1F3B                     	;# 
  1816  1F3C                     	;# 
  1817  1F3D                     	;# 
  1818  1F3E                     	;# 
  1819  1F3F                     	;# 
  1820  1F4E                     	;# 
  1821  1F4F                     	;# 
  1822  1F50                     	;# 
  1823  1F51                     	;# 
  1824  1F52                     	;# 
  1825  1F53                     	;# 
  1826  1F54                     	;# 
  1827  1F55                     	;# 
  1828  1FE4                     	;# 
  1829  1FE5                     	;# 
  1830  1FE6                     	;# 
  1831  1FE7                     	;# 
  1832  1FE8                     	;# 
  1833  1FE8                     	;# 
  1834  1FE9                     	;# 
  1835  1FEA                     	;# 
  1836  1FEA                     	;# 
  1837  1FEB                     	;# 
  1838  1FED                     	;# 
  1839  1FEE                     	;# 
  1840  1FEF                     	;# 
  1841  0000                     	;# 
  1842  0001                     	;# 
  1843  0002                     	;# 
  1844  0003                     	;# 
  1845  0004                     	;# 
  1846  0005                     	;# 
  1847  0006                     	;# 
  1848  0007                     	;# 
  1849  0008                     	;# 
  1850  0009                     	;# 
  1851  000A                     	;# 
  1852  000B                     	;# 
  1853  000C                     	;# 
  1854  000E                     	;# 
  1855  0012                     	;# 
  1856  0014                     	;# 
  1857  0018                     	;# 
  1858  001A                     	;# 
  1859  009B                     	;# 
  1860  009B                     	;# 
  1861  009C                     	;# 
  1862  009D                     	;# 
  1863  009E                     	;# 
  1864  009F                     	;# 
  1865  0119                     	;# 
  1866  0119                     	;# 
  1867  0119                     	;# 
  1868  011A                     	;# 
  1869  011A                     	;# 
  1870  011A                     	;# 
  1871  011B                     	;# 
  1872  011B                     	;# 
  1873  011B                     	;# 
  1874  011B                     	;# 
  1875  011B                     	;# 
  1876  011C                     	;# 
  1877  011C                     	;# 
  1878  011C                     	;# 
  1879  011D                     	;# 
  1880  011D                     	;# 
  1881  011D                     	;# 
  1882  011E                     	;# 
  1883  011E                     	;# 
  1884  011E                     	;# 
  1885  011F                     	;# 
  1886  011F                     	;# 
  1887  011F                     	;# 
  1888  011F                     	;# 
  1889  011F                     	;# 
  1890  018C                     	;# 
  1891  018D                     	;# 
  1892  018E                     	;# 
  1893  018F                     	;# 
  1894  0190                     	;# 
  1895  0191                     	;# 
  1896  0192                     	;# 
  1897  020C                     	;# 
  1898  020C                     	;# 
  1899  020D                     	;# 
  1900  020E                     	;# 
  1901  020F                     	;# 
  1902  020F                     	;# 
  1903  0210                     	;# 
  1904  0210                     	;# 
  1905  0211                     	;# 
  1906  0211                     	;# 
  1907  028C                     	;# 
  1908  028C                     	;# 
  1909  028D                     	;# 
  1910  028D                     	;# 
  1911  028E                     	;# 
  1912  028F                     	;# 
  1913  0290                     	;# 
  1914  0291                     	;# 
  1915  030C                     	;# 
  1916  030C                     	;# 
  1917  030D                     	;# 
  1918  030E                     	;# 
  1919  030F                     	;# 
  1920  0310                     	;# 
  1921  0310                     	;# 
  1922  0311                     	;# 
  1923  0312                     	;# 
  1924  0313                     	;# 
  1925  0314                     	;# 
  1926  0314                     	;# 
  1927  0315                     	;# 
  1928  0316                     	;# 
  1929  0318                     	;# 
  1930  0318                     	;# 
  1931  0319                     	;# 
  1932  031A                     	;# 
  1933  031C                     	;# 
  1934  031C                     	;# 
  1935  031D                     	;# 
  1936  031E                     	;# 
  1937  038C                     	;# 
  1938  038C                     	;# 
  1939  038D                     	;# 
  1940  038E                     	;# 
  1941  058C                     	;# 
  1942  058C                     	;# 
  1943  058D                     	;# 
  1944  058E                     	;# 
  1945  058F                     	;# 
  1946  058F                     	;# 
  1947  0590                     	;# 
  1948  0591                     	;# 
  1949  0592                     	;# 
  1950  0593                     	;# 
  1951  059C                     	;# 
  1952  059C                     	;# 
  1953  059D                     	;# 
  1954  059D                     	;# 
  1955  059E                     	;# 
  1956  059F                     	;# 
  1957  060C                     	;# 
  1958  060D                     	;# 
  1959  060E                     	;# 
  1960  060F                     	;# 
  1961  0610                     	;# 
  1962  0611                     	;# 
  1963  0612                     	;# 
  1964  0613                     	;# 
  1965  0614                     	;# 
  1966  070C                     	;# 
  1967  070D                     	;# 
  1968  070E                     	;# 
  1969  070F                     	;# 
  1970  0710                     	;# 
  1971  0711                     	;# 
  1972  0712                     	;# 
  1973  0713                     	;# 
  1974  0716                     	;# 
  1975  0717                     	;# 
  1976  0718                     	;# 
  1977  0719                     	;# 
  1978  071A                     	;# 
  1979  071B                     	;# 
  1980  071C                     	;# 
  1981  071D                     	;# 
  1982  0796                     	;# 
  1983  0797                     	;# 
  1984  0798                     	;# 
  1985  0799                     	;# 
  1986  079A                     	;# 
  1987  079B                     	;# 
  1988  080C                     	;# 
  1989  080D                     	;# 
  1990  080E                     	;# 
  1991  080F                     	;# 
  1992  0810                     	;# 
  1993  0811                     	;# 
  1994  0813                     	;# 
  1995  0814                     	;# 
  1996  081A                     	;# 
  1997  081A                     	;# 
  1998  081B                     	;# 
  1999  081C                     	;# 
  2000  081C                     	;# 
  2001  081D                     	;# 
  2002  081E                     	;# 
  2003  081F                     	;# 
  2004  088C                     	;# 
  2005  088D                     	;# 
  2006  088E                     	;# 
  2007  088F                     	;# 
  2008  0890                     	;# 
  2009  0891                     	;# 
  2010  0892                     	;# 
  2011  0893                     	;# 
  2012  0895                     	;# 
  2013  0896                     	;# 
  2014  090C                     	;# 
  2015  090E                     	;# 
  2016  090F                     	;# 
  2017  091F                     	;# 
  2018  098F                     	;# 
  2019  098F                     	;# 
  2020  0990                     	;# 
  2021  0991                     	;# 
  2022  0992                     	;# 
  2023  0993                     	;# 
  2024  0994                     	;# 
  2025  0995                     	;# 
  2026  0996                     	;# 
  2027  0997                     	;# 
  2028  1E0F                     	;# 
  2029  1E10                     	;# 
  2030  1E11                     	;# 
  2031  1E12                     	;# 
  2032  1E13                     	;# 
  2033  1E14                     	;# 
  2034  1E15                     	;# 
  2035  1E16                     	;# 
  2036  1E17                     	;# 
  2037  1E18                     	;# 
  2038  1E19                     	;# 
  2039  1E1A                     	;# 
  2040  1E1B                     	;# 
  2041  1E1C                     	;# 
  2042  1E1D                     	;# 
  2043  1E1E                     	;# 
  2044  1E1F                     	;# 
  2045  1E20                     	;# 
  2046  1E21                     	;# 
  2047  1E22                     	;# 
  2048  1E23                     	;# 
  2049  1E24                     	;# 
  2050  1E25                     	;# 
  2051  1E26                     	;# 
  2052  1E27                     	;# 
  2053  1E28                     	;# 
  2054  1E29                     	;# 
  2055  1E2A                     	;# 
  2056  1E2B                     	;# 
  2057  1E2C                     	;# 
  2058  1E2D                     	;# 
  2059  1E2E                     	;# 
  2060  1E2F                     	;# 
  2061  1E30                     	;# 
  2062  1E31                     	;# 
  2063  1E32                     	;# 
  2064  1E33                     	;# 
  2065  1E34                     	;# 
  2066  1E35                     	;# 
  2067  1E36                     	;# 
  2068  1E37                     	;# 
  2069  1E8F                     	;# 
  2070  1E90                     	;# 
  2071  1E91                     	;# 
  2072  1E92                     	;# 
  2073  1E93                     	;# 
  2074  1E9C                     	;# 
  2075  1EA1                     	;# 
  2076  1EA2                     	;# 
  2077  1EB1                     	;# 
  2078  1EBB                     	;# 
  2079  1EBC                     	;# 
  2080  1EBD                     	;# 
  2081  1EBE                     	;# 
  2082  1EC3                     	;# 
  2083  1EC5                     	;# 
  2084  1EC6                     	;# 
  2085  1EC7                     	;# 
  2086  1ECB                     	;# 
  2087  1ECC                     	;# 
  2088  1F10                     	;# 
  2089  1F11                     	;# 
  2090  1F12                     	;# 
  2091  1F13                     	;# 
  2092  1F14                     	;# 
  2093  1F15                     	;# 
  2094  1F20                     	;# 
  2095  1F21                     	;# 
  2096  1F22                     	;# 
  2097  1F23                     	;# 
  2098  1F24                     	;# 
  2099  1F25                     	;# 
  2100  1F38                     	;# 
  2101  1F39                     	;# 
  2102  1F3A                     	;# 
  2103  1F3B                     	;# 
  2104  1F3C                     	;# 
  2105  1F3D                     	;# 
  2106  1F3E                     	;# 
  2107  1F3F                     	;# 
  2108  1F4E                     	;# 
  2109  1F4F                     	;# 
  2110  1F50                     	;# 
  2111  1F51                     	;# 
  2112  1F52                     	;# 
  2113  1F53                     	;# 
  2114  1F54                     	;# 
  2115  1F55                     	;# 
  2116  1FE4                     	;# 
  2117  1FE5                     	;# 
  2118  1FE6                     	;# 
  2119  1FE7                     	;# 
  2120  1FE8                     	;# 
  2121  1FE8                     	;# 
  2122  1FE9                     	;# 
  2123  1FEA                     	;# 
  2124  1FEA                     	;# 
  2125  1FEB                     	;# 
  2126  1FED                     	;# 
  2127  1FEE                     	;# 
  2128  1FEF                     	;# 
  2129  0000                     	;# 
  2130  0001                     	;# 
  2131  0002                     	;# 
  2132  0003                     	;# 
  2133  0004                     	;# 
  2134  0005                     	;# 
  2135  0006                     	;# 
  2136  0007                     	;# 
  2137  0008                     	;# 
  2138  0009                     	;# 
  2139  000A                     	;# 
  2140  000B                     	;# 
  2141  000C                     	;# 
  2142  000E                     	;# 
  2143  0012                     	;# 
  2144  0014                     	;# 
  2145  0018                     	;# 
  2146  001A                     	;# 
  2147  009B                     	;# 
  2148  009B                     	;# 
  2149  009C                     	;# 
  2150  009D                     	;# 
  2151  009E                     	;# 
  2152  009F                     	;# 
  2153  0119                     	;# 
  2154  0119                     	;# 
  2155  0119                     	;# 
  2156  011A                     	;# 
  2157  011A                     	;# 
  2158  011A                     	;# 
  2159  011B                     	;# 
  2160  011B                     	;# 
  2161  011B                     	;# 
  2162  011B                     	;# 
  2163  011B                     	;# 
  2164  011C                     	;# 
  2165  011C                     	;# 
  2166  011C                     	;# 
  2167  011D                     	;# 
  2168  011D                     	;# 
  2169  011D                     	;# 
  2170  011E                     	;# 
  2171  011E                     	;# 
  2172  011E                     	;# 
  2173  011F                     	;# 
  2174  011F                     	;# 
  2175  011F                     	;# 
  2176  011F                     	;# 
  2177  011F                     	;# 
  2178  018C                     	;# 
  2179  018D                     	;# 
  2180  018E                     	;# 
  2181  018F                     	;# 
  2182  0190                     	;# 
  2183  0191                     	;# 
  2184  0192                     	;# 
  2185  020C                     	;# 
  2186  020C                     	;# 
  2187  020D                     	;# 
  2188  020E                     	;# 
  2189  020F                     	;# 
  2190  020F                     	;# 
  2191  0210                     	;# 
  2192  0210                     	;# 
  2193  0211                     	;# 
  2194  0211                     	;# 
  2195  028C                     	;# 
  2196  028C                     	;# 
  2197  028D                     	;# 
  2198  028D                     	;# 
  2199  028E                     	;# 
  2200  028F                     	;# 
  2201  0290                     	;# 
  2202  0291                     	;# 
  2203  030C                     	;# 
  2204  030C                     	;# 
  2205  030D                     	;# 
  2206  030E                     	;# 
  2207  030F                     	;# 
  2208  0310                     	;# 
  2209  0310                     	;# 
  2210  0311                     	;# 
  2211  0312                     	;# 
  2212  0313                     	;# 
  2213  0314                     	;# 
  2214  0314                     	;# 
  2215  0315                     	;# 
  2216  0316                     	;# 
  2217  0318                     	;# 
  2218  0318                     	;# 
  2219  0319                     	;# 
  2220  031A                     	;# 
  2221  031C                     	;# 
  2222  031C                     	;# 
  2223  031D                     	;# 
  2224  031E                     	;# 
  2225  038C                     	;# 
  2226  038C                     	;# 
  2227  038D                     	;# 
  2228  038E                     	;# 
  2229  058C                     	;# 
  2230  058C                     	;# 
  2231  058D                     	;# 
  2232  058E                     	;# 
  2233  058F                     	;# 
  2234  058F                     	;# 
  2235  0590                     	;# 
  2236  0591                     	;# 
  2237  0592                     	;# 
  2238  0593                     	;# 
  2239  059C                     	;# 
  2240  059C                     	;# 
  2241  059D                     	;# 
  2242  059D                     	;# 
  2243  059E                     	;# 
  2244  059F                     	;# 
  2245  060C                     	;# 
  2246  060D                     	;# 
  2247  060E                     	;# 
  2248  060F                     	;# 
  2249  0610                     	;# 
  2250  0611                     	;# 
  2251  0612                     	;# 
  2252  0613                     	;# 
  2253  0614                     	;# 
  2254  070C                     	;# 
  2255  070D                     	;# 
  2256  070E                     	;# 
  2257  070F                     	;# 
  2258  0710                     	;# 
  2259  0711                     	;# 
  2260  0712                     	;# 
  2261  0713                     	;# 
  2262  0716                     	;# 
  2263  0717                     	;# 
  2264  0718                     	;# 
  2265  0719                     	;# 
  2266  071A                     	;# 
  2267  071B                     	;# 
  2268  071C                     	;# 
  2269  071D                     	;# 
  2270  0796                     	;# 
  2271  0797                     	;# 
  2272  0798                     	;# 
  2273  0799                     	;# 
  2274  079A                     	;# 
  2275  079B                     	;# 
  2276  080C                     	;# 
  2277  080D                     	;# 
  2278  080E                     	;# 
  2279  080F                     	;# 
  2280  0810                     	;# 
  2281  0811                     	;# 
  2282  0813                     	;# 
  2283  0814                     	;# 
  2284  081A                     	;# 
  2285  081A                     	;# 
  2286  081B                     	;# 
  2287  081C                     	;# 
  2288  081C                     	;# 
  2289  081D                     	;# 
  2290  081E                     	;# 
  2291  081F                     	;# 
  2292  088C                     	;# 
  2293  088D                     	;# 
  2294  088E                     	;# 
  2295  088F                     	;# 
  2296  0890                     	;# 
  2297  0891                     	;# 
  2298  0892                     	;# 
  2299  0893                     	;# 
  2300  0895                     	;# 
  2301  0896                     	;# 
  2302  090C                     	;# 
  2303  090E                     	;# 
  2304  090F                     	;# 
  2305  091F                     	;# 
  2306  098F                     	;# 
  2307  098F                     	;# 
  2308  0990                     	;# 
  2309  0991                     	;# 
  2310  0992                     	;# 
  2311  0993                     	;# 
  2312  0994                     	;# 
  2313  0995                     	;# 
  2314  0996                     	;# 
  2315  0997                     	;# 
  2316  1E0F                     	;# 
  2317  1E10                     	;# 
  2318  1E11                     	;# 
  2319  1E12                     	;# 
  2320  1E13                     	;# 
  2321  1E14                     	;# 
  2322  1E15                     	;# 
  2323  1E16                     	;# 
  2324  1E17                     	;# 
  2325  1E18                     	;# 
  2326  1E19                     	;# 
  2327  1E1A                     	;# 
  2328  1E1B                     	;# 
  2329  1E1C                     	;# 
  2330  1E1D                     	;# 
  2331  1E1E                     	;# 
  2332  1E1F                     	;# 
  2333  1E20                     	;# 
  2334  1E21                     	;# 
  2335  1E22                     	;# 
  2336  1E23                     	;# 
  2337  1E24                     	;# 
  2338  1E25                     	;# 
  2339  1E26                     	;# 
  2340  1E27                     	;# 
  2341  1E28                     	;# 
  2342  1E29                     	;# 
  2343  1E2A                     	;# 
  2344  1E2B                     	;# 
  2345  1E2C                     	;# 
  2346  1E2D                     	;# 
  2347  1E2E                     	;# 
  2348  1E2F                     	;# 
  2349  1E30                     	;# 
  2350  1E31                     	;# 
  2351  1E32                     	;# 
  2352  1E33                     	;# 
  2353  1E34                     	;# 
  2354  1E35                     	;# 
  2355  1E36                     	;# 
  2356  1E37                     	;# 
  2357  1E8F                     	;# 
  2358  1E90                     	;# 
  2359  1E91                     	;# 
  2360  1E92                     	;# 
  2361  1E93                     	;# 
  2362  1E9C                     	;# 
  2363  1EA1                     	;# 
  2364  1EA2                     	;# 
  2365  1EB1                     	;# 
  2366  1EBB                     	;# 
  2367  1EBC                     	;# 
  2368  1EBD                     	;# 
  2369  1EBE                     	;# 
  2370  1EC3                     	;# 
  2371  1EC5                     	;# 
  2372  1EC6                     	;# 
  2373  1EC7                     	;# 
  2374  1ECB                     	;# 
  2375  1ECC                     	;# 
  2376  1F10                     	;# 
  2377  1F11                     	;# 
  2378  1F12                     	;# 
  2379  1F13                     	;# 
  2380  1F14                     	;# 
  2381  1F15                     	;# 
  2382  1F20                     	;# 
  2383  1F21                     	;# 
  2384  1F22                     	;# 
  2385  1F23                     	;# 
  2386  1F24                     	;# 
  2387  1F25                     	;# 
  2388  1F38                     	;# 
  2389  1F39                     	;# 
  2390  1F3A                     	;# 
  2391  1F3B                     	;# 
  2392  1F3C                     	;# 
  2393  1F3D                     	;# 
  2394  1F3E                     	;# 
  2395  1F3F                     	;# 
  2396  1F4E                     	;# 
  2397  1F4F                     	;# 
  2398  1F50                     	;# 
  2399  1F51                     	;# 
  2400  1F52                     	;# 
  2401  1F53                     	;# 
  2402  1F54                     	;# 
  2403  1F55                     	;# 
  2404  1FE4                     	;# 
  2405  1FE5                     	;# 
  2406  1FE6                     	;# 
  2407  1FE7                     	;# 
  2408  1FE8                     	;# 
  2409  1FE8                     	;# 
  2410  1FE9                     	;# 
  2411  1FEA                     	;# 
  2412  1FEA                     	;# 
  2413  1FEB                     	;# 
  2414  1FED                     	;# 
  2415  1FEE                     	;# 
  2416  1FEF                     	;# 
  2417  0000                     	;# 
  2418  0001                     	;# 
  2419  0002                     	;# 
  2420  0003                     	;# 
  2421  0004                     	;# 
  2422  0005                     	;# 
  2423  0006                     	;# 
  2424  0007                     	;# 
  2425  0008                     	;# 
  2426  0009                     	;# 
  2427  000A                     	;# 
  2428  000B                     	;# 
  2429  000C                     	;# 
  2430  000E                     	;# 
  2431  0012                     	;# 
  2432  0014                     	;# 
  2433  0018                     	;# 
  2434  001A                     	;# 
  2435  009B                     	;# 
  2436  009B                     	;# 
  2437  009C                     	;# 
  2438  009D                     	;# 
  2439  009E                     	;# 
  2440  009F                     	;# 
  2441  0119                     	;# 
  2442  0119                     	;# 
  2443  0119                     	;# 
  2444  011A                     	;# 
  2445  011A                     	;# 
  2446  011A                     	;# 
  2447  011B                     	;# 
  2448  011B                     	;# 
  2449  011B                     	;# 
  2450  011B                     	;# 
  2451  011B                     	;# 
  2452  011C                     	;# 
  2453  011C                     	;# 
  2454  011C                     	;# 
  2455  011D                     	;# 
  2456  011D                     	;# 
  2457  011D                     	;# 
  2458  011E                     	;# 
  2459  011E                     	;# 
  2460  011E                     	;# 
  2461  011F                     	;# 
  2462  011F                     	;# 
  2463  011F                     	;# 
  2464  011F                     	;# 
  2465  011F                     	;# 
  2466  018C                     	;# 
  2467  018D                     	;# 
  2468  018E                     	;# 
  2469  018F                     	;# 
  2470  0190                     	;# 
  2471  0191                     	;# 
  2472  0192                     	;# 
  2473  020C                     	;# 
  2474  020C                     	;# 
  2475  020D                     	;# 
  2476  020E                     	;# 
  2477  020F                     	;# 
  2478  020F                     	;# 
  2479  0210                     	;# 
  2480  0210                     	;# 
  2481  0211                     	;# 
  2482  0211                     	;# 
  2483  028C                     	;# 
  2484  028C                     	;# 
  2485  028D                     	;# 
  2486  028D                     	;# 
  2487  028E                     	;# 
  2488  028F                     	;# 
  2489  0290                     	;# 
  2490  0291                     	;# 
  2491  030C                     	;# 
  2492  030C                     	;# 
  2493  030D                     	;# 
  2494  030E                     	;# 
  2495  030F                     	;# 
  2496  0310                     	;# 
  2497  0310                     	;# 
  2498  0311                     	;# 
  2499  0312                     	;# 
  2500  0313                     	;# 
  2501  0314                     	;# 
  2502  0314                     	;# 
  2503  0315                     	;# 
  2504  0316                     	;# 
  2505  0318                     	;# 
  2506  0318                     	;# 
  2507  0319                     	;# 
  2508  031A                     	;# 
  2509  031C                     	;# 
  2510  031C                     	;# 
  2511  031D                     	;# 
  2512  031E                     	;# 
  2513  038C                     	;# 
  2514  038C                     	;# 
  2515  038D                     	;# 
  2516  038E                     	;# 
  2517  058C                     	;# 
  2518  058C                     	;# 
  2519  058D                     	;# 
  2520  058E                     	;# 
  2521  058F                     	;# 
  2522  058F                     	;# 
  2523  0590                     	;# 
  2524  0591                     	;# 
  2525  0592                     	;# 
  2526  0593                     	;# 
  2527  059C                     	;# 
  2528  059C                     	;# 
  2529  059D                     	;# 
  2530  059D                     	;# 
  2531  059E                     	;# 
  2532  059F                     	;# 
  2533  060C                     	;# 
  2534  060D                     	;# 
  2535  060E                     	;# 
  2536  060F                     	;# 
  2537  0610                     	;# 
  2538  0611                     	;# 
  2539  0612                     	;# 
  2540  0613                     	;# 
  2541  0614                     	;# 
  2542  070C                     	;# 
  2543  070D                     	;# 
  2544  070E                     	;# 
  2545  070F                     	;# 
  2546  0710                     	;# 
  2547  0711                     	;# 
  2548  0712                     	;# 
  2549  0713                     	;# 
  2550  0716                     	;# 
  2551  0717                     	;# 
  2552  0718                     	;# 
  2553  0719                     	;# 
  2554  071A                     	;# 
  2555  071B                     	;# 
  2556  071C                     	;# 
  2557  071D                     	;# 
  2558  0796                     	;# 
  2559  0797                     	;# 
  2560  0798                     	;# 
  2561  0799                     	;# 
  2562  079A                     	;# 
  2563  079B                     	;# 
  2564  080C                     	;# 
  2565  080D                     	;# 
  2566  080E                     	;# 
  2567  080F                     	;# 
  2568  0810                     	;# 
  2569  0811                     	;# 
  2570  0813                     	;# 
  2571  0814                     	;# 
  2572  081A                     	;# 
  2573  081A                     	;# 
  2574  081B                     	;# 
  2575  081C                     	;# 
  2576  081C                     	;# 
  2577  081D                     	;# 
  2578  081E                     	;# 
  2579  081F                     	;# 
  2580  088C                     	;# 
  2581  088D                     	;# 
  2582  088E                     	;# 
  2583  088F                     	;# 
  2584  0890                     	;# 
  2585  0891                     	;# 
  2586  0892                     	;# 
  2587  0893                     	;# 
  2588  0895                     	;# 
  2589  0896                     	;# 
  2590  090C                     	;# 
  2591  090E                     	;# 
  2592  090F                     	;# 
  2593  091F                     	;# 
  2594  098F                     	;# 
  2595  098F                     	;# 
  2596  0990                     	;# 
  2597  0991                     	;# 
  2598  0992                     	;# 
  2599  0993                     	;# 
  2600  0994                     	;# 
  2601  0995                     	;# 
  2602  0996                     	;# 
  2603  0997                     	;# 
  2604  1E0F                     	;# 
  2605  1E10                     	;# 
  2606  1E11                     	;# 
  2607  1E12                     	;# 
  2608  1E13                     	;# 
  2609  1E14                     	;# 
  2610  1E15                     	;# 
  2611  1E16                     	;# 
  2612  1E17                     	;# 
  2613  1E18                     	;# 
  2614  1E19                     	;# 
  2615  1E1A                     	;# 
  2616  1E1B                     	;# 
  2617  1E1C                     	;# 
  2618  1E1D                     	;# 
  2619  1E1E                     	;# 
  2620  1E1F                     	;# 
  2621  1E20                     	;# 
  2622  1E21                     	;# 
  2623  1E22                     	;# 
  2624  1E23                     	;# 
  2625  1E24                     	;# 
  2626  1E25                     	;# 
  2627  1E26                     	;# 
  2628  1E27                     	;# 
  2629  1E28                     	;# 
  2630  1E29                     	;# 
  2631  1E2A                     	;# 
  2632  1E2B                     	;# 
  2633  1E2C                     	;# 
  2634  1E2D                     	;# 
  2635  1E2E                     	;# 
  2636  1E2F                     	;# 
  2637  1E30                     	;# 
  2638  1E31                     	;# 
  2639  1E32                     	;# 
  2640  1E33                     	;# 
  2641  1E34                     	;# 
  2642  1E35                     	;# 
  2643  1E36                     	;# 
  2644  1E37                     	;# 
  2645  1E8F                     	;# 
  2646  1E90                     	;# 
  2647  1E91                     	;# 
  2648  1E92                     	;# 
  2649  1E93                     	;# 
  2650  1E9C                     	;# 
  2651  1EA1                     	;# 
  2652  1EA2                     	;# 
  2653  1EB1                     	;# 
  2654  1EBB                     	;# 
  2655  1EBC                     	;# 
  2656  1EBD                     	;# 
  2657  1EBE                     	;# 
  2658  1EC3                     	;# 
  2659  1EC5                     	;# 
  2660  1EC6                     	;# 
  2661  1EC7                     	;# 
  2662  1ECB                     	;# 
  2663  1ECC                     	;# 
  2664  1F10                     	;# 
  2665  1F11                     	;# 
  2666  1F12                     	;# 
  2667  1F13                     	;# 
  2668  1F14                     	;# 
  2669  1F15                     	;# 
  2670  1F20                     	;# 
  2671  1F21                     	;# 
  2672  1F22                     	;# 
  2673  1F23                     	;# 
  2674  1F24                     	;# 
  2675  1F25                     	;# 
  2676  1F38                     	;# 
  2677  1F39                     	;# 
  2678  1F3A                     	;# 
  2679  1F3B                     	;# 
  2680  1F3C                     	;# 
  2681  1F3D                     	;# 
  2682  1F3E                     	;# 
  2683  1F3F                     	;# 
  2684  1F4E                     	;# 
  2685  1F4F                     	;# 
  2686  1F50                     	;# 
  2687  1F51                     	;# 
  2688  1F52                     	;# 
  2689  1F53                     	;# 
  2690  1F54                     	;# 
  2691  1F55                     	;# 
  2692  1FE4                     	;# 
  2693  1FE5                     	;# 
  2694  1FE6                     	;# 
  2695  1FE7                     	;# 
  2696  1FE8                     	;# 
  2697  1FE8                     	;# 
  2698  1FE9                     	;# 
  2699  1FEA                     	;# 
  2700  1FEA                     	;# 
  2701  1FEB                     	;# 
  2702  1FED                     	;# 
  2703  1FEE                     	;# 
  2704  1FEF                     	;# 
  2705  0000                     	;# 
  2706  0001                     	;# 
  2707  0002                     	;# 
  2708  0003                     	;# 
  2709  0004                     	;# 
  2710  0005                     	;# 
  2711  0006                     	;# 
  2712  0007                     	;# 
  2713  0008                     	;# 
  2714  0009                     	;# 
  2715  000A                     	;# 
  2716  000B                     	;# 
  2717  000C                     	;# 
  2718  000E                     	;# 
  2719  0012                     	;# 
  2720  0014                     	;# 
  2721  0018                     	;# 
  2722  001A                     	;# 
  2723  009B                     	;# 
  2724  009B                     	;# 
  2725  009C                     	;# 
  2726  009D                     	;# 
  2727  009E                     	;# 
  2728  009F                     	;# 
  2729  0119                     	;# 
  2730  0119                     	;# 
  2731  0119                     	;# 
  2732  011A                     	;# 
  2733  011A                     	;# 
  2734  011A                     	;# 
  2735  011B                     	;# 
  2736  011B                     	;# 
  2737  011B                     	;# 
  2738  011B                     	;# 
  2739  011B                     	;# 
  2740  011C                     	;# 
  2741  011C                     	;# 
  2742  011C                     	;# 
  2743  011D                     	;# 
  2744  011D                     	;# 
  2745  011D                     	;# 
  2746  011E                     	;# 
  2747  011E                     	;# 
  2748  011E                     	;# 
  2749  011F                     	;# 
  2750  011F                     	;# 
  2751  011F                     	;# 
  2752  011F                     	;# 
  2753  011F                     	;# 
  2754  018C                     	;# 
  2755  018D                     	;# 
  2756  018E                     	;# 
  2757  018F                     	;# 
  2758  0190                     	;# 
  2759  0191                     	;# 
  2760  0192                     	;# 
  2761  020C                     	;# 
  2762  020C                     	;# 
  2763  020D                     	;# 
  2764  020E                     	;# 
  2765  020F                     	;# 
  2766  020F                     	;# 
  2767  0210                     	;# 
  2768  0210                     	;# 
  2769  0211                     	;# 
  2770  0211                     	;# 
  2771  028C                     	;# 
  2772  028C                     	;# 
  2773  028D                     	;# 
  2774  028D                     	;# 
  2775  028E                     	;# 
  2776  028F                     	;# 
  2777  0290                     	;# 
  2778  0291                     	;# 
  2779  030C                     	;# 
  2780  030C                     	;# 
  2781  030D                     	;# 
  2782  030E                     	;# 
  2783  030F                     	;# 
  2784  0310                     	;# 
  2785  0310                     	;# 
  2786  0311                     	;# 
  2787  0312                     	;# 
  2788  0313                     	;# 
  2789  0314                     	;# 
  2790  0314                     	;# 
  2791  0315                     	;# 
  2792  0316                     	;# 
  2793  0318                     	;# 
  2794  0318                     	;# 
  2795  0319                     	;# 
  2796  031A                     	;# 
  2797  031C                     	;# 
  2798  031C                     	;# 
  2799  031D                     	;# 
  2800  031E                     	;# 
  2801  038C                     	;# 
  2802  038C                     	;# 
  2803  038D                     	;# 
  2804  038E                     	;# 
  2805  058C                     	;# 
  2806  058C                     	;# 
  2807  058D                     	;# 
  2808  058E                     	;# 
  2809  058F                     	;# 
  2810  058F                     	;# 
  2811  0590                     	;# 
  2812  0591                     	;# 
  2813  0592                     	;# 
  2814  0593                     	;# 
  2815  059C                     	;# 
  2816  059C                     	;# 
  2817  059D                     	;# 
  2818  059D                     	;# 
  2819  059E                     	;# 
  2820  059F                     	;# 
  2821  060C                     	;# 
  2822  060D                     	;# 
  2823  060E                     	;# 
  2824  060F                     	;# 
  2825  0610                     	;# 
  2826  0611                     	;# 
  2827  0612                     	;# 
  2828  0613                     	;# 
  2829  0614                     	;# 
  2830  070C                     	;# 
  2831  070D                     	;# 
  2832  070E                     	;# 
  2833  070F                     	;# 
  2834  0710                     	;# 
  2835  0711                     	;# 
  2836  0712                     	;# 
  2837  0713                     	;# 
  2838  0716                     	;# 
  2839  0717                     	;# 
  2840  0718                     	;# 
  2841  0719                     	;# 
  2842  071A                     	;# 
  2843  071B                     	;# 
  2844  071C                     	;# 
  2845  071D                     	;# 
  2846  0796                     	;# 
  2847  0797                     	;# 
  2848  0798                     	;# 
  2849  0799                     	;# 
  2850  079A                     	;# 
  2851  079B                     	;# 
  2852  080C                     	;# 
  2853  080D                     	;# 
  2854  080E                     	;# 
  2855  080F                     	;# 
  2856  0810                     	;# 
  2857  0811                     	;# 
  2858  0813                     	;# 
  2859  0814                     	;# 
  2860  081A                     	;# 
  2861  081A                     	;# 
  2862  081B                     	;# 
  2863  081C                     	;# 
  2864  081C                     	;# 
  2865  081D                     	;# 
  2866  081E                     	;# 
  2867  081F                     	;# 
  2868  088C                     	;# 
  2869  088D                     	;# 
  2870  088E                     	;# 
  2871  088F                     	;# 
  2872  0890                     	;# 
  2873  0891                     	;# 
  2874  0892                     	;# 
  2875  0893                     	;# 
  2876  0895                     	;# 
  2877  0896                     	;# 
  2878  090C                     	;# 
  2879  090E                     	;# 
  2880  090F                     	;# 
  2881  091F                     	;# 
  2882  098F                     	;# 
  2883  098F                     	;# 
  2884  0990                     	;# 
  2885  0991                     	;# 
  2886  0992                     	;# 
  2887  0993                     	;# 
  2888  0994                     	;# 
  2889  0995                     	;# 
  2890  0996                     	;# 
  2891  0997                     	;# 
  2892  1E0F                     	;# 
  2893  1E10                     	;# 
  2894  1E11                     	;# 
  2895  1E12                     	;# 
  2896  1E13                     	;# 
  2897  1E14                     	;# 
  2898  1E15                     	;# 
  2899  1E16                     	;# 
  2900  1E17                     	;# 
  2901  1E18                     	;# 
  2902  1E19                     	;# 
  2903  1E1A                     	;# 
  2904  1E1B                     	;# 
  2905  1E1C                     	;# 
  2906  1E1D                     	;# 
  2907  1E1E                     	;# 
  2908  1E1F                     	;# 
  2909  1E20                     	;# 
  2910  1E21                     	;# 
  2911  1E22                     	;# 
  2912  1E23                     	;# 
  2913  1E24                     	;# 
  2914  1E25                     	;# 
  2915  1E26                     	;# 
  2916  1E27                     	;# 
  2917  1E28                     	;# 
  2918  1E29                     	;# 
  2919  1E2A                     	;# 
  2920  1E2B                     	;# 
  2921  1E2C                     	;# 
  2922  1E2D                     	;# 
  2923  1E2E                     	;# 
  2924  1E2F                     	;# 
  2925  1E30                     	;# 
  2926  1E31                     	;# 
  2927  1E32                     	;# 
  2928  1E33                     	;# 
  2929  1E34                     	;# 
  2930  1E35                     	;# 
  2931  1E36                     	;# 
  2932  1E37                     	;# 
  2933  1E8F                     	;# 
  2934  1E90                     	;# 
  2935  1E91                     	;# 
  2936  1E92                     	;# 
  2937  1E93                     	;# 
  2938  1E9C                     	;# 
  2939  1EA1                     	;# 
  2940  1EA2                     	;# 
  2941  1EB1                     	;# 
  2942  1EBB                     	;# 
  2943  1EBC                     	;# 
  2944  1EBD                     	;# 
  2945  1EBE                     	;# 
  2946  1EC3                     	;# 
  2947  1EC5                     	;# 
  2948  1EC6                     	;# 
  2949  1EC7                     	;# 
  2950  1ECB                     	;# 
  2951  1ECC                     	;# 
  2952  1F10                     	;# 
  2953  1F11                     	;# 
  2954  1F12                     	;# 
  2955  1F13                     	;# 
  2956  1F14                     	;# 
  2957  1F15                     	;# 
  2958  1F20                     	;# 
  2959  1F21                     	;# 
  2960  1F22                     	;# 
  2961  1F23                     	;# 
  2962  1F24                     	;# 
  2963  1F25                     	;# 
  2964  1F38                     	;# 
  2965  1F39                     	;# 
  2966  1F3A                     	;# 
  2967  1F3B                     	;# 
  2968  1F3C                     	;# 
  2969  1F3D                     	;# 
  2970  1F3E                     	;# 
  2971  1F3F                     	;# 
  2972  1F4E                     	;# 
  2973  1F4F                     	;# 
  2974  1F50                     	;# 
  2975  1F51                     	;# 
  2976  1F52                     	;# 
  2977  1F53                     	;# 
  2978  1F54                     	;# 
  2979  1F55                     	;# 
  2980  1FE4                     	;# 
  2981  1FE5                     	;# 
  2982  1FE6                     	;# 
  2983  1FE7                     	;# 
  2984  1FE8                     	;# 
  2985  1FE8                     	;# 
  2986  1FE9                     	;# 
  2987  1FEA                     	;# 
  2988  1FEA                     	;# 
  2989  1FEB                     	;# 
  2990  1FED                     	;# 
  2991  1FEE                     	;# 
  2992  1FEF                     	;# 
  2993                           
  2994                           	psect	stringtext1
  2995  0199                     __pstringtext1:
  2996  0199                     _powerBitTable:
  2997  0199  3400               	retlw	0
  2998  019A  3400               	retlw	0
  2999  019B  3400               	retlw	0
  3000  019C  3401               	retlw	1
  3001  019D  3400               	retlw	0
  3002  019E  3400               	retlw	0
  3003  019F  3401               	retlw	1
  3004  01A0  3410               	retlw	16
  3005  01A1  3400               	retlw	0
  3006  01A2  3401               	retlw	1
  3007  01A3  3401               	retlw	1
  3008  01A4  3401               	retlw	1
  3009  01A5  3441               	retlw	65
  3010  01A6  3410               	retlw	16
  3011  01A7  3404               	retlw	4
  3012  01A8  3411               	retlw	17
  3013  01A9  3442               	retlw	66
  3014  01AA  3408               	retlw	8
  3015  01AB  3411               	retlw	17
  3016  01AC  3411               	retlw	17
  3017  01AD  3411               	retlw	17
  3018  01AE  3449               	retlw	73
  3019  01AF  3424               	retlw	36
  3020  01B0  3412               	retlw	18
  3021  01B1  3449               	retlw	73
  3022  01B2  3492               	retlw	146
  3023  01B3  3424               	retlw	36
  3024  01B4  3425               	retlw	37
  3025  01B5  3425               	retlw	37
  3026  01B6  3425               	retlw	37
  3027  01B7  3495               	retlw	149
  3028  01B8  3452               	retlw	82
  3029  01B9  3429               	retlw	41
  3030  01BA  3455               	retlw	85
  3031  01BB  34A5               	retlw	165
  3032  01BC  342A               	retlw	42
  3033  01BD  3455               	retlw	85
  3034  01BE  3455               	retlw	85
  3035  01BF  3455               	retlw	85
  3036  01C0  34AB               	retlw	171
  3037  01C1  345A               	retlw	90
  3038  01C2  3455               	retlw	85
  3039  01C3  346B               	retlw	107
  3040  01C4  34B5               	retlw	181
  3041  01C5  3456               	retlw	86
  3042  01C6  345B               	retlw	91
  3043  01C7  345B               	retlw	91
  3044  01C8  345B               	retlw	91
  3045  01C9  34DB               	retlw	219
  3046  01CA  34B6               	retlw	182
  3047  01CB  346D               	retlw	109
  3048  01CC  34B7               	retlw	183
  3049  01CD  34DB               	retlw	219
  3050  01CE  346D               	retlw	109
  3051  01CF  3477               	retlw	119
  3052  01D0  3477               	retlw	119
  3053  01D1  3477               	retlw	119
  3054  01D2  34EF               	retlw	239
  3055  01D3  34BD               	retlw	189
  3056  01D4  3477               	retlw	119
  3057  01D5  34DF               	retlw	223
  3058  01D6  34F7               	retlw	247
  3059  01D7  347D               	retlw	125
  3060  01D8  347F               	retlw	127
  3061  01D9  347F               	retlw	127
  3062  01DA  347F               	retlw	127
  3063  01DB  34FF               	retlw	255
  3064  01DC  34F7               	retlw	247
  3065  01DD  347F               	retlw	127
  3066  01DE  34FF               	retlw	255
  3067  01DF  34FF               	retlw	255
  3068  01E0  347F               	retlw	127
  3069  01E1  34FF               	retlw	255
  3070  01E2  34FF               	retlw	255
  3071  01E3  34FF               	retlw	255
  3072  01E4                     __end_of_powerBitTable:
  3073                           
  3074                           	psect	stringtext2
  3075  0563                     __pstringtext2:
  3076  0563                     _pwmLevel:
  3077  0563  3400               	retlw	0
  3078  0564  3400               	retlw	0
  3079  0565  34AB               	retlw	171
  3080  0566  3400               	retlw	0
  3081  0567  3455               	retlw	85
  3082  0568  3401               	retlw	1
  3083  0569  3400               	retlw	0
  3084  056A  3402               	retlw	2
  3085  056B  34AB               	retlw	171
  3086  056C  3402               	retlw	2
  3087  056D  3455               	retlw	85
  3088  056E  3403               	retlw	3
  3089  056F  34FF               	retlw	255
  3090  0570  3403               	retlw	3
  3091  0571                     __end_of_pwmLevel:
  3092                           
  3093                           	psect	nvBANK0
  3094  0055                     __pnvBANK0:
  3095  0055                     _powerBits:
  3096  0055                     	ds	3
  3097  0058                     _ADC_InterruptHandler:
  3098  0058                     	ds	2
  3099                           
  3100                           	psect	nvBANK1
  3101  00BA                     __pnvBANK1:
  3102  00BA                     _EUSART1_ErrorHandler:
  3103  00BA                     	ds	2
  3104  00BC                     _EUSART1_OverrunErrorHandler:
  3105  00BC                     	ds	2
  3106  00BE                     _EUSART1_FramingErrorHandler:
  3107  00BE                     	ds	2
  3108  00C0                     _EUSART1_RxDefaultInterruptHandler:
  3109  00C0                     	ds	2
  3110  0018                     _LATAbits	set	24
  3111  000B                     _INTCONbits	set	11
  3112  0014                     _TRISC	set	20
  3113  0012                     _TRISA	set	18
  3114  001A                     _LATC	set	26
  3115  0018                     _LATA	set	24
  3116  009D                     _ADCON0bits	set	157
  3117  009F                     _ADACT	set	159
  3118  009D                     _ADCON0	set	157
  3119  009C                     _ADRESH	set	156
  3120  009B                     _ADRESL	set	155
  3121  009E                     _ADCON1	set	158
  3122  0119                     _RC1REG	set	281
  3123  011D                     _RC1STAbits	set	285
  3124  011A                     _TX1REG	set	282
  3125  011C                     _SP1BRGH	set	284
  3126  011B                     _SP1BRGL	set	283
  3127  011E                     _TX1STA	set	286
  3128  011D                     _RC1STA	set	285
  3129  011F                     _BAUD1CON	set	287
  3130  028E                     _T2CON	set	654
  3131  028C                     _T2TMR	set	652
  3132  028D                     _T2PR	set	653
  3133  0291                     _T2RST	set	657
  3134  028F                     _T2HLT	set	655
  3135  0290                     _T2CLKCON	set	656
  3136  0314                     _PWM3DCL	set	788
  3137  0315                     _PWM3DCH	set	789
  3138  0316                     _PWM3CON	set	790
  3139  059E                     _T0CON0	set	1438
  3140  059C                     _TMR0L	set	1436
  3141  059D                     _TMR0H	set	1437
  3142  059F                     _T0CON1	set	1439
  3143  070D                     _PIR1bits	set	1805
  3144  0717                     _PIE1bits	set	1815
  3145  0710                     _PIR4bits	set	1808
  3146  070F                     _PIR3bits	set	1807
  3147  0719                     _PIE3bits	set	1817
  3148  070C                     _PIR0bits	set	1804
  3149  079B                     _PMD5	set	1947
  3150  079A                     _PMD4	set	1946
  3151  0799                     _PMD3	set	1945
  3152  0798                     _PMD2	set	1944
  3153  0797                     _PMD1	set	1943
  3154  0796                     _PMD0	set	1942
  3155  0892                     _OSCTUNE	set	2194
  3156  0890                     _OSCSTAT	set	2192
  3157  0893                     _OSCFRQ	set	2195
  3158  0891                     _OSCEN	set	2193
  3159  088F                     _OSCCON3	set	2191
  3160  088D                     _OSCCON1	set	2189
  3161  090C                     _FVRCON	set	2316
  3162  1ECB                     _RX1DTPPS	set	7883
  3163  1F22                     _RC2PPS	set	7970
  3164  1F24                     _RC4PPS	set	7972
  3165  1F52                     _INLVLC	set	8018
  3166  1F3C                     _INLVLA	set	7996
  3167  1F51                     _SLRCONC	set	8017
  3168  1F3B                     _SLRCONA	set	7995
  3169  1F50                     _ODCONC	set	8016
  3170  1F3A                     _ODCONA	set	7994
  3171  1F4F                     _WPUC	set	8015
  3172  1F39                     _WPUA	set	7993
  3173  1F38                     _ANSELA	set	7992
  3174  1F4E                     _ANSELC	set	8014
  3175                           
  3176                           	psect	stringtext3
  3177  047E                     __pstringtext3:
  3178  047E                     STR_11:
  3179  047E  3423               	retlw	35	;'#'
  3180  047F  3420               	retlw	32	;' '
  3181  0480  3441               	retlw	65	;'A'
  3182  0481  3463               	retlw	99	;'c'
  3183  0482  3474               	retlw	116	;'t'
  3184  0483  3469               	retlw	105	;'i'
  3185  0484  3476               	retlw	118	;'v'
  3186  0485  3465               	retlw	101	;'e'
  3187  0486  3420               	retlw	32	;' '
  3188  0487  3463               	retlw	99	;'c'
  3189  0488  3468               	retlw	104	;'h'
  3190  0489  3461               	retlw	97	;'a'
  3191  048A  346E               	retlw	110	;'n'
  3192  048B  346E               	retlw	110	;'n'
  3193  048C  3465               	retlw	101	;'e'
  3194  048D  346C               	retlw	108	;'l'
  3195  048E  3473               	retlw	115	;'s'
  3196  048F  3420               	retlw	32	;' '
  3197  0490  3473               	retlw	115	;'s'
  3198  0491  3465               	retlw	101	;'e'
  3199  0492  3474               	retlw	116	;'t'
  3200  0493  3420               	retlw	32	;' '
  3201  0494  3474               	retlw	116	;'t'
  3202  0495  346F               	retlw	111	;'o'
  3203  0496  3420               	retlw	32	;' '
  3204  0497  3400               	retlw	0
  3205                           
  3206                           	psect	stringtext4
  3207  04C9                     __pstringtext4:
  3208  04C9                     STR_12:
  3209  04C9  3423               	retlw	35	;'#'
  3210  04CA  3420               	retlw	32	;' '
  3211  04CB  3444               	retlw	68	;'D'
  3212  04CC  3443               	retlw	67	;'C'
  3213  04CD  3420               	retlw	32	;' '
  3214  04CE  3466               	retlw	102	;'f'
  3215  04CF  3461               	retlw	97	;'a'
  3216  04D0  346E               	retlw	110	;'n'
  3217  04D1  3420               	retlw	32	;' '
  3218  04D2  3473               	retlw	115	;'s'
  3219  04D3  3470               	retlw	112	;'p'
  3220  04D4  3465               	retlw	101	;'e'
  3221  04D5  3465               	retlw	101	;'e'
  3222  04D6  3464               	retlw	100	;'d'
  3223  04D7  3420               	retlw	32	;' '
  3224  04D8  3469               	retlw	105	;'i'
  3225  04D9  3473               	retlw	115	;'s'
  3226  04DA  3420               	retlw	32	;' '
  3227  04DB  346E               	retlw	110	;'n'
  3228  04DC  346F               	retlw	111	;'o'
  3229  04DD  3477               	retlw	119	;'w'
  3230  04DE  3420               	retlw	32	;' '
  3231  04DF  3400               	retlw	0
  3232                           
  3233                           	psect	stringtext5
  3234  04E0                     __pstringtext5:
  3235  04E0                     STR_13:
  3236  04E0  3423               	retlw	35	;'#'
  3237  04E1  3420               	retlw	32	;' '
  3238  04E2  3448               	retlw	72	;'H'
  3239  04E3  3465               	retlw	101	;'e'
  3240  04E4  3461               	retlw	97	;'a'
  3241  04E5  3474               	retlw	116	;'t'
  3242  04E6  3465               	retlw	101	;'e'
  3243  04E7  3472               	retlw	114	;'r'
  3244  04E8  3420               	retlw	32	;' '
  3245  04E9  3470               	retlw	112	;'p'
  3246  04EA  346F               	retlw	111	;'o'
  3247  04EB  3477               	retlw	119	;'w'
  3248  04EC  3465               	retlw	101	;'e'
  3249  04ED  3472               	retlw	114	;'r'
  3250  04EE  3420               	retlw	32	;' '
  3251  04EF  3469               	retlw	105	;'i'
  3252  04F0  3473               	retlw	115	;'s'
  3253  04F1  3420               	retlw	32	;' '
  3254  04F2  346E               	retlw	110	;'n'
  3255  04F3  346F               	retlw	111	;'o'
  3256  04F4  3477               	retlw	119	;'w'
  3257  04F5  3420               	retlw	32	;' '
  3258  04F6  3400               	retlw	0
  3259                           
  3260                           	psect	stringtext6
  3261  05EB                     __pstringtext6:
  3262  05EB                     STR_9:
  3263  05EB  3432               	retlw	50	;'2'
  3264  05EC  3435               	retlw	53	;'5'
  3265  05ED  342C               	retlw	44	;','
  3266  05EE  3438               	retlw	56	;'8'
  3267  05EF  3430               	retlw	48	;'0'
  3268  05F0  342C               	retlw	44	;','
  3269  05F1  3400               	retlw	0
  3270                           
  3271                           	psect	stringtext7
  3272  05F2                     __pstringtext7:
  3273  05F2                     STR_5:
  3274  05F2  3444               	retlw	68	;'D'
  3275  05F3  3443               	retlw	67	;'C'
  3276  05F4  3446               	retlw	70	;'F'
  3277  05F5  3441               	retlw	65	;'A'
  3278  05F6  344E               	retlw	78	;'N'
  3279  05F7  343B               	retlw	59	;';'
  3280  05F8  3400               	retlw	0
  3281                           
  3282                           	psect	stringtext8
  3283  0600                     __pstringtext8:
  3284  0600                     STR_3:
  3285  0600  3443               	retlw	67	;'C'
  3286  0601  3448               	retlw	72	;'H'
  3287  0602  3441               	retlw	65	;'A'
  3288  0603  344E               	retlw	78	;'N'
  3289  0604  343B               	retlw	59	;';'
  3290  0605  3400               	retlw	0
  3291                           
  3292                           	psect	stringtext9
  3293  0612                     __pstringtext9:
  3294  0612                     STR_10:
  3295  0612  342C               	retlw	44	;','
  3296  0613  3430               	retlw	48	;'0'
  3297  0614  342C               	retlw	44	;','
  3298  0615  3430               	retlw	48	;'0'
  3299  0616  3400               	retlw	0
  3300                           
  3301                           	psect	stringtext10
  3302  0617                     __pstringtext10:
  3303  0617                     STR_7:
  3304  0617  344F               	retlw	79	;'O'
  3305  0618  3454               	retlw	84	;'T'
  3306  0619  3431               	retlw	49	;'1'
  3307  061A  343B               	retlw	59	;';'
  3308  061B  3400               	retlw	0
  3309                           
  3310                           	psect	stringtext11
  3311  061C                     __pstringtext11:
  3312  061C                     STR_1:
  3313  061C  3452               	retlw	82	;'R'
  3314  061D  3445               	retlw	69	;'E'
  3315  061E  3441               	retlw	65	;'A'
  3316  061F  3444               	retlw	68	;'D'
  3317  0620  3400               	retlw	0
  3318                           
  3319                           	psect	stringtext12
  3320  0000                     __pstringtext12:
  3321  0617                     
  3322                           	psect	cinit
  3323  001A                     start_initialization:	
  3324                           ; #config settings
  3325                           
  3326  001A                     __initialization:
  3327                           
  3328                           ; Clear objects allocated to COMMON
  3329  001A  01F0               	clrf	__pbssCOMMON& (0+127)
  3330  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3331  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3332  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3333  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3334                           
  3335                           ; Clear objects allocated to BANK0
  3336  001F  3040               	movlw	low __pbssBANK0
  3337  0020  0084               	movwf	4
  3338  0021  3000               	movlw	high __pbssBANK0
  3339  0022  0085               	movwf	5
  3340  0023  3015               	movlw	21
  3341  0024  2606               	fcall	clear_ram0
  3342  0025                     end_of_initialization:	
  3343                           ;End of C runtime variable initialization code
  3344                           
  3345  0025                     __end_of__initialization:
  3346  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3347  0026  0140               	movlb	0
  3348  0027  2828               	ljmp	_main	;jump to C main() function
  3349                           
  3350                           	psect	bssCOMMON
  3351  0070                     __pbssCOMMON:
  3352  0070                     _tempBufferIndex:
  3353  0070                     	ds	1
  3354  0071                     _periodCounter:
  3355  0071                     	ds	1
  3356  0072                     _eusart1RxCount:
  3357  0072                     	ds	1
  3358  0073                     _eusart1RxTail:
  3359  0073                     	ds	1
  3360  0074                     _eusart1RxHead:
  3361  0074                     	ds	1
  3362                           
  3363                           	psect	bssBANK0
  3364  0040                     __pbssBANK0:
  3365  0040                     _eusart1RxStatusBuffer:
  3366  0040                     	ds	8
  3367  0048                     _eusart1RxBuffer:
  3368  0048                     	ds	8
  3369  0050                     _tempBuffer:
  3370  0050                     	ds	4
  3371  0054                     _eusart1RxLastError:
  3372  0054                     	ds	1
  3373                           
  3374                           	psect	clrtext
  3375  0606                     clear_ram0:	
  3376                           ;	Called with FSR0 containing the base address, and
  3377                           ;	WREG with the size to clear
  3378                           
  3379  0606  0064               	clrwdt	;clear the watchdog before getting into this loop
  3380  0607                     clrloop0:
  3381  0607  0180               	clrf	0	;clear RAM location pointed to by FSR
  3382  0608  3101               	addfsr 0,1
  3383  0609  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3384  060A  2E07               	goto	clrloop0	;have we reached the end yet?
  3385  060B  3400               	retlw	0	;all done for this memory range, return
  3386                           
  3387                           	psect	cstackBANK1
  3388  00A0                     __pcstackBANK1:
  3389  00A0                     main@readBuffer:
  3390                           
  3391                           ; 15 bytes @ 0x0
  3392  00A0                     	ds	15
  3393  00AF                     main@parameters:
  3394                           
  3395                           ; 5 bytes @ 0xF
  3396  00AF                     	ds	5
  3397  00B4                     main@beanTemp:
  3398                           
  3399                           ; 1 bytes @ 0x14
  3400  00B4                     	ds	1
  3401  00B5                     main@readByte:
  3402                           
  3403                           ; 1 bytes @ 0x15
  3404  00B5                     	ds	1
  3405  00B6                     main@dcFanSpeed:
  3406                           
  3407                           ; 1 bytes @ 0x16
  3408  00B6                     	ds	1
  3409  00B7                     main@heaterPower:
  3410                           
  3411                           ; 1 bytes @ 0x17
  3412  00B7                     	ds	1
  3413  00B8                     main@index:
  3414                           
  3415                           ; 1 bytes @ 0x18
  3416  00B8                     	ds	1
  3417  00B9                     main@aCommand:
  3418                           
  3419                           ; 1 bytes @ 0x19
  3420  00B9                     	ds	1
  3421                           
  3422                           	psect	cstackCOMMON
  3423  0075                     __pcstackCOMMON:
  3424  0075                     ?_EUSART1_Receive_ISR:
  3425  0075                     ?_EUSART1_DefaultFramingErrorHandler:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428  0075                     ??_EUSART1_DefaultFramingErrorHandler:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431  0075                     ?_EUSART1_DefaultOverrunErrorHandler:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434  0075                     ??_EUSART1_DefaultOverrunErrorHandler:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437  0075                     ?_EUSART1_DefaultErrorHandler:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440  0075                     ?_EUSART1_RxDataHandler:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443  0075                     ??_EUSART1_RxDataHandler:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446  0075                     ?_ADC_ISR:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449  0075                     ?_PMD_Initialize:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452  0075                     ?_OSCILLATOR_Initialize:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455  0075                     ?_ADC_Initialize:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458  0075                     ?_ADC_DefaultInterruptHandler:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461  0075                     ?_ADC_SelectChannel:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464  0075                     ?_sendLf2Serial:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467  0075                     ?_TMR0_Initialize:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470  0075                     ?_PWM3_Initialize:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473  0075                     ?_EUSART1_Initialize:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476  0075                     ?_EUSART1_Read:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479  0075                     ?_EUSART1_Write:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482  0075                     ?_TMR2_Initialize:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485  0075                     ?_PIN_MANAGER_Initialize:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488  0075                     ?_INTERRUPT_InterruptManager:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491  0075                     ?_FVR_Initialize:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494  0075                     ?_SYSTEM_Initialize:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497  0075                     ?_string2int:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500  0075                     ?_sendTemperature:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503  0075                     ?_sendChannelsReply:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506  0075                     ?_setDcFanSpeed:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  0075                     ?_setHeaterPower:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  0075                     ?_getBeanTemperature:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  0075                     ?_main:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518  0075                     ?_ADC_GetConversionResult:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521                           
  3522                           ; 2 bytes @ 0x0
  3523  0075                     	ds	1
  3524  0076                     ??_EUSART1_Receive_ISR:
  3525  0076                     ??_EUSART1_DefaultErrorHandler:	
  3526                           ; 1 bytes @ 0x1
  3527                           
  3528                           
  3529                           ; 1 bytes @ 0x1
  3530  0076                     	ds	1
  3531  0077                     ??_ADC_DefaultInterruptHandler:
  3532  0077                     ??_ADC_GetConversionResult:	
  3533                           ; 1 bytes @ 0x2
  3534                           
  3535                           
  3536                           ; 1 bytes @ 0x2
  3537  0077                     	ds	1
  3538  0078                     ADC_DefaultInterruptHandler@result:
  3539                           
  3540                           ; 2 bytes @ 0x3
  3541  0078                     	ds	2
  3542  007A                     ??_ADC_ISR:
  3543  007A                     ??_INTERRUPT_InterruptManager:	
  3544                           ; 1 bytes @ 0x5
  3545                           
  3546                           
  3547                           	psect	cstackBANK0
  3548  0020                     __pcstackBANK0:	
  3549                           ; 1 bytes @ 0x5
  3550                           
  3551  0020                     ?_EUSART1_SetRxInterruptHandler:
  3552  0020                     ?_EUSART1_SetFramingErrorHandler:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558  0020                     ?_EUSART1_SetErrorHandler:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0020                     ??_PMD_Initialize:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564  0020                     ??_OSCILLATOR_Initialize:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567  0020                     ?_ADC_SetInterruptHandler:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570  0020                     ??_ADC_SelectChannel:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0020                     ?_getParams:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0020                     ??_TMR0_Initialize:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  0020                     ??_PWM3_Initialize:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  0020                     ?_PWM3_LoadDutyValue:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  0020                     ??_EUSART1_Read:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  0020                     ??_EUSART1_Write:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0020                     ??_TMR2_Initialize:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0020                     ??_PIN_MANAGER_Initialize:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0020                     ??_FVR_Initialize:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0020                     ?_setPowerBits:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0020                     ?_isEqual:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0020                     ?_startsWith:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0020                     ?_convert2Celsius:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0020                     ?___bmul:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0020                     ?___lbdiv:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0020                     ?___wmul:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  0020                     EUSART1_Write@txData:	
  3622                           ; 2 bytes @ 0x0
  3623                           
  3624  0020                     getParams@params:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0020                     ___bmul@multiplicand:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  0020                     ___lbdiv@divisor:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  0020                     PWM3_LoadDutyValue@dutyValue:	
  3634                           ; 1 bytes @ 0x0
  3635                           
  3636  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  3637                           ; 2 bytes @ 0x0
  3638                           
  3639  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  3640                           ; 2 bytes @ 0x0
  3641                           
  3642  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  3643                           ; 2 bytes @ 0x0
  3644                           
  3645  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  3646                           ; 2 bytes @ 0x0
  3647                           
  3648  0020                     ADC_SetInterruptHandler@InterruptHandler:	
  3649                           ; 2 bytes @ 0x0
  3650                           
  3651  0020                     isEqual@str1:	
  3652                           ; 2 bytes @ 0x0
  3653                           
  3654  0020                     startsWith@str1:	
  3655                           ; 2 bytes @ 0x0
  3656                           
  3657  0020                     convert2Celsius@avg_result:	
  3658                           ; 2 bytes @ 0x0
  3659                           
  3660  0020                     ___wmul@multiplier:	
  3661                           ; 2 bytes @ 0x0
  3662                           
  3663  0020                     setPowerBits@value:	
  3664                           ; 2 bytes @ 0x0
  3665                           
  3666                           
  3667                           ; 3 bytes @ 0x0
  3668  0020                     	ds	1
  3669  0021                     ??_getParams:
  3670  0021                     ?_sendString2Serial:	
  3671                           ; 1 bytes @ 0x1
  3672                           
  3673  0021                     ??_sendLf2Serial:	
  3674                           ; 1 bytes @ 0x1
  3675                           
  3676  0021                     ??___bmul:	
  3677                           ; 1 bytes @ 0x1
  3678                           
  3679  0021                     ??___lbdiv:	
  3680                           ; 1 bytes @ 0x1
  3681                           
  3682  0021                     EUSART1_Read@readValue:	
  3683                           ; 1 bytes @ 0x1
  3684                           
  3685  0021                     ADC_SelectChannel@channel:	
  3686                           ; 1 bytes @ 0x1
  3687                           
  3688  0021                     sendString2Serial@str:	
  3689                           ; 1 bytes @ 0x1
  3690                           
  3691                           
  3692                           ; 2 bytes @ 0x1
  3693  0021                     	ds	1
  3694  0022                     ??_EUSART1_SetRxInterruptHandler:
  3695  0022                     ??_EUSART1_SetFramingErrorHandler:	
  3696                           ; 1 bytes @ 0x2
  3697                           
  3698  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  3699                           ; 1 bytes @ 0x2
  3700                           
  3701  0022                     ??_EUSART1_SetErrorHandler:	
  3702                           ; 1 bytes @ 0x2
  3703                           
  3704  0022                     ??_ADC_Initialize:	
  3705                           ; 1 bytes @ 0x2
  3706                           
  3707  0022                     ??_ADC_SetInterruptHandler:	
  3708                           ; 1 bytes @ 0x2
  3709                           
  3710  0022                     ??_PWM3_LoadDutyValue:	
  3711                           ; 1 bytes @ 0x2
  3712                           
  3713  0022                     ??_EUSART1_Initialize:	
  3714                           ; 1 bytes @ 0x2
  3715                           
  3716  0022                     ??_SYSTEM_Initialize:	
  3717                           ; 1 bytes @ 0x2
  3718                           
  3719  0022                     ??_convert2Celsius:	
  3720                           ; 1 bytes @ 0x2
  3721                           
  3722  0022                     isEqual@str2:	
  3723                           ; 1 bytes @ 0x2
  3724                           
  3725  0022                     startsWith@str2:	
  3726                           ; 1 bytes @ 0x2
  3727                           
  3728  0022                     getParams@length:	
  3729                           ; 1 bytes @ 0x2
  3730                           
  3731  0022                     ___bmul@product:	
  3732                           ; 1 bytes @ 0x2
  3733                           
  3734  0022                     ___lbdiv@dividend:	
  3735                           ; 1 bytes @ 0x2
  3736                           
  3737  0022                     ___wmul@multiplicand:	
  3738                           ; 1 bytes @ 0x2
  3739                           
  3740                           
  3741                           ; 2 bytes @ 0x2
  3742  0022                     	ds	1
  3743  0023                     ??_sendString2Serial:
  3744  0023                     ??_setPowerBits:	
  3745                           ; 1 bytes @ 0x3
  3746                           
  3747  0023                     ??_isEqual:	
  3748                           ; 1 bytes @ 0x3
  3749                           
  3750  0023                     ??_startsWith:	
  3751                           ; 1 bytes @ 0x3
  3752                           
  3753  0023                     ??_getBeanTemperature:	
  3754                           ; 1 bytes @ 0x3
  3755                           
  3756  0023                     getParams@readLine:	
  3757                           ; 1 bytes @ 0x3
  3758                           
  3759  0023                     ___bmul@multiplier:	
  3760                           ; 1 bytes @ 0x3
  3761                           
  3762  0023                     ___lbdiv@counter:	
  3763                           ; 1 bytes @ 0x3
  3764                           
  3765                           
  3766                           ; 1 bytes @ 0x3
  3767  0023                     	ds	1
  3768  0024                     ??_string2int:
  3769  0024                     ?_getCommandAndParams:	
  3770                           ; 1 bytes @ 0x4
  3771                           
  3772  0024                     ??_sendChannelsReply:	
  3773                           ; 1 bytes @ 0x4
  3774                           
  3775  0024                     ??___wmul:	
  3776                           ; 1 bytes @ 0x4
  3777                           
  3778  0024                     getCommandAndParams@params:	
  3779                           ; 1 bytes @ 0x4
  3780                           
  3781  0024                     sendChannelsReply@chans:	
  3782                           ; 1 bytes @ 0x4
  3783                           
  3784  0024                     ___lbdiv@quotient:	
  3785                           ; 1 bytes @ 0x4
  3786                           
  3787  0024                     ___wmul@product:	
  3788                           ; 1 bytes @ 0x4
  3789                           
  3790                           
  3791                           ; 2 bytes @ 0x4
  3792  0024                     	ds	1
  3793  0025                     ??_getCommandAndParams:
  3794  0025                     ?___lbmod:	
  3795                           ; 1 bytes @ 0x5
  3796                           
  3797  0025                     ___lbmod@divisor:	
  3798                           ; 1 bytes @ 0x5
  3799                           
  3800                           
  3801                           ; 1 bytes @ 0x5
  3802  0025                     	ds	1
  3803  0026                     ??___lbmod:
  3804  0026                     ?___awdiv:	
  3805                           ; 1 bytes @ 0x6
  3806                           
  3807  0026                     string2int@index:	
  3808                           ; 2 bytes @ 0x6
  3809                           
  3810  0026                     ___awdiv@divisor:	
  3811                           ; 1 bytes @ 0x6
  3812                           
  3813                           
  3814                           ; 2 bytes @ 0x6
  3815  0026                     	ds	1
  3816  0027                     string2int@result:
  3817  0027                     getCommandAndParams@lengthOfParams:	
  3818                           ; 1 bytes @ 0x7
  3819                           
  3820  0027                     getBeanTemperature@result:	
  3821                           ; 1 bytes @ 0x7
  3822                           
  3823                           
  3824                           ; 2 bytes @ 0x7
  3825  0027                     	ds	1
  3826  0028                     string2int@numberStr:
  3827  0028                     getCommandAndParams@readLine:	
  3828                           ; 1 bytes @ 0x8
  3829                           
  3830  0028                     ___lbmod@dividend:	
  3831                           ; 1 bytes @ 0x8
  3832                           
  3833  0028                     ___awdiv@dividend:	
  3834                           ; 1 bytes @ 0x8
  3835                           
  3836                           
  3837                           ; 2 bytes @ 0x8
  3838  0028                     	ds	1
  3839  0029                     getBeanTemperature@i:
  3840  0029                     ___lbmod@counter:	
  3841                           ; 1 bytes @ 0x9
  3842                           
  3843                           
  3844                           ; 1 bytes @ 0x9
  3845  0029                     	ds	1
  3846  002A                     ??___awdiv:
  3847  002A                     ___lbmod@rem:	
  3848                           ; 1 bytes @ 0xA
  3849                           
  3850                           
  3851                           ; 1 bytes @ 0xA
  3852  002A                     	ds	1
  3853  002B                     ?_int2string:
  3854  002B                     int2string@numberStr:	
  3855                           ; 1 bytes @ 0xB
  3856                           
  3857  002B                     ___awdiv@counter:	
  3858                           ; 1 bytes @ 0xB
  3859                           
  3860                           
  3861                           ; 1 bytes @ 0xB
  3862  002B                     	ds	1
  3863  002C                     ??_int2string:
  3864  002C                     ___awdiv@sign:	
  3865                           ; 1 bytes @ 0xC
  3866                           
  3867                           
  3868                           ; 1 bytes @ 0xC
  3869  002C                     	ds	1
  3870  002D                     ___awdiv@quotient:
  3871                           
  3872                           ; 2 bytes @ 0xD
  3873  002D                     	ds	2
  3874  002F                     int2string@hundreds:
  3875                           
  3876                           ; 1 bytes @ 0xF
  3877  002F                     	ds	1
  3878  0030                     int2string@number:
  3879                           
  3880                           ; 1 bytes @ 0x10
  3881  0030                     	ds	1
  3882  0031                     int2string@tenths:
  3883                           
  3884                           ; 1 bytes @ 0x11
  3885  0031                     	ds	1
  3886  0032                     int2string@index:
  3887                           
  3888                           ; 1 bytes @ 0x12
  3889  0032                     	ds	1
  3890  0033                     ??_sendTemperature:
  3891  0033                     ??_setDcFanSpeed:	
  3892                           ; 1 bytes @ 0x13
  3893                           
  3894  0033                     ??_setHeaterPower:	
  3895                           ; 1 bytes @ 0x13
  3896                           
  3897                           
  3898                           ; 1 bytes @ 0x13
  3899  0033                     	ds	1
  3900  0034                     sendTemperature@temp:
  3901  0034                     setDcFanSpeed@tempStr:	
  3902                           ; 1 bytes @ 0x14
  3903                           
  3904                           
  3905                           ; 4 bytes @ 0x14
  3906  0034                     	ds	1
  3907  0035                     setHeaterPower@newPowerBits:
  3908  0035                     sendTemperature@tempStr:	
  3909                           ; 3 bytes @ 0x15
  3910                           
  3911                           
  3912                           ; 4 bytes @ 0x15
  3913  0035                     	ds	3
  3914  0038                     setHeaterPower@power:
  3915  0038                     setDcFanSpeed@level:	
  3916                           ; 1 bytes @ 0x18
  3917                           
  3918                           
  3919                           ; 2 bytes @ 0x18
  3920  0038                     	ds	1
  3921  0039                     setHeaterPower@tempStr:
  3922                           
  3923                           ; 4 bytes @ 0x19
  3924  0039                     	ds	1
  3925  003A                     setDcFanSpeed@speed:
  3926                           
  3927                           ; 1 bytes @ 0x1A
  3928  003A                     	ds	3
  3929  003D                     setHeaterPower@newLevel:
  3930                           
  3931                           ; 1 bytes @ 0x1D
  3932  003D                     	ds	1
  3933  003E                     ??_main:
  3934                           
  3935                           ; 1 bytes @ 0x1E
  3936  003E                     	ds	2
  3937                           
  3938                           	psect	maintext
  3939  0028                     __pmaintext:	
  3940 ;;
  3941 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3942 ;;
  3943 ;; *************** function _main *****************
  3944 ;; Defined at:
  3945 ;;		line 208 in file "main.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  readBuffer     15    0[BANK1 ] unsigned char [15]
  3950 ;;  parameters      5   15[BANK1 ] unsigned char [5]
  3951 ;;  channels        5    0        unsigned char [5]
  3952 ;;  index           1   24[BANK1 ] unsigned char 
  3953 ;;  heaterPower     1   23[BANK1 ] unsigned char 
  3954 ;;  dcFanSpeed      1   22[BANK1 ] unsigned char 
  3955 ;;  readByte        1   21[BANK1 ] unsigned char 
  3956 ;;  aCommand        1   25[BANK1 ] volatile enum E6699
  3957 ;;  beanTemp        1   20[BANK1 ] unsigned char 
  3958 ;;  c               1    0        unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : B3F/0
  3965 ;;		On exit  : 3F/1
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3968 ;;      Params:         0       0       0       0
  3969 ;;      Locals:         0       0      26       0
  3970 ;;      Temps:          0       2       0       0
  3971 ;;      Totals:         0       2      26       0
  3972 ;;Total ram usage:       28 bytes
  3973 ;; Hardware stack levels required when called: 7
  3974 ;; This function calls:
  3975 ;;		_EUSART1_Read
  3976 ;;		_SYSTEM_Initialize
  3977 ;;		_getBeanTemperature
  3978 ;;		_getCommandAndParams
  3979 ;;		_sendChannelsReply
  3980 ;;		_sendTemperature
  3981 ;;		_setDcFanSpeed
  3982 ;;		_setHeaterPower
  3983 ;;		_string2int
  3984 ;; This function is called by:
  3985 ;;		Startup code after reset
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989  0028                     _main:	
  3990                           ;psect for function _main
  3991                           
  3992                           
  3993                           ;main.c: 221:     SYSTEM_Initialize();
  3994                           
  3995                           ;incstack = 0
  3996                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3997  0028  2596               	fcall	_SYSTEM_Initialize
  3998                           
  3999                           ;main.c: 223:     setHeaterPower(10);
  4000  0029  300A               	movlw	10
  4001  002A  214B               	fcall	_setHeaterPower
  4002                           
  4003                           ;main.c: 224:     setDcFanSpeed(30);
  4004  002B  301E               	movlw	30
  4005  002C  226F               	fcall	_setDcFanSpeed
  4006                           
  4007                           ;main.c: 226:     (INTCONbits.GIE = 1);
  4008  002D  178B               	bsf	11,7	;volatile
  4009                           
  4010                           ;main.c: 227:     (INTCONbits.PEIE = 1);
  4011  002E  170B               	bsf	11,6	;volatile
  4012  002F  2840               	goto	l2900
  4013  0030                     l2904:
  4014                           
  4015                           ;main.c: 232:             readBuffer[index++] = readByte;
  4016  0030  0835               	movf	main@readByte^(0+128),w
  4017  0031  0140               	movlb	0	; select bank0
  4018  0032  00BE               	movwf	??_main
  4019  0033  0141               	movlb	1	; select bank1
  4020  0034  0838               	movf	main@index^(0+128),w
  4021  0035  3EA0               	addlw	(low (main@readBuffer| 0))& (0+255)
  4022  0036  0086               	movwf	6
  4023  0037  0187               	clrf	7
  4024  0038  0140               	movlb	0	; select bank0
  4025  0039  083E               	movf	??_main,w
  4026  003A  0081               	movwf	1
  4027  003B  3001               	movlw	1
  4028  003C  00BE               	movwf	??_main
  4029  003D  083E               	movf	??_main,w
  4030  003E  0141               	movlb	1	; select bank1
  4031  003F  07B8               	addwf	main@index^(0+128),f
  4032  0040                     l2900:	
  4033                           ;main.c: 233:         } else {
  4034                           
  4035                           
  4036                           ;main.c: 230:         readByte = EUSART1_Read();
  4037  0040  23DF               	fcall	_EUSART1_Read
  4038  0041  00BE               	movwf	??_main
  4039  0042  083E               	movf	??_main,w
  4040  0043  0141               	movlb	1	; select bank1
  4041  0044  00B5               	movwf	main@readByte^(0+128)
  4042                           
  4043                           ;main.c: 231:         if (readByte != 0xA) {
  4044  0045  300A               	movlw	10
  4045  0046  0635               	xorwf	main@readByte^(0+128),w
  4046  0047  1D03               	btfss	3,2
  4047  0048  2830               	goto	l2904
  4048                           
  4049                           ;main.c: 234:             readBuffer[index] = 0x0;
  4050  0049  0838               	movf	main@index^(0+128),w
  4051  004A  3EA0               	addlw	(low (main@readBuffer| 0))& (0+255)
  4052  004B  0086               	movwf	6
  4053  004C  0187               	clrf	7
  4054  004D  0181               	clrf	1
  4055                           
  4056                           ;main.c: 235:             aCommand = getCommandAndParams(readBuffer, parameters);
  4057  004E  30AF               	movlw	(low (main@parameters| 0))& (0+255)
  4058  004F  0140               	movlb	0	; select bank0
  4059  0050  00BE               	movwf	??_main
  4060  0051  083E               	movf	??_main,w
  4061  0052  00A4               	movwf	getCommandAndParams@params
  4062  0053  30A0               	movlw	(low (main@readBuffer| 0))& (0+255)
  4063  0054  21E4               	fcall	_getCommandAndParams
  4064  0055  00BF               	movwf	??_main+1
  4065  0056  083F               	movf	??_main+1,w
  4066  0057  0141               	movlb	1	; select bank1
  4067  0058  00B9               	movwf	main@aCommand^(0+128)	;volatile
  4068                           
  4069                           ;main.c: 236:             switch (aCommand) {
  4070  0059  287D               	goto	l2932
  4071  005A                     l2912:
  4072                           
  4073                           ;main.c: 238:                     beanTemp = getBeanTemperature();
  4074  005A  2367               	fcall	_getBeanTemperature
  4075  005B  00BE               	movwf	??_main
  4076  005C  083E               	movf	??_main,w
  4077  005D  0141               	movlb	1	; select bank1
  4078  005E  00B4               	movwf	main@beanTemp^(0+128)
  4079                           
  4080                           ;main.c: 239:                     sendTemperature(beanTemp);
  4081  005F  0834               	movf	main@beanTemp^(0+128),w
  4082  0060  2498               	fcall	_sendTemperature
  4083                           
  4084                           ;main.c: 240:                     break;
  4085  0061  2897               	goto	l2934
  4086  0062                     l2916:
  4087                           
  4088                           ;main.c: 242:                     sendChannelsReply(parameters);
  4089  0062  30AF               	movlw	(low (main@parameters| 0))& (0+255)
  4090  0063  2571               	fcall	_sendChannelsReply
  4091                           
  4092                           ;main.c: 243:                     break;
  4093  0064  2897               	goto	l2934
  4094  0065                     l2918:
  4095                           
  4096                           ;main.c: 245:                     dcFanSpeed = string2int(parameters);
  4097  0065  30AF               	movlw	(low (main@parameters| 0))& (0+255)
  4098  0066  22AC               	fcall	_string2int
  4099  0067  00BE               	movwf	??_main
  4100  0068  083E               	movf	??_main,w
  4101  0069  0141               	movlb	1	; select bank1
  4102  006A  00B6               	movwf	main@dcFanSpeed^(0+128)
  4103                           
  4104                           ;main.c: 246:                     if (dcFanSpeed != 255) setDcFanSpeed(dcFanSpeed);
  4105  006B  0A36               	incf	main@dcFanSpeed^(0+128),w
  4106  006C  1903               	btfsc	3,2
  4107  006D  2897               	goto	l2934
  4108  006E  0836               	movf	main@dcFanSpeed^(0+128),w
  4109  006F  226F               	fcall	_setDcFanSpeed
  4110  0070  2897               	goto	l2934
  4111  0071                     l2924:
  4112                           
  4113                           ;main.c: 249:                     heaterPower = string2int(parameters);
  4114  0071  30AF               	movlw	(low (main@parameters| 0))& (0+255)
  4115  0072  22AC               	fcall	_string2int
  4116  0073  00BE               	movwf	??_main
  4117  0074  083E               	movf	??_main,w
  4118  0075  0141               	movlb	1	; select bank1
  4119  0076  00B7               	movwf	main@heaterPower^(0+128)
  4120                           
  4121                           ;main.c: 250:                     if (heaterPower != 255) setHeaterPower(heaterPower);
  4122  0077  0A37               	incf	main@heaterPower^(0+128),w
  4123  0078  1903               	btfsc	3,2
  4124  0079  2897               	goto	l2934
  4125  007A  0837               	movf	main@heaterPower^(0+128),w
  4126  007B  214B               	fcall	_setHeaterPower
  4127  007C  2897               	goto	l2934
  4128  007D                     l2932:
  4129  007D  0839               	movf	main@aCommand^(0+128),w	;volatile
  4130  007E  0140               	movlb	0	; select bank0
  4131  007F  00BE               	movwf	??_main
  4132  0080  01BF               	clrf	??_main+1
  4133                           
  4134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4135                           ; Switch size 1, requested type "simple"
  4136                           ; Number of cases is 1, Range of values is 0 to 0
  4137                           ; switch strategies available:
  4138                           ; Name         Instructions Cycles
  4139                           ; simple_byte            4     3 (average)
  4140                           ; direct_byte            8     6 (fixed)
  4141                           ; jumptable            260     6 (fixed)
  4142                           ;	Chosen strategy is simple_byte
  4143  0081  083F               	movf	??_main+1,w
  4144  0082  3A00               	xorlw	0	; case 0
  4145  0083  1903               	skipnz
  4146  0084  2886               	goto	l2960
  4147  0085  2897               	goto	l2934
  4148  0086                     l2960:
  4149                           
  4150                           ; Switch size 1, requested type "simple"
  4151                           ; Number of cases is 5, Range of values is 0 to 4
  4152                           ; switch strategies available:
  4153                           ; Name         Instructions Cycles
  4154                           ; direct_byte           16     6 (fixed)
  4155                           ; simple_byte           16     9 (average)
  4156                           ; jumptable            260     6 (fixed)
  4157                           ;	Chosen strategy is simple_byte
  4158  0086  083E               	movf	??_main,w
  4159  0087  3A00               	xorlw	0	; case 0
  4160  0088  1903               	skipnz
  4161  0089  285A               	goto	l2912
  4162  008A  3A01               	xorlw	1	; case 1
  4163  008B  1903               	skipnz
  4164  008C  2862               	goto	l2916
  4165  008D  3A03               	xorlw	3	; case 2
  4166  008E  1903               	skipnz
  4167  008F  2865               	goto	l2918
  4168  0090  3A01               	xorlw	1	; case 3
  4169  0091  1903               	skipnz
  4170  0092  2871               	goto	l2924
  4171  0093  3A07               	xorlw	7	; case 4
  4172  0094  1903               	skipnz
  4173  0095  2897               	goto	l2934
  4174  0096  2897               	goto	l2934
  4175  0097                     l2934:
  4176                           
  4177                           ;main.c: 255:             index = 0;
  4178  0097  0141               	movlb	1	; select bank1
  4179  0098  01B8               	clrf	main@index^(0+128)
  4180  0099  2840               	goto	l2900
  4181  009A                     __end_of_main:
  4182                           
  4183                           	psect	text1
  4184  02AC                     __ptext1:	
  4185 ;; *************** function _string2int *****************
  4186 ;; Defined at:
  4187 ;;		line 108 in file "main.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  numberStr       1    wreg     PTR unsigned char 
  4190 ;;		 -> main@parameters(5), 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  numberStr       1    8[BANK0 ] PTR unsigned char 
  4193 ;;		 -> main@parameters(5), 
  4194 ;;  result          1    7[BANK0 ] unsigned char 
  4195 ;;  index           1    6[BANK0 ] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      unsigned char 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 3F/0
  4202 ;;		On exit  : 3F/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4205 ;;      Params:         0       0       0       0
  4206 ;;      Locals:         0       3       0       0
  4207 ;;      Temps:          0       2       0       0
  4208 ;;      Totals:         0       5       0       0
  4209 ;;Total ram usage:        5 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 5
  4212 ;; This function calls:
  4213 ;;		___bmul
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219  02AC                     _string2int:	
  4220                           ;psect for function _string2int
  4221                           
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _string2int: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4225                           ;string2int@numberStr stored from wreg
  4226  02AC  00A8               	movwf	string2int@numberStr
  4227                           
  4228                           ;main.c: 109:     uint8_t result = 0;
  4229  02AD  01A7               	clrf	string2int@result
  4230                           
  4231                           ;main.c: 110:     uint8_t index = 0;
  4232  02AE  01A6               	clrf	string2int@index
  4233                           
  4234                           ;main.c: 111:     while (*numberStr != 0x0 && index != 3) {
  4235  02AF  2ACA               	goto	l2782
  4236  02B0                     l2784:
  4237  02B0  3003               	movlw	3
  4238  02B1  0626               	xorwf	string2int@index,w
  4239  02B2  1903               	btfsc	3,2
  4240  02B3  2AD0               	goto	l2786
  4241                           
  4242                           ;main.c: 112:         result = 10 * result + *numberStr - '0';
  4243  02B4  0828               	movf	string2int@numberStr,w
  4244  02B5  0086               	movwf	6
  4245  02B6  0187               	clrf	7
  4246  02B7  300A               	movlw	10
  4247  02B8  00A4               	movwf	??_string2int
  4248  02B9  0824               	movf	??_string2int,w
  4249  02BA  00A0               	movwf	___bmul@multiplicand
  4250  02BB  0827               	movf	string2int@result,w
  4251  02BC  2534               	fcall	___bmul
  4252  02BD  0701               	addwf	1,w
  4253  02BE  3ED0               	addlw	208
  4254  02BF  00A5               	movwf	??_string2int+1
  4255  02C0  0825               	movf	??_string2int+1,w
  4256  02C1  00A7               	movwf	string2int@result
  4257                           
  4258                           ;main.c: 113:         index++;
  4259  02C2  3001               	movlw	1
  4260  02C3  00A4               	movwf	??_string2int
  4261  02C4  0824               	movf	??_string2int,w
  4262  02C5  07A6               	addwf	string2int@index,f
  4263                           
  4264                           ;main.c: 114:         numberStr++;
  4265  02C6  3001               	movlw	1
  4266  02C7  00A4               	movwf	??_string2int
  4267  02C8  0824               	movf	??_string2int,w
  4268  02C9  07A8               	addwf	string2int@numberStr,f
  4269  02CA                     l2782:
  4270                           
  4271                           ;main.c: 111:     while (*numberStr != 0x0 && index != 3) {
  4272  02CA  0828               	movf	string2int@numberStr,w
  4273  02CB  0086               	movwf	6
  4274  02CC  0187               	clrf	7
  4275  02CD  0801               	movf	1,w
  4276  02CE  1D03               	btfss	3,2
  4277  02CF  2AB0               	goto	l2784
  4278  02D0                     l2786:
  4279                           
  4280                           ;main.c: 116:     if (*numberStr == 0x0 && result <= 100) return result;
  4281  02D0  0828               	movf	string2int@numberStr,w
  4282  02D1  0086               	movwf	6
  4283  02D2  0187               	clrf	7
  4284  02D3  0801               	movf	1,w
  4285  02D4  1D03               	btfss	3,2
  4286  02D5  2ADC               	goto	l2796
  4287  02D6  3065               	movlw	101
  4288  02D7  0227               	subwf	string2int@result,w
  4289  02D8  1803               	skipnc
  4290  02D9  2ADC               	goto	l2796
  4291  02DA  0827               	movf	string2int@result,w
  4292  02DB  0008               	return
  4293  02DC                     l2796:
  4294  02DC  30FF               	movlw	255
  4295  02DD  0008               	return
  4296  02DE                     __end_of_string2int:
  4297                           
  4298                           	psect	text2
  4299  0534                     __ptext2:	
  4300 ;; *************** function ___bmul *****************
  4301 ;; Defined at:
  4302 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  multiplier      1    wreg     unsigned char 
  4305 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4308 ;;  product         1    2[BANK0 ] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      unsigned char 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 3F/0
  4315 ;;		On exit  : 3F/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4318 ;;      Params:         0       1       0       0
  4319 ;;      Locals:         0       2       0       0
  4320 ;;      Temps:          0       1       0       0
  4321 ;;      Totals:         0       4       0       0
  4322 ;;Total ram usage:        4 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 4
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_string2int
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332  0534                     ___bmul:	
  4333                           ;psect for function ___bmul
  4334                           
  4335                           
  4336                           ;incstack = 0
  4337                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4338                           ;___bmul@multiplier stored from wreg
  4339  0534  00A3               	movwf	___bmul@multiplier
  4340  0535  01A2               	clrf	___bmul@product
  4341  0536                     l2678:
  4342  0536  1C23               	btfss	___bmul@multiplier,0
  4343  0537  2D3C               	goto	l2682
  4344  0538  0820               	movf	___bmul@multiplicand,w
  4345  0539  00A1               	movwf	??___bmul
  4346  053A  0821               	movf	??___bmul,w
  4347  053B  07A2               	addwf	___bmul@product,f
  4348  053C                     l2682:
  4349  053C  1003               	clrc
  4350  053D  0DA0               	rlf	___bmul@multiplicand,f
  4351  053E  1003               	clrc
  4352  053F  0CA3               	rrf	___bmul@multiplier,f
  4353  0540  0823               	movf	___bmul@multiplier,w
  4354  0541  1D03               	btfss	3,2
  4355  0542  2D36               	goto	l2678
  4356  0543  0822               	movf	___bmul@product,w
  4357  0544  0008               	return
  4358  0545                     __end_of___bmul:
  4359                           
  4360                           	psect	text3
  4361  014B                     __ptext3:	
  4362 ;; *************** function _setHeaterPower *****************
  4363 ;; Defined at:
  4364 ;;		line 172 in file "main.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  power           1    wreg     unsigned char 
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  power           1   24[BANK0 ] unsigned char 
  4369 ;;  tempStr         4   25[BANK0 ] unsigned char [4]
  4370 ;;  newPowerBits    3   21[BANK0 ] unsigned um
  4371 ;;  newLevel        1   29[BANK0 ] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 30/E
  4378 ;;		On exit  : 3F/2
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4381 ;;      Params:         0       0       0       0
  4382 ;;      Locals:         0       9       0       0
  4383 ;;      Temps:          0       2       0       0
  4384 ;;      Totals:         0      11       0       0
  4385 ;;Total ram usage:       11 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 6
  4388 ;; This function calls:
  4389 ;;		___awdiv
  4390 ;;		___wmul
  4391 ;;		_int2string
  4392 ;;		_sendLf2Serial
  4393 ;;		_sendString2Serial
  4394 ;;		_setPowerBits
  4395 ;; This function is called by:
  4396 ;;		_main
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400  014B                     _setHeaterPower:	
  4401                           ;psect for function _setHeaterPower
  4402                           
  4403                           
  4404                           ;incstack = 0
  4405                           ; Regs used in _setHeaterPower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4406                           ;setHeaterPower@power stored from wreg
  4407  014B  0140               	movlb	0	; select bank0
  4408  014C  00B8               	movwf	setHeaterPower@power
  4409                           
  4410                           ;main.c: 173:     uint24_t newPowerBits;;main.c: 174:     uint8_t newLevel;;main.c: 175:
      +                               newLevel = 24 * (power + 2) / 100;
  4411  014D  3064               	movlw	100
  4412  014E  00A6               	movwf	___awdiv@divisor
  4413  014F  3000               	movlw	0
  4414  0150  00A7               	movwf	___awdiv@divisor+1
  4415  0151  0838               	movf	setHeaterPower@power,w
  4416  0152  3E02               	addlw	2
  4417  0153  00A0               	movwf	___wmul@multiplier
  4418  0154  3000               	movlw	0
  4419  0155  1803               	skipnc
  4420  0156  3001               	movlw	1
  4421  0157  00A1               	movwf	___wmul@multiplier+1
  4422  0158  3018               	movlw	24
  4423  0159  00A2               	movwf	___wmul@multiplicand
  4424  015A  3000               	movlw	0
  4425  015B  00A3               	movwf	___wmul@multiplicand+1
  4426  015C  2463               	fcall	___wmul
  4427  015D  0821               	movf	?___wmul+1,w
  4428  015E  00A9               	movwf	___awdiv@dividend+1
  4429  015F  0820               	movf	?___wmul,w
  4430  0160  00A8               	movwf	___awdiv@dividend
  4431  0161  20FA               	fcall	___awdiv
  4432  0162  0826               	movf	?___awdiv,w
  4433  0163  00B3               	movwf	??_setHeaterPower
  4434  0164  0833               	movf	??_setHeaterPower,w
  4435  0165  00BD               	movwf	setHeaterPower@newLevel
  4436                           
  4437                           ;main.c: 176:     newPowerBits = powerBitTable[newLevel];
  4438  0166  083D               	movf	setHeaterPower@newLevel,w
  4439  0167  00B3               	movwf	??_setHeaterPower
  4440  0168  01B4               	clrf	??_setHeaterPower+1
  4441  0169  0833               	movf	??_setHeaterPower,w
  4442  016A  00A0               	movwf	___wmul@multiplier
  4443  016B  0834               	movf	??_setHeaterPower+1,w
  4444  016C  00A1               	movwf	___wmul@multiplier+1
  4445  016D  3003               	movlw	3
  4446  016E  00A2               	movwf	___wmul@multiplicand
  4447  016F  3000               	movlw	0
  4448  0170  00A3               	movwf	___wmul@multiplicand+1
  4449  0171  2463               	fcall	___wmul
  4450  0172  0821               	movf	?___wmul+1,w
  4451  0173  0085               	movwf	5
  4452  0174  0820               	movf	?___wmul,w
  4453  0175  0084               	movwf	4
  4454  0176  3099               	movlw	low (_powerBitTable| (0+32768))
  4455  0177  0784               	addwf	4,f
  4456  0178  3081               	movlw	high (_powerBitTable| (0+32768))
  4457  0179  3D85               	addwfc	5,f
  4458  017A  3F00               	moviw [0]fsr0
  4459  017B  00B5               	movwf	setHeaterPower@newPowerBits
  4460  017C  3F01               	moviw [1]fsr0
  4461  017D  00B6               	movwf	setHeaterPower@newPowerBits+1
  4462  017E  3F02               	moviw [2]fsr0
  4463  017F  00B7               	movwf	setHeaterPower@newPowerBits+2
  4464                           
  4465                           ;main.c: 177:     setPowerBits(newPowerBits);
  4466  0180  0835               	movf	setHeaterPower@newPowerBits,w
  4467  0181  00A0               	movwf	setPowerBits@value
  4468  0182  0836               	movf	setHeaterPower@newPowerBits+1,w
  4469  0183  00A1               	movwf	setPowerBits@value+1
  4470  0184  0837               	movf	setHeaterPower@newPowerBits+2,w
  4471  0185  00A2               	movwf	setPowerBits@value+2
  4472  0186  25F9               	fcall	_setPowerBits
  4473                           
  4474                           ;main.c: 178:     char tempStr[4];;main.c: 179:     int2string(newLevel, tempStr);
  4475  0187  3039               	movlw	(low (setHeaterPower@tempStr| 0))& (0+255)
  4476  0188  00B3               	movwf	??_setHeaterPower
  4477  0189  0833               	movf	??_setHeaterPower,w
  4478  018A  00AB               	movwf	int2string@numberStr
  4479  018B  083D               	movf	setHeaterPower@newLevel,w
  4480  018C  209A               	fcall	_int2string
  4481                           
  4482                           ;main.c: 180:     sendString2Serial("# Heater power is now ");
  4483  018D  30E0               	movlw	low (STR_13| (0+32768))
  4484  018E  00A1               	movwf	sendString2Serial@str
  4485  018F  3084               	movlw	high (STR_13| (0+32768))
  4486  0190  00A2               	movwf	sendString2Serial@str+1
  4487  0191  2521               	fcall	_sendString2Serial
  4488                           
  4489                           ;main.c: 181:     sendString2Serial(tempStr);
  4490  0192  3039               	movlw	low setHeaterPower@tempStr
  4491  0193  00A1               	movwf	sendString2Serial@str
  4492  0194  3000               	movlw	high setHeaterPower@tempStr
  4493  0195  00A2               	movwf	sendString2Serial@str+1
  4494  0196  2521               	fcall	_sendString2Serial
  4495                           
  4496                           ;main.c: 182:     sendLf2Serial();
  4497  0197  262E               	fcall	_sendLf2Serial
  4498  0198  0008               	return
  4499  0199                     __end_of_setHeaterPower:
  4500                           
  4501                           	psect	text4
  4502  05F9                     __ptext4:	
  4503 ;; *************** function _setPowerBits *****************
  4504 ;; Defined at:
  4505 ;;		line 66 in file "mcc_generated_files/adc.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  value           3    0[BANK0 ] unsigned um
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg
  4514 ;; Tracked objects:
  4515 ;;		On entry : 3F/0
  4516 ;;		On exit  : 3F/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4519 ;;      Params:         0       3       0       0
  4520 ;;      Locals:         0       0       0       0
  4521 ;;      Temps:          0       0       0       0
  4522 ;;      Totals:         0       3       0       0
  4523 ;;Total ram usage:        3 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 4
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_setHeaterPower
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533  05F9                     _setPowerBits:	
  4534                           ;psect for function _setPowerBits
  4535                           
  4536                           
  4537                           ;mcc_generated_files/adc.c: 67:     powerBits = value;
  4538                           
  4539                           ;incstack = 0
  4540                           ; Regs used in _setPowerBits: [wreg]
  4541  05F9  0820               	movf	setPowerBits@value,w
  4542  05FA  00D5               	movwf	_powerBits	;volatile
  4543  05FB  0821               	movf	setPowerBits@value+1,w
  4544  05FC  00D6               	movwf	_powerBits+1	;volatile
  4545  05FD  0822               	movf	setPowerBits@value+2,w
  4546  05FE  00D7               	movwf	_powerBits+2	;volatile
  4547  05FF  0008               	return
  4548  0600                     __end_of_setPowerBits:
  4549                           
  4550                           	psect	text5
  4551  026F                     __ptext5:	
  4552 ;; *************** function _setDcFanSpeed *****************
  4553 ;; Defined at:
  4554 ;;		line 161 in file "main.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  speed           1    wreg     unsigned char 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  speed           1   26[BANK0 ] unsigned char 
  4559 ;;  tempStr         4   20[BANK0 ] unsigned char [4]
  4560 ;;  level           2   24[BANK0 ] unsigned short 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 3C/2
  4567 ;;		On exit  : 3F/2
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4570 ;;      Params:         0       0       0       0
  4571 ;;      Locals:         0       7       0       0
  4572 ;;      Temps:          0       1       0       0
  4573 ;;      Totals:         0       8       0       0
  4574 ;;Total ram usage:        8 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 6
  4577 ;; This function calls:
  4578 ;;		_PWM3_LoadDutyValue
  4579 ;;		___awdiv
  4580 ;;		___wmul
  4581 ;;		_int2string
  4582 ;;		_sendLf2Serial
  4583 ;;		_sendString2Serial
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589  026F                     _setDcFanSpeed:	
  4590                           ;psect for function _setDcFanSpeed
  4591                           
  4592                           
  4593                           ;incstack = 0
  4594                           ; Regs used in _setDcFanSpeed: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4595                           ;setDcFanSpeed@speed stored from wreg
  4596  026F  0140               	movlb	0	; select bank0
  4597  0270  00BA               	movwf	setDcFanSpeed@speed
  4598                           
  4599                           ;main.c: 162:     uint16_t level;;main.c: 163:     level = pwmLevel[6 * (speed + 8) / 10
      +                          0];
  4600  0271  3064               	movlw	100
  4601  0272  00A6               	movwf	___awdiv@divisor
  4602  0273  3000               	movlw	0
  4603  0274  00A7               	movwf	___awdiv@divisor+1
  4604  0275  083A               	movf	setDcFanSpeed@speed,w
  4605  0276  3E08               	addlw	8
  4606  0277  00A0               	movwf	___wmul@multiplier
  4607  0278  3000               	movlw	0
  4608  0279  1803               	skipnc
  4609  027A  3001               	movlw	1
  4610  027B  00A1               	movwf	___wmul@multiplier+1
  4611  027C  3006               	movlw	6
  4612  027D  00A2               	movwf	___wmul@multiplicand
  4613  027E  3000               	movlw	0
  4614  027F  00A3               	movwf	___wmul@multiplicand+1
  4615  0280  2463               	fcall	___wmul
  4616  0281  0821               	movf	?___wmul+1,w
  4617  0282  00A9               	movwf	___awdiv@dividend+1
  4618  0283  0820               	movf	?___wmul,w
  4619  0284  00A8               	movwf	___awdiv@dividend
  4620  0285  20FA               	fcall	___awdiv
  4621  0286  0827               	movf	?___awdiv+1,w
  4622  0287  0085               	movwf	5
  4623  0288  0826               	movf	?___awdiv,w
  4624  0289  0084               	movwf	4
  4625  028A  3584               	lslf	4,f
  4626  028B  0D85               	rlf	5,f
  4627  028C  3063               	movlw	low (_pwmLevel| (0+32768))
  4628  028D  0784               	addwf	4,f
  4629  028E  3085               	movlw	high (_pwmLevel| (0+32768))
  4630  028F  3D85               	addwfc	5,f
  4631  0290  3F00               	moviw [0]fsr0
  4632  0291  00B8               	movwf	setDcFanSpeed@level
  4633  0292  3F01               	moviw [1]fsr0
  4634  0293  00B9               	movwf	setDcFanSpeed@level+1
  4635                           
  4636                           ;main.c: 164:     PWM3_LoadDutyValue(level);
  4637  0294  0839               	movf	setDcFanSpeed@level+1,w
  4638  0295  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  4639  0296  0838               	movf	setDcFanSpeed@level,w
  4640  0297  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
  4641  0298  24B1               	fcall	_PWM3_LoadDutyValue
  4642                           
  4643                           ;main.c: 165:     char tempStr[4];;main.c: 166:     int2string(speed, tempStr);
  4644  0299  3034               	movlw	(low (setDcFanSpeed@tempStr| 0))& (0+255)
  4645  029A  0140               	movlb	0	; select bank0
  4646  029B  00B3               	movwf	??_setDcFanSpeed
  4647  029C  0833               	movf	??_setDcFanSpeed,w
  4648  029D  00AB               	movwf	int2string@numberStr
  4649  029E  083A               	movf	setDcFanSpeed@speed,w
  4650  029F  209A               	fcall	_int2string
  4651                           
  4652                           ;main.c: 167:     sendString2Serial("# DC fan speed is now ");
  4653  02A0  30C9               	movlw	low (STR_12| (0+32768))
  4654  02A1  00A1               	movwf	sendString2Serial@str
  4655  02A2  3084               	movlw	high (STR_12| (0+32768))
  4656  02A3  00A2               	movwf	sendString2Serial@str+1
  4657  02A4  2521               	fcall	_sendString2Serial
  4658                           
  4659                           ;main.c: 168:     sendString2Serial(tempStr);
  4660  02A5  3034               	movlw	low setDcFanSpeed@tempStr
  4661  02A6  00A1               	movwf	sendString2Serial@str
  4662  02A7  3000               	movlw	high setDcFanSpeed@tempStr
  4663  02A8  00A2               	movwf	sendString2Serial@str+1
  4664  02A9  2521               	fcall	_sendString2Serial
  4665                           
  4666                           ;main.c: 169:     sendLf2Serial();
  4667  02AA  262E               	fcall	_sendLf2Serial
  4668  02AB  0008               	return
  4669  02AC                     __end_of_setDcFanSpeed:
  4670                           
  4671                           	psect	text6
  4672  0463                     __ptext6:	
  4673 ;; *************** function ___wmul *****************
  4674 ;; Defined at:
  4675 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4678 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  product         2    4[BANK0 ] unsigned int 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  2    0[BANK0 ] unsigned int 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 3F/0
  4687 ;;		On exit  : 3F/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4690 ;;      Params:         0       4       0       0
  4691 ;;      Locals:         0       2       0       0
  4692 ;;      Temps:          0       0       0       0
  4693 ;;      Totals:         0       6       0       0
  4694 ;;Total ram usage:        6 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 4
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_setDcFanSpeed
  4701 ;;		_setHeaterPower
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705  0463                     ___wmul:	
  4706                           ;psect for function ___wmul
  4707                           
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4711  0463  01A4               	clrf	___wmul@product
  4712  0464  01A5               	clrf	___wmul@product+1
  4713  0465                     l2664:
  4714  0465  1C20               	btfss	___wmul@multiplier,0
  4715  0466  2C6B               	goto	l638
  4716  0467  0822               	movf	___wmul@multiplicand,w
  4717  0468  07A4               	addwf	___wmul@product,f
  4718  0469  0823               	movf	___wmul@multiplicand+1,w
  4719  046A  3DA5               	addwfc	___wmul@product+1,f
  4720  046B                     l638:
  4721  046B  3001               	movlw	1
  4722  046C                     u1645:
  4723  046C  35A2               	lslf	___wmul@multiplicand,f
  4724  046D  0DA3               	rlf	___wmul@multiplicand+1,f
  4725  046E  0B89               	decfsz	9,f
  4726  046F  2C6C               	goto	u1645
  4727  0470  3001               	movlw	1
  4728  0471                     u1655:
  4729  0471  36A1               	lsrf	___wmul@multiplier+1,f
  4730  0472  0CA0               	rrf	___wmul@multiplier,f
  4731  0473  0B89               	decfsz	9,f
  4732  0474  2C71               	goto	u1655
  4733  0475  0820               	movf	___wmul@multiplier,w
  4734  0476  0421               	iorwf	___wmul@multiplier+1,w
  4735  0477  1D03               	btfss	3,2
  4736  0478  2C65               	goto	l2664
  4737  0479  0825               	movf	___wmul@product+1,w
  4738  047A  00A1               	movwf	?___wmul+1
  4739  047B  0824               	movf	___wmul@product,w
  4740  047C  00A0               	movwf	?___wmul
  4741  047D  0008               	return
  4742  047E                     __end_of___wmul:
  4743                           
  4744                           	psect	text7
  4745  00FA                     __ptext7:	
  4746 ;; *************** function ___awdiv *****************
  4747 ;; Defined at:
  4748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  divisor         2    6[BANK0 ] int 
  4751 ;;  dividend        2    8[BANK0 ] int 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  quotient        2   13[BANK0 ] int 
  4754 ;;  sign            1   12[BANK0 ] unsigned char 
  4755 ;;  counter         1   11[BANK0 ] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  2    6[BANK0 ] int 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0
  4760 ;; Tracked objects:
  4761 ;;		On entry : 3F/0
  4762 ;;		On exit  : 3F/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4765 ;;      Params:         0       4       0       0
  4766 ;;      Locals:         0       4       0       0
  4767 ;;      Temps:          0       1       0       0
  4768 ;;      Totals:         0       9       0       0
  4769 ;;Total ram usage:        9 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 4
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_setDcFanSpeed
  4776 ;;		_setHeaterPower
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780  00FA                     ___awdiv:	
  4781                           ;psect for function ___awdiv
  4782                           
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4786  00FA  01AC               	clrf	___awdiv@sign
  4787  00FB  1FA7               	btfss	___awdiv@divisor+1,7
  4788  00FC  2904               	goto	l2698
  4789  00FD  09A6               	comf	___awdiv@divisor,f
  4790  00FE  09A7               	comf	___awdiv@divisor+1,f
  4791  00FF  0AA6               	incf	___awdiv@divisor,f
  4792  0100  1903               	skipnz
  4793  0101  0AA7               	incf	___awdiv@divisor+1,f
  4794  0102  01AC               	clrf	___awdiv@sign
  4795  0103  0AAC               	incf	___awdiv@sign,f
  4796  0104                     l2698:
  4797  0104  1FA9               	btfss	___awdiv@dividend+1,7
  4798  0105  290F               	goto	l2704
  4799  0106  09A8               	comf	___awdiv@dividend,f
  4800  0107  09A9               	comf	___awdiv@dividend+1,f
  4801  0108  0AA8               	incf	___awdiv@dividend,f
  4802  0109  1903               	skipnz
  4803  010A  0AA9               	incf	___awdiv@dividend+1,f
  4804  010B  3001               	movlw	1
  4805  010C  00AA               	movwf	??___awdiv
  4806  010D  082A               	movf	??___awdiv,w
  4807  010E  06AC               	xorwf	___awdiv@sign,f
  4808  010F                     l2704:
  4809  010F  01AD               	clrf	___awdiv@quotient
  4810  0110  01AE               	clrf	___awdiv@quotient+1
  4811  0111  0826               	movf	___awdiv@divisor,w
  4812  0112  0427               	iorwf	___awdiv@divisor+1,w
  4813  0113  1903               	btfsc	3,2
  4814  0114  293E               	goto	l2726
  4815  0115  01AB               	clrf	___awdiv@counter
  4816  0116  0AAB               	incf	___awdiv@counter,f
  4817  0117                     l2714:
  4818  0117  1BA7               	btfsc	___awdiv@divisor+1,7
  4819  0118  2923               	goto	l2716
  4820  0119  3001               	movlw	1
  4821  011A                     u1725:
  4822  011A  35A6               	lslf	___awdiv@divisor,f
  4823  011B  0DA7               	rlf	___awdiv@divisor+1,f
  4824  011C  0B89               	decfsz	9,f
  4825  011D  291A               	goto	u1725
  4826  011E  3001               	movlw	1
  4827  011F  00AA               	movwf	??___awdiv
  4828  0120  082A               	movf	??___awdiv,w
  4829  0121  07AB               	addwf	___awdiv@counter,f
  4830  0122  2917               	goto	l2714
  4831  0123                     l2716:
  4832  0123  3001               	movlw	1
  4833  0124                     u1745:
  4834  0124  35AD               	lslf	___awdiv@quotient,f
  4835  0125  0DAE               	rlf	___awdiv@quotient+1,f
  4836  0126  0B89               	decfsz	9,f
  4837  0127  2924               	goto	u1745
  4838  0128  0827               	movf	___awdiv@divisor+1,w
  4839  0129  0229               	subwf	___awdiv@dividend+1,w
  4840  012A  1D03               	skipz
  4841  012B  292E               	goto	u1755
  4842  012C  0826               	movf	___awdiv@divisor,w
  4843  012D  0228               	subwf	___awdiv@dividend,w
  4844  012E                     u1755:
  4845  012E  1C03               	skipc
  4846  012F  2935               	goto	l2722
  4847  0130  0826               	movf	___awdiv@divisor,w
  4848  0131  02A8               	subwf	___awdiv@dividend,f
  4849  0132  0827               	movf	___awdiv@divisor+1,w
  4850  0133  3BA9               	subwfb	___awdiv@dividend+1,f
  4851  0134  142D               	bsf	___awdiv@quotient,0
  4852  0135                     l2722:
  4853  0135  3001               	movlw	1
  4854  0136                     u1765:
  4855  0136  36A7               	lsrf	___awdiv@divisor+1,f
  4856  0137  0CA6               	rrf	___awdiv@divisor,f
  4857  0138  0B89               	decfsz	9,f
  4858  0139  2936               	goto	u1765
  4859  013A  3001               	movlw	1
  4860  013B  02AB               	subwf	___awdiv@counter,f
  4861  013C  1D03               	btfss	3,2
  4862  013D  2923               	goto	l2716
  4863  013E                     l2726:
  4864  013E  082C               	movf	___awdiv@sign,w
  4865  013F  1903               	btfsc	3,2
  4866  0140  2946               	goto	l2730
  4867  0141  09AD               	comf	___awdiv@quotient,f
  4868  0142  09AE               	comf	___awdiv@quotient+1,f
  4869  0143  0AAD               	incf	___awdiv@quotient,f
  4870  0144  1903               	skipnz
  4871  0145  0AAE               	incf	___awdiv@quotient+1,f
  4872  0146                     l2730:
  4873  0146  082E               	movf	___awdiv@quotient+1,w
  4874  0147  00A7               	movwf	?___awdiv+1
  4875  0148  082D               	movf	___awdiv@quotient,w
  4876  0149  00A6               	movwf	?___awdiv
  4877  014A  0008               	return
  4878  014B                     __end_of___awdiv:
  4879                           
  4880                           	psect	text8
  4881  04B1                     __ptext8:	
  4882 ;; *************** function _PWM3_LoadDutyValue *****************
  4883 ;; Defined at:
  4884 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0
  4893 ;; Tracked objects:
  4894 ;;		On entry : 3F/0
  4895 ;;		On exit  : 3F/6
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4898 ;;      Params:         0       2       0       0
  4899 ;;      Locals:         0       0       0       0
  4900 ;;      Temps:          0       2       0       0
  4901 ;;      Totals:         0       4       0       0
  4902 ;;Total ram usage:        4 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 4
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_setDcFanSpeed
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912  04B1                     _PWM3_LoadDutyValue:	
  4913                           ;psect for function _PWM3_LoadDutyValue
  4914                           
  4915                           
  4916                           ;mcc_generated_files/pwm3.c: 72:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 73:  {;mcc_generated_files/pwm3.c: 75:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  4920  04B1  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  4921  04B2  00A3               	movwf	??_PWM3_LoadDutyValue+1
  4922  04B3  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  4923  04B4  00A2               	movwf	??_PWM3_LoadDutyValue
  4924  04B5  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  4925  04B6  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  4926  04B7  36A3               	lsrf	??_PWM3_LoadDutyValue+1,f
  4927  04B8  0CA2               	rrf	??_PWM3_LoadDutyValue,f
  4928  04B9  0822               	movf	??_PWM3_LoadDutyValue,w
  4929  04BA  0146               	movlb	6	; select bank6
  4930  04BB  0095               	movwf	21	;volatile
  4931                           
  4932                           ;mcc_generated_files/pwm3.c: 78:      PWM3DCL = (dutyValue & 0x0003)<<6;
  4933  04BC  0140               	movlb	0	; select bank0
  4934  04BD  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
  4935  04BE  3903               	andlw	3
  4936  04BF  00A2               	movwf	??_PWM3_LoadDutyValue
  4937  04C0  3005               	movlw	5
  4938  04C1                     u1475:
  4939  04C1  35A2               	lslf	??_PWM3_LoadDutyValue,f
  4940  04C2  3EFF               	addlw	-1
  4941  04C3  1D03               	skipz
  4942  04C4  2CC1               	goto	u1475
  4943  04C5  3522               	lslf	??_PWM3_LoadDutyValue,w
  4944  04C6  0146               	movlb	6	; select bank6
  4945  04C7  0094               	movwf	20	;volatile
  4946  04C8  0008               	return
  4947  04C9                     __end_of_PWM3_LoadDutyValue:
  4948                           
  4949                           	psect	text9
  4950  0498                     __ptext9:	
  4951 ;; *************** function _sendTemperature *****************
  4952 ;; Defined at:
  4953 ;;		line 146 in file "main.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  temp            1    wreg     unsigned char 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  temp            1   20[BANK0 ] unsigned char 
  4958 ;;  tempStr         4   21[BANK0 ] unsigned char [4]
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 3F/1
  4965 ;;		On exit  : 3F/2
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4968 ;;      Params:         0       0       0       0
  4969 ;;      Locals:         0       5       0       0
  4970 ;;      Temps:          0       1       0       0
  4971 ;;      Totals:         0       6       0       0
  4972 ;;Total ram usage:        6 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 6
  4975 ;; This function calls:
  4976 ;;		_int2string
  4977 ;;		_sendLf2Serial
  4978 ;;		_sendString2Serial
  4979 ;; This function is called by:
  4980 ;;		_main
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984  0498                     _sendTemperature:	
  4985                           ;psect for function _sendTemperature
  4986                           
  4987                           
  4988                           ;incstack = 0
  4989                           ; Regs used in _sendTemperature: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4990                           ;sendTemperature@temp stored from wreg
  4991  0498  0140               	movlb	0	; select bank0
  4992  0499  00B4               	movwf	sendTemperature@temp
  4993                           
  4994                           ;main.c: 147:     char tempStr[4];;main.c: 148:     int2string(temp, tempStr);
  4995  049A  3035               	movlw	(low (sendTemperature@tempStr| 0))& (0+255)
  4996  049B  00B3               	movwf	??_sendTemperature
  4997  049C  0833               	movf	??_sendTemperature,w
  4998  049D  00AB               	movwf	int2string@numberStr
  4999  049E  0834               	movf	sendTemperature@temp,w
  5000  049F  209A               	fcall	_int2string
  5001                           
  5002                           ;main.c: 149:     sendString2Serial("25,80,");
  5003  04A0  30EB               	movlw	low (STR_9| (0+32768))
  5004  04A1  00A1               	movwf	sendString2Serial@str
  5005  04A2  3085               	movlw	high (STR_9| (0+32768))
  5006  04A3  00A2               	movwf	sendString2Serial@str+1
  5007  04A4  2521               	fcall	_sendString2Serial
  5008                           
  5009                           ;main.c: 150:     sendString2Serial(tempStr);
  5010  04A5  3035               	movlw	low sendTemperature@tempStr
  5011  04A6  00A1               	movwf	sendString2Serial@str
  5012  04A7  3000               	movlw	high sendTemperature@tempStr
  5013  04A8  00A2               	movwf	sendString2Serial@str+1
  5014  04A9  2521               	fcall	_sendString2Serial
  5015                           
  5016                           ;main.c: 151:     sendString2Serial(",0,0");
  5017  04AA  3012               	movlw	low (STR_10| (0+32768))
  5018  04AB  00A1               	movwf	sendString2Serial@str
  5019  04AC  3086               	movlw	high (STR_10| (0+32768))
  5020  04AD  00A2               	movwf	sendString2Serial@str+1
  5021  04AE  2521               	fcall	_sendString2Serial
  5022                           
  5023                           ;main.c: 152:     sendLf2Serial();
  5024  04AF  262E               	fcall	_sendLf2Serial
  5025  04B0  0008               	return
  5026  04B1                     __end_of_sendTemperature:
  5027                           
  5028                           	psect	text10
  5029  009A                     __ptext10:	
  5030 ;; *************** function _int2string *****************
  5031 ;; Defined at:
  5032 ;;		line 94 in file "main.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  number          1    wreg     unsigned char 
  5035 ;;  numberStr       1   11[BANK0 ] PTR unsigned char 
  5036 ;;		 -> setHeaterPower@tempStr(4), setDcFanSpeed@tempStr(4), sendTemperature@tempStr(4), 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  number          1   16[BANK0 ] unsigned char 
  5039 ;;  index           1   18[BANK0 ] unsigned char 
  5040 ;;  tenths          1   17[BANK0 ] unsigned char 
  5041 ;;  hundreds        1   15[BANK0 ] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 3F/0
  5048 ;;		On exit  : 3F/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5051 ;;      Params:         0       1       0       0
  5052 ;;      Locals:         0       4       0       0
  5053 ;;      Temps:          0       3       0       0
  5054 ;;      Totals:         0       8       0       0
  5055 ;;Total ram usage:        8 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; Hardware stack levels required when called: 5
  5058 ;; This function calls:
  5059 ;;		___lbdiv
  5060 ;;		___lbmod
  5061 ;; This function is called by:
  5062 ;;		_sendTemperature
  5063 ;;		_setDcFanSpeed
  5064 ;;		_setHeaterPower
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068  009A                     _int2string:	
  5069                           ;psect for function _int2string
  5070                           
  5071                           
  5072                           ;incstack = 0
  5073                           ; Regs used in _int2string: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5074                           ;int2string@number stored from wreg
  5075  009A  00B0               	movwf	int2string@number
  5076                           
  5077                           ;main.c: 95:     uint8_t index = 0;
  5078  009B  01B2               	clrf	int2string@index
  5079                           
  5080                           ;main.c: 96:     uint8_t hundreds = (number / 100) % 10;
  5081  009C  300A               	movlw	10
  5082  009D  00AC               	movwf	??_int2string
  5083  009E  082C               	movf	??_int2string,w
  5084  009F  00A5               	movwf	___lbmod@divisor
  5085  00A0  3064               	movlw	100
  5086  00A1  00AD               	movwf	??_int2string+1
  5087  00A2  082D               	movf	??_int2string+1,w
  5088  00A3  00A0               	movwf	___lbdiv@divisor
  5089  00A4  0830               	movf	int2string@number,w
  5090  00A5  2403               	fcall	___lbdiv
  5091  00A6  2444               	fcall	___lbmod
  5092  00A7  00AE               	movwf	??_int2string+2
  5093  00A8  082E               	movf	??_int2string+2,w
  5094  00A9  00AF               	movwf	int2string@hundreds
  5095                           
  5096                           ;main.c: 97:     uint8_t tenths = (number / 10) % 10;
  5097  00AA  300A               	movlw	10
  5098  00AB  00AC               	movwf	??_int2string
  5099  00AC  082C               	movf	??_int2string,w
  5100  00AD  00A5               	movwf	___lbmod@divisor
  5101  00AE  300A               	movlw	10
  5102  00AF  00AD               	movwf	??_int2string+1
  5103  00B0  082D               	movf	??_int2string+1,w
  5104  00B1  00A0               	movwf	___lbdiv@divisor
  5105  00B2  0830               	movf	int2string@number,w
  5106  00B3  2403               	fcall	___lbdiv
  5107  00B4  2444               	fcall	___lbmod
  5108  00B5  00AE               	movwf	??_int2string+2
  5109  00B6  082E               	movf	??_int2string+2,w
  5110  00B7  00B1               	movwf	int2string@tenths
  5111                           
  5112                           ;main.c: 98:     if (hundreds != 0) {
  5113  00B8  082F               	movf	int2string@hundreds,w
  5114  00B9  1903               	btfsc	3,2
  5115  00BA  28CF               	goto	l2604
  5116                           
  5117                           ;main.c: 99:         numberStr[index++] = hundreds + '0';
  5118  00BB  082F               	movf	int2string@hundreds,w
  5119  00BC  3E30               	addlw	48
  5120  00BD  00AC               	movwf	??_int2string
  5121  00BE  082B               	movf	int2string@numberStr,w
  5122  00BF  0086               	movwf	6
  5123  00C0  0187               	clrf	7
  5124  00C1  082C               	movf	??_int2string,w
  5125  00C2  0081               	movwf	1
  5126  00C3  3001               	movlw	1
  5127  00C4  00AC               	movwf	??_int2string
  5128  00C5  082C               	movf	??_int2string,w
  5129  00C6  07B2               	addwf	int2string@index,f
  5130                           
  5131                           ;main.c: 100:         numberStr[index++] = tenths + '0';
  5132  00C7  0831               	movf	int2string@tenths,w
  5133  00C8  3E30               	addlw	48
  5134  00C9  00AC               	movwf	??_int2string
  5135  00CA  0832               	movf	int2string@index,w
  5136  00CB  072B               	addwf	int2string@numberStr,w
  5137  00CC  00AD               	movwf	??_int2string+1
  5138  00CD  082D               	movf	??_int2string+1,w
  5139  00CE  28D6               	goto	L1
  5140  00CF                     l2604:	
  5141                           ;main.c: 101:     } else if (tenths != 0) {
  5142                           
  5143  00CF  0831               	movf	int2string@tenths,w
  5144  00D0  1903               	btfsc	3,2
  5145  00D1  28DE               	goto	l2610
  5146                           
  5147                           ;main.c: 102:         numberStr[index++] = tenths + '0';
  5148  00D2  0831               	movf	int2string@tenths,w
  5149  00D3  3E30               	addlw	48
  5150  00D4  00AC               	movwf	??_int2string
  5151  00D5  082B               	movf	int2string@numberStr,w
  5152  00D6                     L1:
  5153  00D6  0086               	movwf	6
  5154  00D7  0187               	clrf	7
  5155  00D8  082C               	movf	??_int2string,w
  5156  00D9  0081               	movwf	1
  5157  00DA  3001               	movlw	1
  5158  00DB  00AC               	movwf	??_int2string
  5159  00DC  082C               	movf	??_int2string,w
  5160  00DD  07B2               	addwf	int2string@index,f
  5161  00DE                     l2610:
  5162                           
  5163                           ;main.c: 104:     numberStr[index++] = number % 10 + '0';
  5164  00DE  300A               	movlw	10
  5165  00DF  00AC               	movwf	??_int2string
  5166  00E0  082C               	movf	??_int2string,w
  5167  00E1  00A5               	movwf	___lbmod@divisor
  5168  00E2  0830               	movf	int2string@number,w
  5169  00E3  2444               	fcall	___lbmod
  5170  00E4  3E30               	addlw	48
  5171  00E5  00AD               	movwf	??_int2string+1
  5172  00E6  0832               	movf	int2string@index,w
  5173  00E7  072B               	addwf	int2string@numberStr,w
  5174  00E8  00AE               	movwf	??_int2string+2
  5175  00E9  082E               	movf	??_int2string+2,w
  5176  00EA  0086               	movwf	6
  5177  00EB  0187               	clrf	7
  5178  00EC  082D               	movf	??_int2string+1,w
  5179  00ED  0081               	movwf	1
  5180  00EE  3001               	movlw	1
  5181  00EF  00AC               	movwf	??_int2string
  5182  00F0  082C               	movf	??_int2string,w
  5183  00F1  07B2               	addwf	int2string@index,f
  5184                           
  5185                           ;main.c: 105:     numberStr[index] = 0x0;
  5186  00F2  0832               	movf	int2string@index,w
  5187  00F3  072B               	addwf	int2string@numberStr,w
  5188  00F4  00AC               	movwf	??_int2string
  5189  00F5  082C               	movf	??_int2string,w
  5190  00F6  0086               	movwf	6
  5191  00F7  0187               	clrf	7
  5192  00F8  0181               	clrf	1
  5193  00F9  0008               	return
  5194  00FA                     __end_of_int2string:
  5195                           
  5196                           	psect	text11
  5197  0444                     __ptext11:	
  5198 ;; *************** function ___lbmod *****************
  5199 ;; Defined at:
  5200 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbmod.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  dividend        1    wreg     unsigned char 
  5203 ;;  divisor         1    5[BANK0 ] unsigned char 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  dividend        1    8[BANK0 ] unsigned char 
  5206 ;;  rem             1   10[BANK0 ] unsigned char 
  5207 ;;  counter         1    9[BANK0 ] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      unsigned char 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 3F/0
  5214 ;;		On exit  : 3F/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5217 ;;      Params:         0       1       0       0
  5218 ;;      Locals:         0       3       0       0
  5219 ;;      Temps:          0       2       0       0
  5220 ;;      Totals:         0       6       0       0
  5221 ;;Total ram usage:        6 bytes
  5222 ;; Hardware stack levels used: 1
  5223 ;; Hardware stack levels required when called: 4
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_int2string
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231  0444                     ___lbmod:	
  5232                           ;psect for function ___lbmod
  5233                           
  5234                           
  5235                           ;incstack = 0
  5236                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5237                           ;___lbmod@dividend stored from wreg
  5238  0444  00A8               	movwf	___lbmod@dividend
  5239  0445  3008               	movlw	8
  5240  0446  00A6               	movwf	??___lbmod
  5241  0447  0826               	movf	??___lbmod,w
  5242  0448  00A9               	movwf	___lbmod@counter
  5243  0449  01AA               	clrf	___lbmod@rem
  5244  044A                     l2436:
  5245  044A  0828               	movf	___lbmod@dividend,w
  5246  044B  00A6               	movwf	??___lbmod
  5247  044C  3007               	movlw	7
  5248  044D                     u1445:
  5249  044D  36A6               	lsrf	??___lbmod,f
  5250  044E  0B89               	decfsz	9,f
  5251  044F  2C4D               	goto	u1445
  5252  0450  352A               	lslf	___lbmod@rem,w
  5253  0451  0426               	iorwf	??___lbmod,w
  5254  0452  00A7               	movwf	??___lbmod+1
  5255  0453  0827               	movf	??___lbmod+1,w
  5256  0454  00AA               	movwf	___lbmod@rem
  5257  0455  1003               	clrc
  5258  0456  0DA8               	rlf	___lbmod@dividend,f
  5259  0457  0825               	movf	___lbmod@divisor,w
  5260  0458  022A               	subwf	___lbmod@rem,w
  5261  0459  1C03               	skipc
  5262  045A  2C5D               	goto	l856
  5263  045B  0825               	movf	___lbmod@divisor,w
  5264  045C  02AA               	subwf	___lbmod@rem,f
  5265  045D                     l856:
  5266  045D  3001               	movlw	1
  5267  045E  02A9               	subwf	___lbmod@counter,f
  5268  045F  1D03               	btfss	3,2
  5269  0460  2C4A               	goto	l2436
  5270  0461  082A               	movf	___lbmod@rem,w
  5271  0462  0008               	return
  5272  0463                     __end_of___lbmod:
  5273                           
  5274                           	psect	text12
  5275  0403                     __ptext12:	
  5276 ;; *************** function ___lbdiv *****************
  5277 ;; Defined at:
  5278 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lbdiv.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  dividend        1    wreg     unsigned char 
  5281 ;;  divisor         1    0[BANK0 ] unsigned char 
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  dividend        1    2[BANK0 ] unsigned char 
  5284 ;;  quotient        1    4[BANK0 ] unsigned char 
  5285 ;;  counter         1    3[BANK0 ] unsigned char 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      unsigned char 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0
  5290 ;; Tracked objects:
  5291 ;;		On entry : 3F/0
  5292 ;;		On exit  : 3F/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5295 ;;      Params:         0       1       0       0
  5296 ;;      Locals:         0       3       0       0
  5297 ;;      Temps:          0       1       0       0
  5298 ;;      Totals:         0       5       0       0
  5299 ;;Total ram usage:        5 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 4
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_int2string
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309  0403                     ___lbdiv:	
  5310                           ;psect for function ___lbdiv
  5311                           
  5312                           
  5313                           ;incstack = 0
  5314                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5315                           ;___lbdiv@dividend stored from wreg
  5316  0403  00A2               	movwf	___lbdiv@dividend
  5317  0404  01A4               	clrf	___lbdiv@quotient
  5318  0405  0820               	movf	___lbdiv@divisor,w
  5319  0406  1903               	btfsc	3,2
  5320  0407  2C22               	goto	l2428
  5321  0408  01A3               	clrf	___lbdiv@counter
  5322  0409  0AA3               	incf	___lbdiv@counter,f
  5323  040A                     l2416:
  5324  040A  1BA0               	btfsc	___lbdiv@divisor,7
  5325  040B  2C13               	goto	l2418
  5326  040C  1003               	clrc
  5327  040D  0DA0               	rlf	___lbdiv@divisor,f
  5328  040E  3001               	movlw	1
  5329  040F  00A1               	movwf	??___lbdiv
  5330  0410  0821               	movf	??___lbdiv,w
  5331  0411  07A3               	addwf	___lbdiv@counter,f
  5332  0412  2C0A               	goto	l2416
  5333  0413                     l2418:
  5334  0413  1003               	clrc
  5335  0414  0DA4               	rlf	___lbdiv@quotient,f
  5336  0415  0820               	movf	___lbdiv@divisor,w
  5337  0416  0222               	subwf	___lbdiv@dividend,w
  5338  0417  1C03               	skipc
  5339  0418  2C1D               	goto	L2
  5340  0419  0820               	movf	___lbdiv@divisor,w
  5341  041A  02A2               	subwf	___lbdiv@dividend,f
  5342  041B  1424               	bsf	___lbdiv@quotient,0
  5343  041C  1003               	clrc
  5344  041D                     L2:
  5345  041D  0CA0               	rrf	___lbdiv@divisor,f
  5346  041E  3001               	movlw	1
  5347  041F  02A3               	subwf	___lbdiv@counter,f
  5348  0420  1D03               	btfss	3,2
  5349  0421  2C13               	goto	l2418
  5350  0422                     l2428:
  5351  0422  0824               	movf	___lbdiv@quotient,w
  5352  0423  0008               	return
  5353  0424                     __end_of___lbdiv:
  5354                           
  5355                           	psect	text13
  5356  0571                     __ptext13:	
  5357 ;; *************** function _sendChannelsReply *****************
  5358 ;; Defined at:
  5359 ;;		line 155 in file "main.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  chans           1    wreg     PTR unsigned char 
  5362 ;;		 -> main@parameters(5), 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  chans           1    4[BANK0 ] PTR unsigned char 
  5365 ;;		 -> main@parameters(5), 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 3F/0
  5372 ;;		On exit  : 3F/2
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5375 ;;      Params:         0       0       0       0
  5376 ;;      Locals:         0       1       0       0
  5377 ;;      Temps:          0       0       0       0
  5378 ;;      Totals:         0       1       0       0
  5379 ;;Total ram usage:        1 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 6
  5382 ;; This function calls:
  5383 ;;		_sendLf2Serial
  5384 ;;		_sendString2Serial
  5385 ;; This function is called by:
  5386 ;;		_main
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390  0571                     _sendChannelsReply:	
  5391                           ;psect for function _sendChannelsReply
  5392                           
  5393                           
  5394                           ;incstack = 0
  5395                           ; Regs used in _sendChannelsReply: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5396                           ;sendChannelsReply@chans stored from wreg
  5397  0571  00A4               	movwf	sendChannelsReply@chans
  5398                           
  5399                           ;main.c: 156:     sendString2Serial("# Active channels set to ");
  5400  0572  307E               	movlw	low (STR_11| (0+32768))
  5401  0573  00A1               	movwf	sendString2Serial@str
  5402  0574  3084               	movlw	high (STR_11| (0+32768))
  5403  0575  00A2               	movwf	sendString2Serial@str+1
  5404  0576  2521               	fcall	_sendString2Serial
  5405                           
  5406                           ;main.c: 157:     sendString2Serial(chans);
  5407  0577  0824               	movf	sendChannelsReply@chans,w
  5408  0578  00A1               	movwf	sendString2Serial@str
  5409  0579  3000               	movlw	0
  5410  057A  00A2               	movwf	sendString2Serial@str+1
  5411  057B  2521               	fcall	_sendString2Serial
  5412                           
  5413                           ;main.c: 158:     sendLf2Serial();
  5414  057C  262E               	fcall	_sendLf2Serial
  5415  057D  0008               	return
  5416  057E                     __end_of_sendChannelsReply:
  5417                           
  5418                           	psect	text14
  5419  0521                     __ptext14:	
  5420 ;; *************** function _sendString2Serial *****************
  5421 ;; Defined at:
  5422 ;;		line 185 in file "main.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  str             2    1[BANK0 ] PTR unsigned char 
  5425 ;;		 -> main@parameters(5), STR_13(23), setHeaterPower@tempStr(4), STR_12(23), 
  5426 ;;		 -> setDcFanSpeed@tempStr(4), STR_11(26), STR_10(5), STR_9(7), 
  5427 ;;		 -> sendTemperature@tempStr(4), 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      void 
  5432 ;; Registers used:
  5433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 3F/0
  5436 ;;		On exit  : 3F/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5439 ;;      Params:         0       2       0       0
  5440 ;;      Locals:         0       0       0       0
  5441 ;;      Temps:          0       1       0       0
  5442 ;;      Totals:         0       3       0       0
  5443 ;;Total ram usage:        3 bytes
  5444 ;; Hardware stack levels used: 1
  5445 ;; Hardware stack levels required when called: 5
  5446 ;; This function calls:
  5447 ;;		_EUSART1_Write
  5448 ;; This function is called by:
  5449 ;;		_sendTemperature
  5450 ;;		_sendChannelsReply
  5451 ;;		_setDcFanSpeed
  5452 ;;		_setHeaterPower
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456  0521                     _sendString2Serial:	
  5457                           ;psect for function _sendString2Serial
  5458                           
  5459  0521                     l2654:	
  5460                           ;main.c: 186:     while (*str != 0) {
  5461                           
  5462                           ;incstack = 0
  5463                           ; Regs used in _sendString2Serial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5464                           
  5465                           
  5466                           ;main.c: 186:     while (*str != 0) {
  5467  0521  0821               	movf	sendString2Serial@str,w
  5468  0522  0084               	movwf	4
  5469  0523  0822               	movf	sendString2Serial@str+1,w
  5470  0524  0085               	movwf	5
  5471  0525  0012               	moviw fsr0++
  5472  0526  1903               	btfsc	3,2
  5473  0527  0008               	return
  5474                           
  5475                           ;main.c: 187:         EUSART1_Write(*str);
  5476  0528  0821               	movf	sendString2Serial@str,w
  5477  0529  0084               	movwf	4
  5478  052A  0822               	movf	sendString2Serial@str+1,w
  5479  052B  0085               	movwf	5
  5480  052C  0800               	movf	0,w	;code access
  5481  052D  25AA               	fcall	_EUSART1_Write
  5482                           
  5483                           ;main.c: 188:         str++;
  5484  052E  3001               	movlw	1
  5485  052F  0140               	movlb	0	; select bank0
  5486  0530  07A1               	addwf	sendString2Serial@str,f
  5487  0531  3000               	movlw	0
  5488  0532  3DA2               	addwfc	sendString2Serial@str+1,f
  5489  0533  2D21               	goto	l2654
  5490  0534                     __end_of_sendString2Serial:
  5491                           
  5492                           	psect	text15
  5493  062E                     __ptext15:	
  5494 ;; *************** function _sendLf2Serial *****************
  5495 ;; Defined at:
  5496 ;;		line 192 in file "main.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0, pclath, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 3F/0
  5507 ;;		On exit  : 3F/2
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5510 ;;      Params:         0       0       0       0
  5511 ;;      Locals:         0       0       0       0
  5512 ;;      Temps:          0       0       0       0
  5513 ;;      Totals:         0       0       0       0
  5514 ;;Total ram usage:        0 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; Hardware stack levels required when called: 5
  5517 ;; This function calls:
  5518 ;;		_EUSART1_Write
  5519 ;; This function is called by:
  5520 ;;		_sendTemperature
  5521 ;;		_sendChannelsReply
  5522 ;;		_setDcFanSpeed
  5523 ;;		_setHeaterPower
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527  062E                     _sendLf2Serial:	
  5528                           ;psect for function _sendLf2Serial
  5529                           
  5530                           
  5531                           ;main.c: 193:     EUSART1_Write(0xA);
  5532                           
  5533                           ;incstack = 0
  5534                           ; Regs used in _sendLf2Serial: [wreg+status,2+status,0+pclath+cstack]
  5535  062E  300A               	movlw	10
  5536  062F  25AA               	fcall	_EUSART1_Write
  5537  0630  0008               	return
  5538  0631                     __end_of_sendLf2Serial:
  5539                           
  5540                           	psect	text16
  5541  05AA                     __ptext16:	
  5542 ;; *************** function _EUSART1_Write *****************
  5543 ;; Defined at:
  5544 ;;		line 162 in file "mcc_generated_files/eusart1.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  txData          1    wreg     unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  txData          1    0[BANK0 ] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg
  5553 ;; Tracked objects:
  5554 ;;		On entry : 3F/0
  5555 ;;		On exit  : 3F/2
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5558 ;;      Params:         0       0       0       0
  5559 ;;      Locals:         0       1       0       0
  5560 ;;      Temps:          0       0       0       0
  5561 ;;      Totals:         0       1       0       0
  5562 ;;Total ram usage:        1 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 4
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_sendString2Serial
  5569 ;;		_sendLf2Serial
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573  05AA                     _EUSART1_Write:	
  5574                           ;psect for function _EUSART1_Write
  5575                           
  5576                           
  5577                           ;incstack = 0
  5578                           ; Regs used in _EUSART1_Write: [wreg]
  5579                           ;EUSART1_Write@txData stored from wreg
  5580  05AA  00A0               	movwf	EUSART1_Write@txData
  5581  05AB                     l132:	
  5582                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:     }
  5583                           
  5584                           
  5585                           ;mcc_generated_files/eusart1.c: 164:     while(0 == PIR3bits.TX1IF)
  5586  05AB  014E               	movlb	14	; select bank14
  5587  05AC  1E0F               	btfss	15,4	;volatile
  5588  05AD  2DAB               	goto	l132
  5589                           
  5590                           ;mcc_generated_files/eusart1.c: 168:     TX1REG = txData;
  5591  05AE  0140               	movlb	0	; select bank0
  5592  05AF  0820               	movf	EUSART1_Write@txData,w
  5593  05B0  0142               	movlb	2	; select bank2
  5594  05B1  009A               	movwf	26	;volatile
  5595  05B2  0008               	return
  5596  05B3                     __end_of_EUSART1_Write:
  5597                           
  5598                           	psect	text17
  5599  01E4                     __ptext17:	
  5600 ;; *************** function _getCommandAndParams *****************
  5601 ;; Defined at:
  5602 ;;		line 120 in file "main.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  readLine        1    wreg     PTR unsigned char 
  5605 ;;		 -> main@readBuffer(15), 
  5606 ;;  params          1    4[BANK0 ] PTR unsigned char 
  5607 ;;		 -> main@parameters(5), 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  readLine        1    8[BANK0 ] PTR unsigned char 
  5610 ;;		 -> main@readBuffer(15), 
  5611 ;;  lengthOfPara    1    7[BANK0 ] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      enum E6699
  5614 ;; Registers used:
  5615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 3F/0
  5618 ;;		On exit  : 3F/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5621 ;;      Params:         0       1       0       0
  5622 ;;      Locals:         0       2       0       0
  5623 ;;      Temps:          0       2       0       0
  5624 ;;      Totals:         0       5       0       0
  5625 ;;Total ram usage:        5 bytes
  5626 ;; Hardware stack levels used: 1
  5627 ;; Hardware stack levels required when called: 5
  5628 ;; This function calls:
  5629 ;;		_getParams
  5630 ;;		_isEqual
  5631 ;;		_startsWith
  5632 ;; This function is called by:
  5633 ;;		_main
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637  01E4                     _getCommandAndParams:	
  5638                           ;psect for function _getCommandAndParams
  5639                           
  5640                           
  5641                           ;incstack = 0
  5642                           ; Regs used in _getCommandAndParams: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5643                           ;getCommandAndParams@readLine stored from wreg
  5644  01E4  00A8               	movwf	getCommandAndParams@readLine
  5645                           
  5646                           ;main.c: 121:     if (isEqual("READ", readLine)) return READ;
  5647  01E5  301C               	movlw	low (STR_1| (0+32768))
  5648  01E6  00A0               	movwf	isEqual@str1
  5649  01E7  3086               	movlw	high (STR_1| (0+32768))
  5650  01E8  00A1               	movwf	isEqual@str1+1
  5651  01E9  0828               	movf	getCommandAndParams@readLine,w
  5652  01EA  00A5               	movwf	??_getCommandAndParams
  5653  01EB  0825               	movf	??_getCommandAndParams,w
  5654  01EC  00A2               	movwf	isEqual@str2
  5655  01ED  230F               	fcall	_isEqual
  5656  01EE  3A00               	xorlw	0
  5657  01EF  1903               	skipnz
  5658  01F0  29F3               	goto	l2806
  5659  01F1  3000               	movlw	0
  5660  01F2  0008               	return
  5661  01F3                     l2806:
  5662                           
  5663                           ;main.c: 122:     uint8_t lengthOfParams = getParams(readLine, params);
  5664  01F3  0824               	movf	getCommandAndParams@params,w
  5665  01F4  00A5               	movwf	??_getCommandAndParams
  5666  01F5  0825               	movf	??_getCommandAndParams,w
  5667  01F6  00A0               	movwf	getParams@params
  5668  01F7  0828               	movf	getCommandAndParams@readLine,w
  5669  01F8  222C               	fcall	_getParams
  5670  01F9  00A6               	movwf	??_getCommandAndParams+1
  5671  01FA  0826               	movf	??_getCommandAndParams+1,w
  5672  01FB  00A7               	movwf	getCommandAndParams@lengthOfParams
  5673                           
  5674                           ;main.c: 123:     if (startsWith("CHAN;", readLine)) {
  5675  01FC  3000               	movlw	low (STR_3| (0+32768))
  5676  01FD  00A0               	movwf	startsWith@str1
  5677  01FE  3086               	movlw	high (STR_3| (0+32768))
  5678  01FF  00A1               	movwf	startsWith@str1+1
  5679  0200  0828               	movf	getCommandAndParams@readLine,w
  5680  0201  00A5               	movwf	??_getCommandAndParams
  5681  0202  0825               	movf	??_getCommandAndParams,w
  5682  0203  00A2               	movwf	startsWith@str2
  5683  0204  23B9               	fcall	_startsWith
  5684  0205  3A00               	xorlw	0
  5685  0206  1903               	skipnz
  5686  0207  2A0E               	goto	l2816
  5687                           
  5688                           ;main.c: 124:         if (lengthOfParams == 4) return CHAN;
  5689  0208  3004               	movlw	4
  5690  0209  0627               	xorwf	getCommandAndParams@lengthOfParams,w
  5691  020A  1D03               	btfss	3,2
  5692  020B  2A0E               	goto	l2816
  5693  020C  3001               	movlw	1
  5694  020D  0008               	return
  5695  020E                     l2816:
  5696                           
  5697                           ;main.c: 126:     if (startsWith("DCFAN;", readLine)) return DCFAN;
  5698  020E  30F2               	movlw	low (STR_5| (0+32768))
  5699  020F  00A0               	movwf	startsWith@str1
  5700  0210  3085               	movlw	high (STR_5| (0+32768))
  5701  0211  00A1               	movwf	startsWith@str1+1
  5702  0212  0828               	movf	getCommandAndParams@readLine,w
  5703  0213  00A5               	movwf	??_getCommandAndParams
  5704  0214  0825               	movf	??_getCommandAndParams,w
  5705  0215  00A2               	movwf	startsWith@str2
  5706  0216  23B9               	fcall	_startsWith
  5707  0217  3A00               	xorlw	0
  5708  0218  1903               	skipnz
  5709  0219  2A1C               	goto	l2822
  5710  021A  3002               	movlw	2
  5711  021B  0008               	return
  5712  021C                     l2822:
  5713                           
  5714                           ;main.c: 127:     if (startsWith("OT1;", readLine)) return OT1;
  5715  021C  3017               	movlw	low (STR_7| (0+32768))
  5716  021D  00A0               	movwf	startsWith@str1
  5717  021E  3086               	movlw	high (STR_7| (0+32768))
  5718  021F  00A1               	movwf	startsWith@str1+1
  5719  0220  0828               	movf	getCommandAndParams@readLine,w
  5720  0221  00A5               	movwf	??_getCommandAndParams
  5721  0222  0825               	movf	??_getCommandAndParams,w
  5722  0223  00A2               	movwf	startsWith@str2
  5723  0224  23B9               	fcall	_startsWith
  5724  0225  3A00               	xorlw	0
  5725  0226  1903               	skipnz
  5726  0227  2A2A               	goto	l2828
  5727  0228  3003               	movlw	3
  5728  0229  0008               	return
  5729  022A                     l2828:
  5730                           
  5731                           ;main.c: 128:     return ERROR;
  5732  022A  3004               	movlw	4
  5733  022B  0008               	return
  5734  022C                     __end_of_getCommandAndParams:
  5735                           
  5736                           	psect	text18
  5737  03B9                     __ptext18:	
  5738 ;; *************** function _startsWith *****************
  5739 ;; Defined at:
  5740 ;;		line 85 in file "main.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  str1            2    0[BANK0 ] PTR unsigned char 
  5743 ;;		 -> STR_8(5), STR_6(7), STR_4(6), 
  5744 ;;  str2            1    2[BANK0 ] PTR unsigned char 
  5745 ;;		 -> main@readBuffer(15), 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      unsigned char 
  5750 ;; Registers used:
  5751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5752 ;; Tracked objects:
  5753 ;;		On entry : 3F/0
  5754 ;;		On exit  : 3F/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5757 ;;      Params:         0       3       0       0
  5758 ;;      Locals:         0       0       0       0
  5759 ;;      Temps:          0       1       0       0
  5760 ;;      Totals:         0       4       0       0
  5761 ;;Total ram usage:        4 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 4
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_getCommandAndParams
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771  03B9                     _startsWith:	
  5772                           ;psect for function _startsWith
  5773                           
  5774                           
  5775                           ;main.c: 86:     while (*str1 != 0x0 && *str1 == *str2) {
  5776                           
  5777                           ;incstack = 0
  5778                           ; Regs used in _startsWith: [wreg-fsr1h+status,2+status,0+pclath]
  5779  03B9  2BCD               	goto	l2574
  5780  03BA                     l2576:
  5781  03BA  0822               	movf	startsWith@str2,w
  5782  03BB  0086               	movwf	6
  5783  03BC  0187               	clrf	7
  5784  03BD  0820               	movf	startsWith@str1,w
  5785  03BE  0084               	movwf	4
  5786  03BF  0821               	movf	startsWith@str1+1,w
  5787  03C0  0085               	movwf	5
  5788  03C1  0800               	movf	0,w	;code access
  5789  03C2  0601               	xorwf	1,w
  5790  03C3  1D03               	btfss	3,2
  5791  03C4  2BD4               	goto	l2578
  5792                           
  5793                           ;main.c: 87:         str1++;
  5794  03C5  3001               	movlw	1
  5795  03C6  07A0               	addwf	startsWith@str1,f
  5796  03C7  3000               	movlw	0
  5797  03C8  3DA1               	addwfc	startsWith@str1+1,f
  5798                           
  5799                           ;main.c: 88:         str2++;
  5800  03C9  3001               	movlw	1
  5801  03CA  00A3               	movwf	??_startsWith
  5802  03CB  0823               	movf	??_startsWith,w
  5803  03CC  07A2               	addwf	startsWith@str2,f
  5804  03CD                     l2574:
  5805                           
  5806                           ;main.c: 86:     while (*str1 != 0x0 && *str1 == *str2) {
  5807  03CD  0820               	movf	startsWith@str1,w
  5808  03CE  0084               	movwf	4
  5809  03CF  0821               	movf	startsWith@str1+1,w
  5810  03D0  0085               	movwf	5
  5811  03D1  0012               	moviw fsr0++
  5812  03D2  1D03               	btfss	3,2
  5813  03D3  2BBA               	goto	l2576
  5814  03D4                     l2578:
  5815                           
  5816                           ;main.c: 90:     if (*str1 == 0x0) return 1;
  5817  03D4  0820               	movf	startsWith@str1,w
  5818  03D5  0084               	movwf	4
  5819  03D6  0821               	movf	startsWith@str1+1,w
  5820  03D7  0085               	movwf	5
  5821  03D8  0012               	moviw fsr0++
  5822  03D9  1D03               	btfss	3,2
  5823  03DA  2BDD               	goto	l2586
  5824  03DB  3001               	movlw	1
  5825  03DC  0008               	return
  5826  03DD                     l2586:
  5827  03DD  3000               	movlw	0
  5828  03DE  0008               	return
  5829  03DF                     __end_of_startsWith:
  5830                           
  5831                           	psect	text19
  5832  030F                     __ptext19:	
  5833 ;; *************** function _isEqual *****************
  5834 ;; Defined at:
  5835 ;;		line 76 in file "main.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  str1            2    0[BANK0 ] PTR unsigned char 
  5838 ;;		 -> STR_2(5), 
  5839 ;;  str2            1    2[BANK0 ] PTR unsigned char 
  5840 ;;		 -> main@readBuffer(15), 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      unsigned char 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5847 ;; Tracked objects:
  5848 ;;		On entry : 3F/0
  5849 ;;		On exit  : 3F/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5852 ;;      Params:         0       3       0       0
  5853 ;;      Locals:         0       0       0       0
  5854 ;;      Temps:          0       1       0       0
  5855 ;;      Totals:         0       4       0       0
  5856 ;;Total ram usage:        4 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 4
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_getCommandAndParams
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866  030F                     _isEqual:	
  5867                           ;psect for function _isEqual
  5868                           
  5869                           
  5870                           ;main.c: 77:     while (*str1 != 0x0 && *str1 == *str2) {
  5871                           
  5872                           ;incstack = 0
  5873                           ; Regs used in _isEqual: [wreg-fsr1h+status,2+status,0+pclath]
  5874  030F  2B23               	goto	l2550
  5875  0310                     l2552:
  5876  0310  0822               	movf	isEqual@str2,w
  5877  0311  0086               	movwf	6
  5878  0312  0187               	clrf	7
  5879  0313  0820               	movf	isEqual@str1,w
  5880  0314  0084               	movwf	4
  5881  0315  0821               	movf	isEqual@str1+1,w
  5882  0316  0085               	movwf	5
  5883  0317  0800               	movf	0,w	;code access
  5884  0318  0601               	xorwf	1,w
  5885  0319  1D03               	btfss	3,2
  5886  031A  2B2A               	goto	l2554
  5887                           
  5888                           ;main.c: 78:         str1++;
  5889  031B  3001               	movlw	1
  5890  031C  07A0               	addwf	isEqual@str1,f
  5891  031D  3000               	movlw	0
  5892  031E  3DA1               	addwfc	isEqual@str1+1,f
  5893                           
  5894                           ;main.c: 79:         str2++;
  5895  031F  3001               	movlw	1
  5896  0320  00A3               	movwf	??_isEqual
  5897  0321  0823               	movf	??_isEqual,w
  5898  0322  07A2               	addwf	isEqual@str2,f
  5899  0323                     l2550:
  5900                           
  5901                           ;main.c: 77:     while (*str1 != 0x0 && *str1 == *str2) {
  5902  0323  0820               	movf	isEqual@str1,w
  5903  0324  0084               	movwf	4
  5904  0325  0821               	movf	isEqual@str1+1,w
  5905  0326  0085               	movwf	5
  5906  0327  0012               	moviw fsr0++
  5907  0328  1D03               	btfss	3,2
  5908  0329  2B10               	goto	l2552
  5909  032A                     l2554:
  5910                           
  5911                           ;main.c: 81:     if (*str1 == 0x0 && *str2 == 0x0) return 1;
  5912  032A  0820               	movf	isEqual@str1,w
  5913  032B  0084               	movwf	4
  5914  032C  0821               	movf	isEqual@str1+1,w
  5915  032D  0085               	movwf	5
  5916  032E  0012               	moviw fsr0++
  5917  032F  1D03               	btfss	3,2
  5918  0330  2B39               	goto	l2564
  5919  0331  0822               	movf	isEqual@str2,w
  5920  0332  0086               	movwf	6
  5921  0333  0187               	clrf	7
  5922  0334  0801               	movf	1,w
  5923  0335  1D03               	btfss	3,2
  5924  0336  2B39               	goto	l2564
  5925  0337  3001               	movlw	1
  5926  0338  0008               	return
  5927  0339                     l2564:
  5928  0339  3000               	movlw	0
  5929  033A  0008               	return
  5930  033B                     __end_of_isEqual:
  5931                           
  5932                           	psect	text20
  5933  022C                     __ptext20:	
  5934 ;; *************** function _getParams *****************
  5935 ;; Defined at:
  5936 ;;		line 131 in file "main.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  readLine        1    wreg     PTR unsigned char 
  5939 ;;		 -> main@readBuffer(15), 
  5940 ;;  params          1    0[BANK0 ] PTR unsigned char 
  5941 ;;		 -> main@parameters(5), 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;  readLine        1    3[BANK0 ] PTR unsigned char 
  5944 ;;		 -> main@readBuffer(15), 
  5945 ;;  length          1    2[BANK0 ] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      unsigned char 
  5948 ;; Registers used:
  5949 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5950 ;; Tracked objects:
  5951 ;;		On entry : 3F/0
  5952 ;;		On exit  : 3F/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5955 ;;      Params:         0       1       0       0
  5956 ;;      Locals:         0       2       0       0
  5957 ;;      Temps:          0       1       0       0
  5958 ;;      Totals:         0       4       0       0
  5959 ;;Total ram usage:        4 bytes
  5960 ;; Hardware stack levels used: 1
  5961 ;; Hardware stack levels required when called: 4
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_getCommandAndParams
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969  022C                     _getParams:	
  5970                           ;psect for function _getParams
  5971                           
  5972                           
  5973                           ;incstack = 0
  5974                           ; Regs used in _getParams: [wreg+fsr1l+fsr1h+status,2+status,0]
  5975                           ;getParams@readLine stored from wreg
  5976  022C  00A3               	movwf	getParams@readLine
  5977                           
  5978                           ;main.c: 132:     uint8_t length = 0;
  5979  022D  01A2               	clrf	getParams@length
  5980                           
  5981                           ;main.c: 133:     while (*readLine != ';' && *readLine != 0x0) readLine++;
  5982  022E  2A39               	goto	l2620
  5983  022F                     l2622:
  5984  022F  0823               	movf	getParams@readLine,w
  5985  0230  0086               	movwf	6
  5986  0231  0187               	clrf	7
  5987  0232  0801               	movf	1,w
  5988  0233  1903               	btfsc	3,2
  5989  0234  2A40               	goto	l2624
  5990  0235  3001               	movlw	1
  5991  0236  00A1               	movwf	??_getParams
  5992  0237  0821               	movf	??_getParams,w
  5993  0238  07A3               	addwf	getParams@readLine,f
  5994  0239                     l2620:
  5995  0239  0823               	movf	getParams@readLine,w
  5996  023A  0086               	movwf	6
  5997  023B  0187               	clrf	7
  5998  023C  303B               	movlw	59
  5999  023D  0601               	xorwf	1,w
  6000  023E  1D03               	btfss	3,2
  6001  023F  2A2F               	goto	l2622
  6002  0240                     l2624:
  6003                           
  6004                           ;main.c: 134:     if (*readLine == 0x0) return 0;
  6005  0240  0823               	movf	getParams@readLine,w
  6006  0241  0086               	movwf	6
  6007  0242  0187               	clrf	7
  6008  0243  0801               	movf	1,w
  6009  0244  1D03               	btfss	3,2
  6010  0245  2A48               	goto	l2630
  6011  0246  3000               	movlw	0
  6012  0247  0008               	return
  6013  0248                     l2630:
  6014                           
  6015                           ;main.c: 135:     readLine++;
  6016  0248  3001               	movlw	1
  6017  0249  00A1               	movwf	??_getParams
  6018  024A  0821               	movf	??_getParams,w
  6019  024B  07A3               	addwf	getParams@readLine,f
  6020  024C                     l2640:	
  6021                           ;main.c: 136:     while (*readLine != 0x0) {
  6022                           
  6023                           
  6024                           ;main.c: 136:     while (*readLine != 0x0) {
  6025  024C  0823               	movf	getParams@readLine,w
  6026  024D  0086               	movwf	6
  6027  024E  0187               	clrf	7
  6028  024F  0801               	movf	1,w
  6029  0250  1903               	btfsc	3,2
  6030  0251  2A69               	goto	l2642
  6031                           
  6032                           ;main.c: 137:         *params = *readLine;
  6033  0252  0823               	movf	getParams@readLine,w
  6034  0253  0086               	movwf	6
  6035  0254  0187               	clrf	7
  6036  0255  0801               	movf	1,w
  6037  0256  00A1               	movwf	??_getParams
  6038  0257  0820               	movf	getParams@params,w
  6039  0258  0086               	movwf	6
  6040  0259  0187               	clrf	7
  6041  025A  0821               	movf	??_getParams,w
  6042  025B  0081               	movwf	1
  6043                           
  6044                           ;main.c: 138:         params++;
  6045  025C  3001               	movlw	1
  6046  025D  00A1               	movwf	??_getParams
  6047  025E  0821               	movf	??_getParams,w
  6048  025F  07A0               	addwf	getParams@params,f
  6049                           
  6050                           ;main.c: 139:         readLine++;
  6051  0260  3001               	movlw	1
  6052  0261  00A1               	movwf	??_getParams
  6053  0262  0821               	movf	??_getParams,w
  6054  0263  07A3               	addwf	getParams@readLine,f
  6055                           
  6056                           ;main.c: 140:         length++;
  6057  0264  3001               	movlw	1
  6058  0265  00A1               	movwf	??_getParams
  6059  0266  0821               	movf	??_getParams,w
  6060  0267  07A2               	addwf	getParams@length,f
  6061  0268  2A4C               	goto	l2640
  6062  0269                     l2642:
  6063                           
  6064                           ;main.c: 142:     *params = 0x0;
  6065  0269  0820               	movf	getParams@params,w
  6066  026A  0086               	movwf	6
  6067  026B  0187               	clrf	7
  6068  026C  0181               	clrf	1
  6069                           
  6070                           ;main.c: 143:     return length;
  6071  026D  0822               	movf	getParams@length,w
  6072  026E  0008               	return
  6073  026F                     __end_of_getParams:
  6074                           
  6075                           	psect	text21
  6076  0367                     __ptext21:	
  6077 ;; *************** function _getBeanTemperature *****************
  6078 ;; Defined at:
  6079 ;;		line 200 in file "main.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;		None
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  i               1    9[BANK0 ] unsigned char 
  6084 ;;  result          2    7[BANK0 ] unsigned short 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      unsigned char 
  6087 ;; Registers used:
  6088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 3F/0
  6091 ;;		On exit  : 3F/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6094 ;;      Params:         0       0       0       0
  6095 ;;      Locals:         0       3       0       0
  6096 ;;      Temps:          0       4       0       0
  6097 ;;      Totals:         0       7       0       0
  6098 ;;Total ram usage:        7 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 5
  6101 ;; This function calls:
  6102 ;;		_convert2Celsius
  6103 ;; This function is called by:
  6104 ;;		_main
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108  0367                     _getBeanTemperature:	
  6109                           ;psect for function _getBeanTemperature
  6110                           
  6111                           
  6112                           ;main.c: 201:     adc_result_t result = 0;
  6113                           
  6114                           ;incstack = 0
  6115                           ; Regs used in _getBeanTemperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6116  0367  01A7               	clrf	getBeanTemperature@result
  6117  0368  01A8               	clrf	getBeanTemperature@result+1
  6118                           
  6119                           ;main.c: 202:     for (uint8_t i = 0; i < 2; i++) {
  6120  0369  01A9               	clrf	getBeanTemperature@i
  6121  036A                     l2878:
  6122                           
  6123                           ;main.c: 203:         result = result + tempBuffer[i];
  6124  036A  3529               	lslf	getBeanTemperature@i,w
  6125  036B  3E50               	addlw	(low (_tempBuffer| 0))& (0+255)
  6126  036C  0086               	movwf	6
  6127  036D  0187               	clrf	7
  6128  036E  3F40               	moviw [0]fsr1
  6129  036F  00A3               	movwf	??_getBeanTemperature
  6130  0370  3F41               	moviw [1]fsr1
  6131  0371  00A4               	movwf	??_getBeanTemperature+1
  6132  0372  0827               	movf	getBeanTemperature@result,w
  6133  0373  0723               	addwf	??_getBeanTemperature,w
  6134  0374  00A5               	movwf	??_getBeanTemperature+2
  6135  0375  0828               	movf	getBeanTemperature@result+1,w
  6136  0376  3D24               	addwfc	??_getBeanTemperature+1,w
  6137  0377  00A6               	movwf	??_getBeanTemperature+3
  6138  0378  0825               	movf	??_getBeanTemperature+2,w
  6139  0379  00A7               	movwf	getBeanTemperature@result
  6140  037A  0826               	movf	??_getBeanTemperature+3,w
  6141  037B  00A8               	movwf	getBeanTemperature@result+1
  6142                           
  6143                           ;main.c: 204:     }
  6144  037C  3001               	movlw	1
  6145  037D  00A3               	movwf	??_getBeanTemperature
  6146  037E  0823               	movf	??_getBeanTemperature,w
  6147  037F  07A9               	addwf	getBeanTemperature@i,f
  6148  0380  3002               	movlw	2
  6149  0381  0229               	subwf	getBeanTemperature@i,w
  6150  0382  1C03               	skipc
  6151  0383  2B6A               	goto	l2878
  6152                           
  6153                           ;main.c: 205:     return convert2Celsius(result / 2);
  6154  0384  0828               	movf	getBeanTemperature@result+1,w
  6155  0385  00A4               	movwf	??_getBeanTemperature+1
  6156  0386  0827               	movf	getBeanTemperature@result,w
  6157  0387  00A3               	movwf	??_getBeanTemperature
  6158  0388  36A4               	lsrf	??_getBeanTemperature+1,f
  6159  0389  0CA3               	rrf	??_getBeanTemperature,f
  6160  038A  0823               	movf	??_getBeanTemperature,w
  6161  038B  00A0               	movwf	convert2Celsius@avg_result
  6162  038C  0824               	movf	??_getBeanTemperature+1,w
  6163  038D  00A1               	movwf	convert2Celsius@avg_result+1
  6164  038E  25B3               	fcall	_convert2Celsius
  6165  038F  0008               	return
  6166  0390                     __end_of_getBeanTemperature:
  6167                           
  6168                           	psect	text22
  6169  05B3                     __ptext22:	
  6170 ;; *************** function _convert2Celsius *****************
  6171 ;; Defined at:
  6172 ;;		line 196 in file "main.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  avg_result      2    0[BANK0 ] unsigned short 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      unsigned char 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0
  6181 ;; Tracked objects:
  6182 ;;		On entry : 3F/0
  6183 ;;		On exit  : 3F/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6186 ;;      Params:         0       2       0       0
  6187 ;;      Locals:         0       0       0       0
  6188 ;;      Temps:          0       1       0       0
  6189 ;;      Totals:         0       3       0       0
  6190 ;;Total ram usage:        3 bytes
  6191 ;; Hardware stack levels used: 1
  6192 ;; Hardware stack levels required when called: 4
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_getBeanTemperature
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200  05B3                     _convert2Celsius:	
  6201                           ;psect for function _convert2Celsius
  6202                           
  6203                           
  6204                           ;main.c: 197:     return (uint8_t) avg_result/4;
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in _convert2Celsius: [wreg+status,2+status,0]
  6208  05B3  0820               	movf	convert2Celsius@avg_result,w
  6209  05B4  00A2               	movwf	??_convert2Celsius
  6210  05B5  3002               	movlw	2
  6211  05B6                     u1625:
  6212  05B6  36A2               	lsrf	??_convert2Celsius,f
  6213  05B7  0B89               	decfsz	9,f
  6214  05B8  2DB6               	goto	u1625
  6215  05B9  0822               	movf	??_convert2Celsius,w
  6216  05BA  0008               	return
  6217  05BB                     __end_of_convert2Celsius:
  6218                           
  6219                           	psect	text23
  6220  0596                     __ptext23:	
  6221 ;; *************** function _SYSTEM_Initialize *****************
  6222 ;; Defined at:
  6223 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;		None
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0, pclath, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : B3F/0
  6234 ;;		On exit  : 3F/E
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6237 ;;      Params:         0       0       0       0
  6238 ;;      Locals:         0       0       0       0
  6239 ;;      Temps:          0       0       0       0
  6240 ;;      Totals:         0       0       0       0
  6241 ;;Total ram usage:        0 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; Hardware stack levels required when called: 6
  6244 ;; This function calls:
  6245 ;;		_ADC_Initialize
  6246 ;;		_EUSART1_Initialize
  6247 ;;		_FVR_Initialize
  6248 ;;		_OSCILLATOR_Initialize
  6249 ;;		_PIN_MANAGER_Initialize
  6250 ;;		_PMD_Initialize
  6251 ;;		_PWM3_Initialize
  6252 ;;		_TMR0_Initialize
  6253 ;;		_TMR2_Initialize
  6254 ;; This function is called by:
  6255 ;;		_main
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259  0596                     _SYSTEM_Initialize:	
  6260                           ;psect for function _SYSTEM_Initialize
  6261                           
  6262                           
  6263                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  6264                           
  6265                           ;incstack = 0
  6266                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6267  0596  25C3               	fcall	_PMD_Initialize
  6268                           
  6269                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6270  0597  2424               	fcall	_PIN_MANAGER_Initialize
  6271                           
  6272                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6273  0598  25A0               	fcall	_OSCILLATOR_Initialize
  6274                           
  6275                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
  6276  0599  2626               	fcall	_FVR_Initialize
  6277                           
  6278                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  6279  059A  250D               	fcall	_ADC_Initialize
  6280                           
  6281                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  6282  059B  25BB               	fcall	_PWM3_Initialize
  6283                           
  6284                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  6285  059C  2545               	fcall	_TMR2_Initialize
  6286                           
  6287                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  6288  059D  257E               	fcall	_TMR0_Initialize
  6289                           
  6290                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  6291  059E  233B               	fcall	_EUSART1_Initialize
  6292  059F  0008               	return
  6293  05A0                     __end_of_SYSTEM_Initialize:
  6294                           
  6295                           	psect	text24
  6296  0545                     __ptext24:	
  6297 ;; *************** function _TMR2_Initialize *****************
  6298 ;; Defined at:
  6299 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2
  6308 ;; Tracked objects:
  6309 ;;		On entry : 3F/6
  6310 ;;		On exit  : 3F/5
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6313 ;;      Params:         0       0       0       0
  6314 ;;      Locals:         0       0       0       0
  6315 ;;      Temps:          0       0       0       0
  6316 ;;      Totals:         0       0       0       0
  6317 ;;Total ram usage:        0 bytes
  6318 ;; Hardware stack levels used: 1
  6319 ;; Hardware stack levels required when called: 4
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_SYSTEM_Initialize
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327  0545                     _TMR2_Initialize:	
  6328                           ;psect for function _TMR2_Initialize
  6329                           
  6330                           
  6331                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  6332                           
  6333                           ;incstack = 0
  6334                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6335  0545  3001               	movlw	1
  6336  0546  0145               	movlb	5	; select bank5
  6337  0547  0090               	movwf	16	;volatile
  6338                           
  6339                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x20;
  6340  0548  3020               	movlw	32
  6341  0549  008F               	movwf	15	;volatile
  6342                           
  6343                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  6344  054A  0191               	clrf	17	;volatile
  6345                           
  6346                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  6347  054B  30FF               	movlw	255
  6348  054C  008D               	movwf	13	;volatile
  6349                           
  6350                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  6351  054D  018C               	clrf	12	;volatile
  6352                           
  6353                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  6354  054E  014E               	movlb	14	; select bank14
  6355  054F  1090               	bcf	16,1	;volatile
  6356                           
  6357                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
  6358  0550  30F0               	movlw	240
  6359  0551  0145               	movlb	5	; select bank5
  6360  0552  008E               	movwf	14	;volatile
  6361  0553  0008               	return
  6362  0554                     __end_of_TMR2_Initialize:
  6363                           
  6364                           	psect	text25
  6365  057E                     __ptext25:	
  6366 ;; *************** function _TMR0_Initialize *****************
  6367 ;; Defined at:
  6368 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;		None
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  1    wreg      void 
  6375 ;; Registers used:
  6376 ;;		wreg, status,2
  6377 ;; Tracked objects:
  6378 ;;		On entry : 3F/5
  6379 ;;		On exit  : 3F/B
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6382 ;;      Params:         0       0       0       0
  6383 ;;      Locals:         0       0       0       0
  6384 ;;      Temps:          0       0       0       0
  6385 ;;      Totals:         0       0       0       0
  6386 ;;Total ram usage:        0 bytes
  6387 ;; Hardware stack levels used: 1
  6388 ;; Hardware stack levels required when called: 4
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		_SYSTEM_Initialize
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396  057E                     _TMR0_Initialize:	
  6397                           ;psect for function _TMR0_Initialize
  6398                           
  6399                           
  6400                           ;mcc_generated_files/tmr0.c: 65:     T0CON1 = 0x44;
  6401                           
  6402                           ;incstack = 0
  6403                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  6404  057E  3044               	movlw	68
  6405  057F  014B               	movlb	11	; select bank11
  6406  0580  009F               	movwf	31	;volatile
  6407                           
  6408                           ;mcc_generated_files/tmr0.c: 68:     TMR0H = 0x7C;
  6409  0581  307C               	movlw	124
  6410  0582  009D               	movwf	29	;volatile
  6411                           
  6412                           ;mcc_generated_files/tmr0.c: 71:     TMR0L = 0x00;
  6413  0583  019C               	clrf	28	;volatile
  6414                           
  6415                           ;mcc_generated_files/tmr0.c: 74:     PIR0bits.TMR0IF = 0;
  6416  0584  014E               	movlb	14	; select bank14
  6417  0585  128C               	bcf	12,5	;volatile
  6418                           
  6419                           ;mcc_generated_files/tmr0.c: 77:     T0CON0 = 0x84;
  6420  0586  3084               	movlw	132
  6421  0587  014B               	movlb	11	; select bank11
  6422  0588  009E               	movwf	30	;volatile
  6423  0589  0008               	return
  6424  058A                     __end_of_TMR0_Initialize:
  6425                           
  6426                           	psect	text26
  6427  05BB                     __ptext26:	
  6428 ;; *************** function _PWM3_Initialize *****************
  6429 ;; Defined at:
  6430 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg
  6439 ;; Tracked objects:
  6440 ;;		On entry : B3F/1
  6441 ;;		On exit  : B3F/6
  6442 ;;		Unchanged: B00/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6444 ;;      Params:         0       0       0       0
  6445 ;;      Locals:         0       0       0       0
  6446 ;;      Temps:          0       0       0       0
  6447 ;;      Totals:         0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; Hardware stack levels required when called: 4
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_SYSTEM_Initialize
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458  05BB                     _PWM3_Initialize:	
  6459                           ;psect for function _PWM3_Initialize
  6460                           
  6461                           
  6462                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  6463                           
  6464                           ;incstack = 0
  6465                           ; Regs used in _PWM3_Initialize: [wreg]
  6466  05BB  3080               	movlw	128
  6467  05BC  0146               	movlb	6	; select bank6
  6468  05BD  0096               	movwf	22	;volatile
  6469                           
  6470                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  6471  05BE  307F               	movlw	127
  6472  05BF  0095               	movwf	21	;volatile
  6473                           
  6474                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  6475  05C0  30C0               	movlw	192
  6476  05C1  0094               	movwf	20	;volatile
  6477  05C2  0008               	return
  6478  05C3                     __end_of_PWM3_Initialize:
  6479                           
  6480                           	psect	text27
  6481  05C3                     __ptext27:	
  6482 ;; *************** function _PMD_Initialize *****************
  6483 ;; Defined at:
  6484 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      void 
  6491 ;; Registers used:
  6492 ;;		status,2
  6493 ;; Tracked objects:
  6494 ;;		On entry : B3F/0
  6495 ;;		On exit  : B3F/F
  6496 ;;		Unchanged: B00/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6498 ;;      Params:         0       0       0       0
  6499 ;;      Locals:         0       0       0       0
  6500 ;;      Temps:          0       0       0       0
  6501 ;;      Totals:         0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used: 1
  6504 ;; Hardware stack levels required when called: 4
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_SYSTEM_Initialize
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512  05C3                     _PMD_Initialize:	
  6513                           ;psect for function _PMD_Initialize
  6514                           
  6515                           
  6516                           ;mcc_generated_files/mcc.c: 82:     PMD0 = 0x00;
  6517                           
  6518                           ;incstack = 0
  6519                           ; Regs used in _PMD_Initialize: [status,2]
  6520  05C3  014F               	movlb	15	; select bank15
  6521  05C4  0196               	clrf	22	;volatile
  6522                           
  6523                           ;mcc_generated_files/mcc.c: 84:     PMD1 = 0x00;
  6524  05C5  0197               	clrf	23	;volatile
  6525                           
  6526                           ;mcc_generated_files/mcc.c: 86:     PMD2 = 0x00;
  6527  05C6  0198               	clrf	24	;volatile
  6528                           
  6529                           ;mcc_generated_files/mcc.c: 88:     PMD3 = 0x00;
  6530  05C7  0199               	clrf	25	;volatile
  6531                           
  6532                           ;mcc_generated_files/mcc.c: 90:     PMD4 = 0x00;
  6533  05C8  019A               	clrf	26	;volatile
  6534                           
  6535                           ;mcc_generated_files/mcc.c: 92:     PMD5 = 0x00;
  6536  05C9  019B               	clrf	27	;volatile
  6537  05CA  0008               	return
  6538  05CB                     __end_of_PMD_Initialize:
  6539                           
  6540                           	psect	text28
  6541  0424                     __ptext28:	
  6542 ;; *************** function _PIN_MANAGER_Initialize *****************
  6543 ;; Defined at:
  6544 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;		None
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2
  6553 ;; Tracked objects:
  6554 ;;		On entry : B3F/F
  6555 ;;		On exit  : B3F/3D
  6556 ;;		Unchanged: B00/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6558 ;;      Params:         0       0       0       0
  6559 ;;      Locals:         0       0       0       0
  6560 ;;      Temps:          0       0       0       0
  6561 ;;      Totals:         0       0       0       0
  6562 ;;Total ram usage:        0 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 4
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_SYSTEM_Initialize
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572  0424                     _PIN_MANAGER_Initialize:	
  6573                           ;psect for function _PIN_MANAGER_Initialize
  6574                           
  6575                           
  6576                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6577                           
  6578                           ;incstack = 0
  6579                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6580  0424  0140               	movlb	0	; select bank0
  6581  0425  0198               	clrf	24	;volatile
  6582                           
  6583                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  6584  0426  019A               	clrf	26	;volatile
  6585                           
  6586                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x36;
  6587  0427  3036               	movlw	54
  6588  0428  0092               	movwf	18	;volatile
  6589                           
  6590                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x2B;
  6591  0429  302B               	movlw	43
  6592  042A  0094               	movwf	20	;volatile
  6593                           
  6594                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0A;
  6595  042B  300A               	movlw	10
  6596  042C  017E               	movlb	62	; select bank62
  6597  042D  00CE               	movwf	78	;volatile
  6598                           
  6599                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x36;
  6600  042E  3036               	movlw	54
  6601  042F  00B8               	movwf	56	;volatile
  6602                           
  6603                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  6604  0430  01B9               	clrf	57	;volatile
  6605                           
  6606                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  6607  0431  01CF               	clrf	79	;volatile
  6608                           
  6609                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  6610  0432  01BA               	clrf	58	;volatile
  6611                           
  6612                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  6613  0433  01D0               	clrf	80	;volatile
  6614                           
  6615                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  6616  0434  3037               	movlw	55
  6617  0435  00BB               	movwf	59	;volatile
  6618                           
  6619                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  6620  0436  303F               	movlw	63
  6621  0437  00D1               	movwf	81	;volatile
  6622                           
  6623                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  6624  0438  303F               	movlw	63
  6625  0439  00BC               	movwf	60	;volatile
  6626                           
  6627                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  6628  043A  303F               	movlw	63
  6629  043B  00D2               	movwf	82	;volatile
  6630                           
  6631                           ;mcc_generated_files/pin_manager.c: 106:     RC4PPS = 0x0F;
  6632  043C  300F               	movlw	15
  6633  043D  00A4               	movwf	36	;volatile
  6634                           
  6635                           ;mcc_generated_files/pin_manager.c: 107:     RC2PPS = 0x0B;
  6636  043E  300B               	movlw	11
  6637  043F  00A2               	movwf	34	;volatile
  6638                           
  6639                           ;mcc_generated_files/pin_manager.c: 108:     RX1DTPPS = 0x15;
  6640  0440  3015               	movlw	21
  6641  0441  017D               	movlb	61	; select bank61
  6642  0442  00CB               	movwf	75	;volatile
  6643  0443  0008               	return
  6644  0444                     __end_of_PIN_MANAGER_Initialize:
  6645                           
  6646                           	psect	text29
  6647  05A0                     __ptext29:	
  6648 ;; *************** function _OSCILLATOR_Initialize *****************
  6649 ;; Defined at:
  6650 ;;		line 63 in file "mcc_generated_files/mcc.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      void 
  6657 ;; Registers used:
  6658 ;;		wreg, status,2
  6659 ;; Tracked objects:
  6660 ;;		On entry : B3F/3D
  6661 ;;		On exit  : B3F/11
  6662 ;;		Unchanged: B00/0
  6663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6664 ;;      Params:         0       0       0       0
  6665 ;;      Locals:         0       0       0       0
  6666 ;;      Temps:          0       0       0       0
  6667 ;;      Totals:         0       0       0       0
  6668 ;;Total ram usage:        0 bytes
  6669 ;; Hardware stack levels used: 1
  6670 ;; Hardware stack levels required when called: 4
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_SYSTEM_Initialize
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678  05A0                     _OSCILLATOR_Initialize:	
  6679                           ;psect for function _OSCILLATOR_Initialize
  6680                           
  6681                           
  6682                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  6683                           
  6684                           ;incstack = 0
  6685                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6686  05A0  3060               	movlw	96
  6687  05A1  0151               	movlb	17	; select bank17
  6688  05A2  008D               	movwf	13	;volatile
  6689                           
  6690                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  6691  05A3  018F               	clrf	15	;volatile
  6692                           
  6693                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  6694  05A4  0191               	clrf	17	;volatile
  6695                           
  6696                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
  6697  05A5  3002               	movlw	2
  6698  05A6  0093               	movwf	19	;volatile
  6699                           
  6700                           ;mcc_generated_files/mcc.c: 74:     OSCSTAT = 0x00;
  6701  05A7  0190               	clrf	16	;volatile
  6702                           
  6703                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
  6704  05A8  0192               	clrf	18	;volatile
  6705  05A9  0008               	return
  6706  05AA                     __end_of_OSCILLATOR_Initialize:
  6707                           
  6708                           	psect	text30
  6709  0626                     __ptext30:	
  6710 ;; *************** function _FVR_Initialize *****************
  6711 ;; Defined at:
  6712 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      void 
  6719 ;; Registers used:
  6720 ;;		wreg
  6721 ;; Tracked objects:
  6722 ;;		On entry : B3F/11
  6723 ;;		On exit  : B3F/12
  6724 ;;		Unchanged: B00/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6726 ;;      Params:         0       0       0       0
  6727 ;;      Locals:         0       0       0       0
  6728 ;;      Temps:          0       0       0       0
  6729 ;;      Totals:         0       0       0       0
  6730 ;;Total ram usage:        0 bytes
  6731 ;; Hardware stack levels used: 1
  6732 ;; Hardware stack levels required when called: 4
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_SYSTEM_Initialize
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740  0626                     _FVR_Initialize:	
  6741                           ;psect for function _FVR_Initialize
  6742                           
  6743                           
  6744                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  6745                           
  6746                           ;incstack = 0
  6747                           ; Regs used in _FVR_Initialize: [wreg]
  6748  0626  3082               	movlw	130
  6749  0627  0152               	movlb	18	; select bank18
  6750  0628  008C               	movwf	12	;volatile
  6751  0629  0008               	return
  6752  062A                     __end_of_FVR_Initialize:
  6753                           
  6754                           	psect	text31
  6755  033B                     __ptext31:	
  6756 ;; *************** function _EUSART1_Initialize *****************
  6757 ;; Defined at:
  6758 ;;		line 83 in file "mcc_generated_files/eusart1.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, status,2, status,0, pclath, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 3F/B
  6769 ;;		On exit  : 3F/E
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6772 ;;      Params:         0       0       0       0
  6773 ;;      Locals:         0       0       0       0
  6774 ;;      Temps:          0       0       0       0
  6775 ;;      Totals:         0       0       0       0
  6776 ;;Total ram usage:        0 bytes
  6777 ;; Hardware stack levels used: 1
  6778 ;; Hardware stack levels required when called: 5
  6779 ;; This function calls:
  6780 ;;		_EUSART1_SetErrorHandler
  6781 ;;		_EUSART1_SetFramingErrorHandler
  6782 ;;		_EUSART1_SetOverrunErrorHandler
  6783 ;;		_EUSART1_SetRxInterruptHandler
  6784 ;; This function is called by:
  6785 ;;		_SYSTEM_Initialize
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789  033B                     _EUSART1_Initialize:	
  6790                           ;psect for function _EUSART1_Initialize
  6791                           
  6792                           
  6793                           ;mcc_generated_files/eusart1.c: 86:     PIE3bits.RC1IE = 0;
  6794                           
  6795                           ;incstack = 0
  6796                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6797  033B  014E               	movlb	14	; select bank14
  6798  033C  1299               	bcf	25,5	;volatile
  6799                           
  6800                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  6801  033D  30DE               	movlw	low _EUSART1_Receive_ISR
  6802  033E  0140               	movlb	0	; select bank0
  6803  033F  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  6804  0340  3002               	movlw	high _EUSART1_Receive_ISR
  6805  0341  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  6806  0342  25CB               	fcall	_EUSART1_SetRxInterruptHandler
  6807                           
  6808                           ;mcc_generated_files/eusart1.c: 91:     BAUD1CON = 0x08;
  6809  0343  3008               	movlw	8
  6810  0344  0142               	movlb	2	; select bank2
  6811  0345  009F               	movwf	31	;volatile
  6812                           
  6813                           ;mcc_generated_files/eusart1.c: 94:     RC1STA = 0x90;
  6814  0346  3090               	movlw	144
  6815  0347  009D               	movwf	29	;volatile
  6816                           
  6817                           ;mcc_generated_files/eusart1.c: 97:     TX1STA = 0x24;
  6818  0348  3024               	movlw	36
  6819  0349  009E               	movwf	30	;volatile
  6820                           
  6821                           ;mcc_generated_files/eusart1.c: 100:     SP1BRGL = 0x33;
  6822  034A  3033               	movlw	51
  6823  034B  009B               	movwf	27	;volatile
  6824                           
  6825                           ;mcc_generated_files/eusart1.c: 103:     SP1BRGH = 0x00;
  6826  034C  019C               	clrf	28	;volatile
  6827                           
  6828                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  6829  034D  3033               	movlw	low _EUSART1_DefaultFramingErrorHandler
  6830  034E  0140               	movlb	0	; select bank0
  6831  034F  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  6832  0350  3006               	movlw	high _EUSART1_DefaultFramingErrorHandler
  6833  0351  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  6834  0352  25DB               	fcall	_EUSART1_SetFramingErrorHandler
  6835                           
  6836                           ;mcc_generated_files/eusart1.c: 107:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  6837  0353  302A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  6838  0354  0140               	movlb	0	; select bank0
  6839  0355  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  6840  0356  3006               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  6841  0357  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  6842  0358  25D3               	fcall	_EUSART1_SetOverrunErrorHandler
  6843                           
  6844                           ;mcc_generated_files/eusart1.c: 108:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  6845  0359  3031               	movlw	low _EUSART1_DefaultErrorHandler
  6846  035A  0140               	movlb	0	; select bank0
  6847  035B  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  6848  035C  3006               	movlw	high _EUSART1_DefaultErrorHandler
  6849  035D  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  6850  035E  25E3               	fcall	_EUSART1_SetErrorHandler
  6851                           
  6852                           ;mcc_generated_files/eusart1.c: 110:     eusart1RxLastError.status = 0;
  6853  035F  0140               	movlb	0	; select bank0
  6854  0360  01D4               	clrf	_eusart1RxLastError	;volatile
  6855                           
  6856                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxHead = 0;
  6857  0361  01F4               	clrf	_eusart1RxHead	;volatile
  6858                           
  6859                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxTail = 0;
  6860  0362  01F3               	clrf	_eusart1RxTail	;volatile
  6861                           
  6862                           ;mcc_generated_files/eusart1.c: 115:     eusart1RxCount = 0;
  6863  0363  01F2               	clrf	_eusart1RxCount	;volatile
  6864                           
  6865                           ;mcc_generated_files/eusart1.c: 118:     PIE3bits.RC1IE = 1;
  6866  0364  014E               	movlb	14	; select bank14
  6867  0365  1699               	bsf	25,5	;volatile
  6868  0366  0008               	return
  6869  0367                     __end_of_EUSART1_Initialize:
  6870                           
  6871                           	psect	text32
  6872  05CB                     __ptext32:	
  6873 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  6874 ;; Defined at:
  6875 ;;		line 234 in file "mcc_generated_files/eusart1.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6878 ;;		 -> EUSART1_Receive_ISR(1), 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;		None
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  1    wreg      void 
  6883 ;; Registers used:
  6884 ;;		wreg
  6885 ;; Tracked objects:
  6886 ;;		On entry : 3F/0
  6887 ;;		On exit  : 3F/1
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6890 ;;      Params:         0       2       0       0
  6891 ;;      Locals:         0       0       0       0
  6892 ;;      Temps:          0       0       0       0
  6893 ;;      Totals:         0       2       0       0
  6894 ;;Total ram usage:        2 bytes
  6895 ;; Hardware stack levels used: 1
  6896 ;; Hardware stack levels required when called: 4
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_EUSART1_Initialize
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904  05CB                     _EUSART1_SetRxInterruptHandler:	
  6905                           ;psect for function _EUSART1_SetRxInterruptHandler
  6906                           
  6907                           
  6908                           ;mcc_generated_files/eusart1.c: 235:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6909                           
  6910                           ;incstack = 0
  6911                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  6912  05CB  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  6913  05CC  0141               	movlb	1	; select bank1
  6914  05CD  00C1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  6915  05CE  0140               	movlb	0	; select bank0
  6916  05CF  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  6917  05D0  0141               	movlb	1	; select bank1
  6918  05D1  00C0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  6919  05D2  0008               	return
  6920  05D3                     __end_of_EUSART1_SetRxInterruptHandler:
  6921                           
  6922                           	psect	text33
  6923  05D3                     __ptext33:	
  6924 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6925 ;; Defined at:
  6926 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6929 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		wreg
  6936 ;; Tracked objects:
  6937 ;;		On entry : 3F/0
  6938 ;;		On exit  : 3F/1
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6941 ;;      Params:         0       2       0       0
  6942 ;;      Locals:         0       0       0       0
  6943 ;;      Temps:          0       0       0       0
  6944 ;;      Totals:         0       2       0       0
  6945 ;;Total ram usage:        2 bytes
  6946 ;; Hardware stack levels used: 1
  6947 ;; Hardware stack levels required when called: 4
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_EUSART1_Initialize
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955  05D3                     _EUSART1_SetOverrunErrorHandler:	
  6956                           ;psect for function _EUSART1_SetOverrunErrorHandler
  6957                           
  6958                           
  6959                           ;mcc_generated_files/eusart1.c: 226:     EUSART1_OverrunErrorHandler = interruptHandler;
  6960                           
  6961                           ;incstack = 0
  6962                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  6963  05D3  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  6964  05D4  0141               	movlb	1	; select bank1
  6965  05D5  00BD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  6966  05D6  0140               	movlb	0	; select bank0
  6967  05D7  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  6968  05D8  0141               	movlb	1	; select bank1
  6969  05D9  00BC               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  6970  05DA  0008               	return
  6971  05DB                     __end_of_EUSART1_SetOverrunErrorHandler:
  6972                           
  6973                           	psect	text34
  6974  05DB                     __ptext34:	
  6975 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6976 ;; Defined at:
  6977 ;;		line 221 in file "mcc_generated_files/eusart1.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  6980 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      void 
  6985 ;; Registers used:
  6986 ;;		wreg
  6987 ;; Tracked objects:
  6988 ;;		On entry : 3F/0
  6989 ;;		On exit  : 3F/1
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6992 ;;      Params:         0       2       0       0
  6993 ;;      Locals:         0       0       0       0
  6994 ;;      Temps:          0       0       0       0
  6995 ;;      Totals:         0       2       0       0
  6996 ;;Total ram usage:        2 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; Hardware stack levels required when called: 4
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_EUSART1_Initialize
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006  05DB                     _EUSART1_SetFramingErrorHandler:	
  7007                           ;psect for function _EUSART1_SetFramingErrorHandler
  7008                           
  7009                           
  7010                           ;mcc_generated_files/eusart1.c: 222:     EUSART1_FramingErrorHandler = interruptHandler;
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  7014  05DB  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  7015  05DC  0141               	movlb	1	; select bank1
  7016  05DD  00BF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  7017  05DE  0140               	movlb	0	; select bank0
  7018  05DF  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  7019  05E0  0141               	movlb	1	; select bank1
  7020  05E1  00BE               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  7021  05E2  0008               	return
  7022  05E3                     __end_of_EUSART1_SetFramingErrorHandler:
  7023                           
  7024                           	psect	text35
  7025  05E3                     __ptext35:	
  7026 ;; *************** function _EUSART1_SetErrorHandler *****************
  7027 ;; Defined at:
  7028 ;;		line 229 in file "mcc_generated_files/eusart1.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7031 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg
  7038 ;; Tracked objects:
  7039 ;;		On entry : 3F/0
  7040 ;;		On exit  : 3F/1
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7043 ;;      Params:         0       2       0       0
  7044 ;;      Locals:         0       0       0       0
  7045 ;;      Temps:          0       0       0       0
  7046 ;;      Totals:         0       2       0       0
  7047 ;;Total ram usage:        2 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 4
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_EUSART1_Initialize
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057  05E3                     _EUSART1_SetErrorHandler:	
  7058                           ;psect for function _EUSART1_SetErrorHandler
  7059                           
  7060                           
  7061                           ;mcc_generated_files/eusart1.c: 230:     EUSART1_ErrorHandler = interruptHandler;
  7062                           
  7063                           ;incstack = 0
  7064                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  7065  05E3  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  7066  05E4  0141               	movlb	1	; select bank1
  7067  05E5  00BB               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  7068  05E6  0140               	movlb	0	; select bank0
  7069  05E7  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  7070  05E8  0141               	movlb	1	; select bank1
  7071  05E9  00BA               	movwf	_EUSART1_ErrorHandler^(0+128)
  7072  05EA  0008               	return
  7073  05EB                     __end_of_EUSART1_SetErrorHandler:
  7074                           
  7075                           	psect	text36
  7076  050D                     __ptext36:	
  7077 ;; *************** function _ADC_Initialize *****************
  7078 ;; Defined at:
  7079 ;;		line 76 in file "mcc_generated_files/adc.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;		None
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;		None
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  1    wreg      void 
  7086 ;; Registers used:
  7087 ;;		wreg, status,2, status,0, pclath, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : B3F/12
  7090 ;;		On exit  : B3F/1
  7091 ;;		Unchanged: B00/0
  7092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7093 ;;      Params:         0       0       0       0
  7094 ;;      Locals:         0       0       0       0
  7095 ;;      Temps:          0       0       0       0
  7096 ;;      Totals:         0       0       0       0
  7097 ;;Total ram usage:        0 bytes
  7098 ;; Hardware stack levels used: 1
  7099 ;; Hardware stack levels required when called: 5
  7100 ;; This function calls:
  7101 ;;		_ADC_SelectChannel
  7102 ;;		_ADC_SetInterruptHandler
  7103 ;; This function is called by:
  7104 ;;		_SYSTEM_Initialize
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108  050D                     _ADC_Initialize:	
  7109                           ;psect for function _ADC_Initialize
  7110                           
  7111                           
  7112                           ;mcc_generated_files/adc.c: 81:     ADCON1 = 0x93;
  7113                           
  7114                           ;incstack = 0
  7115                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7116  050D  3093               	movlw	147
  7117  050E  0141               	movlb	1	; select bank1
  7118  050F  009E               	movwf	30	;volatile
  7119                           
  7120                           ;mcc_generated_files/adc.c: 84:     ADRESL = 0x00;
  7121  0510  019B               	clrf	27	;volatile
  7122                           
  7123                           ;mcc_generated_files/adc.c: 87:     ADRESH = 0x00;
  7124  0511  019C               	clrf	28	;volatile
  7125                           
  7126                           ;mcc_generated_files/adc.c: 90:     ADCON0 = 0x01;
  7127  0512  3001               	movlw	1
  7128  0513  009D               	movwf	29	;volatile
  7129                           
  7130                           ;mcc_generated_files/adc.c: 94:     ADACT = 0x002;
  7131  0514  3002               	movlw	2
  7132  0515  009F               	movwf	31	;volatile
  7133                           
  7134                           ;mcc_generated_files/adc.c: 97:     PIE1bits.ADIE = 1;
  7135  0516  014E               	movlb	14	; select bank14
  7136  0517  1417               	bsf	23,0	;volatile
  7137                           
  7138                           ;mcc_generated_files/adc.c: 100:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler
      +                          );
  7139  0518  3090               	movlw	low _ADC_DefaultInterruptHandler
  7140  0519  0140               	movlb	0	; select bank0
  7141  051A  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler
  7142  051B  3003               	movlw	high _ADC_DefaultInterruptHandler
  7143  051C  00A1               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
  7144  051D  2621               	fcall	_ADC_SetInterruptHandler
  7145                           
  7146                           ;mcc_generated_files/adc.c: 102:     ADC_SelectChannel(Temp1_Sens);
  7147  051E  3004               	movlw	4
  7148  051F  2554               	fcall	_ADC_SelectChannel
  7149  0520  0008               	return
  7150  0521                     __end_of_ADC_Initialize:
  7151                           
  7152                           	psect	text37
  7153  0621                     __ptext37:	
  7154 ;; *************** function _ADC_SetInterruptHandler *****************
  7155 ;; Defined at:
  7156 ;;		line 171 in file "mcc_generated_files/adc.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7159 ;;		 -> ADC_DefaultInterruptHandler(1), 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;		None
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg
  7166 ;; Tracked objects:
  7167 ;;		On entry : B3F/0
  7168 ;;		On exit  : B3F/0
  7169 ;;		Unchanged: B00/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7171 ;;      Params:         0       2       0       0
  7172 ;;      Locals:         0       0       0       0
  7173 ;;      Temps:          0       0       0       0
  7174 ;;      Totals:         0       2       0       0
  7175 ;;Total ram usage:        2 bytes
  7176 ;; Hardware stack levels used: 1
  7177 ;; Hardware stack levels required when called: 4
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_ADC_Initialize
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185  0621                     _ADC_SetInterruptHandler:	
  7186                           ;psect for function _ADC_SetInterruptHandler
  7187                           
  7188                           
  7189                           ;mcc_generated_files/adc.c: 172:     ADC_InterruptHandler = InterruptHandler;
  7190                           
  7191                           ;incstack = 0
  7192                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
  7193  0621  0821               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
  7194  0622  00D9               	movwf	_ADC_InterruptHandler+1
  7195  0623  0820               	movf	ADC_SetInterruptHandler@InterruptHandler,w
  7196  0624  00D8               	movwf	_ADC_InterruptHandler
  7197  0625  0008               	return
  7198  0626                     __end_of_ADC_SetInterruptHandler:
  7199                           
  7200                           	psect	text38
  7201  0554                     __ptext38:	
  7202 ;; *************** function _ADC_SelectChannel *****************
  7203 ;; Defined at:
  7204 ;;		line 105 in file "mcc_generated_files/adc.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  channel         1    wreg     enum E6234
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  channel         1    1[BANK0 ] enum E6234
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0
  7213 ;; Tracked objects:
  7214 ;;		On entry : B3F/0
  7215 ;;		On exit  : B3F/1
  7216 ;;		Unchanged: B00/0
  7217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7218 ;;      Params:         0       0       0       0
  7219 ;;      Locals:         0       1       0       0
  7220 ;;      Temps:          0       1       0       0
  7221 ;;      Totals:         0       2       0       0
  7222 ;;Total ram usage:        2 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 4
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_ADC_Initialize
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232  0554                     _ADC_SelectChannel:	
  7233                           ;psect for function _ADC_SelectChannel
  7234                           
  7235                           
  7236                           ;incstack = 0
  7237                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  7238                           ;ADC_SelectChannel@channel stored from wreg
  7239  0554  00A1               	movwf	ADC_SelectChannel@channel
  7240                           
  7241                           ;mcc_generated_files/adc.c: 105: void ADC_SelectChannel(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 106: {;mcc_generated_files/adc.c: 108:     ADCON0bits.CHS = channel;
  7242  0555  0821               	movf	ADC_SelectChannel@channel,w
  7243  0556  00A0               	movwf	??_ADC_SelectChannel
  7244  0557  0DA0               	rlf	??_ADC_SelectChannel,f
  7245  0558  0DA0               	rlf	??_ADC_SelectChannel,f
  7246  0559  0141               	movlb	1	; select bank1
  7247  055A  081D               	movf	29,w	;volatile
  7248  055B  0140               	movlb	0	; select bank0
  7249  055C  0620               	xorwf	??_ADC_SelectChannel,w
  7250  055D  3903               	andlw	-253
  7251  055E  0620               	xorwf	??_ADC_SelectChannel,w
  7252  055F  0141               	movlb	1	; select bank1
  7253  0560  009D               	movwf	29	;volatile
  7254                           
  7255                           ;mcc_generated_files/adc.c: 110:     ADCON0bits.ADON = 1;
  7256  0561  141D               	bsf	29,0	;volatile
  7257  0562  0008               	return
  7258  0563                     __end_of_ADC_SelectChannel:
  7259                           
  7260                           	psect	text39
  7261  03DF                     __ptext39:	
  7262 ;; *************** function _EUSART1_Read *****************
  7263 ;; Defined at:
  7264 ;;		line 140 in file "mcc_generated_files/eusart1.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  readValue       1    1[BANK0 ] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      unsigned char 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 3C/2
  7275 ;;		On exit  : 3F/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7278 ;;      Params:         0       0       0       0
  7279 ;;      Locals:         0       1       0       0
  7280 ;;      Temps:          0       1       0       0
  7281 ;;      Totals:         0       2       0       0
  7282 ;;Total ram usage:        2 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; Hardware stack levels required when called: 4
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_main
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292  03DF                     _EUSART1_Read:	
  7293                           ;psect for function _EUSART1_Read
  7294                           
  7295  03DF                     l2736:	
  7296                           ;mcc_generated_files/eusart1.c: 144:     while(0 == eusart1RxCount)
  7297                           
  7298                           ;incstack = 0
  7299                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7300                           
  7301                           
  7302                           ;mcc_generated_files/eusart1.c: 144:     while(0 == eusart1RxCount)
  7303  03DF  0872               	movf	_eusart1RxCount,w	;volatile
  7304  03E0  1903               	btfsc	3,2
  7305  03E1  2BDF               	goto	l2736
  7306                           
  7307                           ;mcc_generated_files/eusart1.c: 148:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  7308  03E2  0873               	movf	_eusart1RxTail,w	;volatile
  7309  03E3  3E40               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  7310  03E4  0086               	movwf	6
  7311  03E5  0187               	clrf	7
  7312  03E6  0801               	movf	1,w
  7313  03E7  0140               	movlb	0	; select bank0
  7314  03E8  00A0               	movwf	??_EUSART1_Read
  7315  03E9  0820               	movf	??_EUSART1_Read,w
  7316  03EA  00D4               	movwf	_eusart1RxLastError	;volatile
  7317                           
  7318                           ;mcc_generated_files/eusart1.c: 150:     readValue = eusart1RxBuffer[eusart1RxTail++];
  7319  03EB  0873               	movf	_eusart1RxTail,w
  7320  03EC  3E48               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  7321  03ED  0086               	movwf	6
  7322  03EE  0187               	clrf	7
  7323  03EF  0801               	movf	1,w
  7324  03F0  00A0               	movwf	??_EUSART1_Read
  7325  03F1  0820               	movf	??_EUSART1_Read,w
  7326  03F2  00A1               	movwf	EUSART1_Read@readValue
  7327  03F3  3001               	movlw	1
  7328  03F4  00A0               	movwf	??_EUSART1_Read
  7329  03F5  0820               	movf	??_EUSART1_Read,w
  7330  03F6  07F3               	addwf	_eusart1RxTail,f	;volatile
  7331                           
  7332                           ;mcc_generated_files/eusart1.c: 151:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7333  03F7  3008               	movlw	8
  7334  03F8  0273               	subwf	_eusart1RxTail,w
  7335  03F9  1803               	btfsc	3,0
  7336                           
  7337                           ;mcc_generated_files/eusart1.c: 152:     {;mcc_generated_files/eusart1.c: 153:         e
      +                          usart1RxTail = 0;
  7338  03FA  01F3               	clrf	_eusart1RxTail	;volatile
  7339                           
  7340                           ;mcc_generated_files/eusart1.c: 155:     PIE3bits.RC1IE = 0;
  7341  03FB  014E               	movlb	14	; select bank14
  7342  03FC  1299               	bcf	25,5	;volatile
  7343                           
  7344                           ;mcc_generated_files/eusart1.c: 156:     eusart1RxCount--;
  7345  03FD  3001               	movlw	1
  7346  03FE  02F2               	subwf	_eusart1RxCount,f	;volatile
  7347                           
  7348                           ;mcc_generated_files/eusart1.c: 157:     PIE3bits.RC1IE = 1;
  7349  03FF  1699               	bsf	25,5	;volatile
  7350                           
  7351                           ;mcc_generated_files/eusart1.c: 159:     return readValue;
  7352  0400  0140               	movlb	0	; select bank0
  7353  0401  0821               	movf	EUSART1_Read@readValue,w
  7354  0402  0008               	return
  7355  0403                     __end_of_EUSART1_Read:
  7356                           
  7357                           	psect	intentry
  7358  0004                     __pintentry:	
  7359 ;; *************** function _INTERRUPT_InterruptManager *****************
  7360 ;; Defined at:
  7361 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;		None
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;		None
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      void 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7375 ;;      Params:         0       0       0       0
  7376 ;;      Locals:         0       0       0       0
  7377 ;;      Temps:          0       0       0       0
  7378 ;;      Totals:         0       0       0       0
  7379 ;;Total ram usage:        0 bytes
  7380 ;; Hardware stack levels used: 1
  7381 ;; Hardware stack levels required when called: 3
  7382 ;; This function calls:
  7383 ;;		Absolute function
  7384 ;;		_ADC_ISR
  7385 ;;		_EUSART1_Receive_ISR
  7386 ;; This function is called by:
  7387 ;;		Interrupt level 1
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391  0004                     _INTERRUPT_InterruptManager:
  7392                           
  7393                           ;incstack = 0
  7394  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7395                           
  7396                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7397  0005  3180               	pagesel	$
  7398                           
  7399                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  7400  0006  1F0B               	btfss	11,6	;volatile
  7401  0007  2817               	goto	i1l298
  7402                           
  7403                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  7404  0008  014E               	movlb	14	; select bank14
  7405  0009  1817               	btfsc	23,0	;volatile
  7406  000A  1C0D               	btfss	13,0	;volatile
  7407  000B  280D               	goto	i1l2310
  7408                           
  7409                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             ADC_ISR();
  7410  000C  258A               	fcall	_ADC_ISR
  7411  000D                     i1l2310:
  7412                           
  7413                           ;mcc_generated_files/interrupt_manager.c: 61:         if(PIE3bits.RC1IE == 1 && PIR3bits
      +                          .RC1IF == 1)
  7414  000D  014E               	movlb	14	; select bank14
  7415  000E  1A99               	btfsc	25,5	;volatile
  7416  000F  1E8F               	btfss	15,5	;volatile
  7417  0010  2817               	goto	i1l298
  7418                           
  7419                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_RxDefaultInterruptHandler();
  7420  0011  0141               	movlb	1	; select bank1
  7421  0012  0841               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
  7422  0013  008A               	movwf	10
  7423  0014  0840               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
  7424  0015  000A               	callw
  7425  0016  3180               	pagesel	$
  7426  0017                     i1l298:
  7427  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7428  0018  0009               	retfie
  7429  0019                     __end_of_INTERRUPT_InterruptManager:
  7430                           
  7431                           	psect	text41
  7432  02DE                     __ptext41:	
  7433 ;; *************** function _EUSART1_Receive_ISR *****************
  7434 ;; Defined at:
  7435 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;		None
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  1    wreg      void 
  7442 ;; Registers used:
  7443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7444 ;; Tracked objects:
  7445 ;;		On entry : 3F/1
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7449 ;;      Params:         0       0       0       0
  7450 ;;      Locals:         0       0       0       0
  7451 ;;      Temps:          0       0       0       0
  7452 ;;      Totals:         0       0       0       0
  7453 ;;Total ram usage:        0 bytes
  7454 ;; Hardware stack levels used: 1
  7455 ;; Hardware stack levels required when called: 2
  7456 ;; This function calls:
  7457 ;;		Absolute function
  7458 ;;		_EUSART1_DefaultErrorHandler
  7459 ;;		_EUSART1_DefaultFramingErrorHandler
  7460 ;;		_EUSART1_DefaultOverrunErrorHandler
  7461 ;;		_EUSART1_RxDataHandler
  7462 ;; This function is called by:
  7463 ;;		_EUSART1_Initialize
  7464 ;;		_INTERRUPT_InterruptManager
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468  02DE                     _EUSART1_Receive_ISR:	
  7469                           ;psect for function _EUSART1_Receive_ISR
  7470                           
  7471                           
  7472                           ;mcc_generated_files/eusart1.c: 176:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  7473                           
  7474                           ;incstack = 0
  7475                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7476  02DE  0874               	movf	_eusart1RxHead,w	;volatile
  7477  02DF  3E40               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  7478  02E0  0086               	movwf	6
  7479  02E1  0187               	clrf	7
  7480  02E2  0181               	clrf	1
  7481                           
  7482                           ;mcc_generated_files/eusart1.c: 178:     if(RC1STAbits.FERR){
  7483  02E3  0142               	movlb	2	; select bank2
  7484  02E4  1D1D               	btfss	29,2	;volatile
  7485  02E5  2AF1               	goto	i1l2152
  7486                           
  7487                           ;mcc_generated_files/eusart1.c: 179:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  7488  02E6  0874               	movf	_eusart1RxHead,w	;volatile
  7489  02E7  3E40               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  7490  02E8  0086               	movwf	6
  7491  02E9  0187               	clrf	7
  7492  02EA  1481               	bsf	1,1
  7493                           
  7494                           ;mcc_generated_files/eusart1.c: 180:         EUSART1_FramingErrorHandler();
  7495  02EB  0141               	movlb	1	; select bank1
  7496  02EC  083F               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
  7497  02ED  008A               	movwf	10
  7498  02EE  083E               	movf	_EUSART1_FramingErrorHandler^(0+128),w
  7499  02EF  000A               	callw
  7500  02F0  3182               	pagesel	$
  7501  02F1                     i1l2152:
  7502                           
  7503                           ;mcc_generated_files/eusart1.c: 183:     if(RC1STAbits.OERR){
  7504  02F1  0142               	movlb	2	; select bank2
  7505  02F2  1C9D               	btfss	29,1	;volatile
  7506  02F3  2AFF               	goto	i1l2158
  7507                           
  7508                           ;mcc_generated_files/eusart1.c: 184:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  7509  02F4  0874               	movf	_eusart1RxHead,w	;volatile
  7510  02F5  3E40               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  7511  02F6  0086               	movwf	6
  7512  02F7  0187               	clrf	7
  7513  02F8  1501               	bsf	1,2
  7514                           
  7515                           ;mcc_generated_files/eusart1.c: 185:         EUSART1_OverrunErrorHandler();
  7516  02F9  0141               	movlb	1	; select bank1
  7517  02FA  083D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
  7518  02FB  008A               	movwf	10
  7519  02FC  083C               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
  7520  02FD  000A               	callw
  7521  02FE  3182               	pagesel	$
  7522  02FF                     i1l2158:
  7523                           
  7524                           ;mcc_generated_files/eusart1.c: 188:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  7525  02FF  0874               	movf	_eusart1RxHead,w	;volatile
  7526  0300  3E40               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  7527  0301  0086               	movwf	6
  7528  0302  0187               	clrf	7
  7529  0303  0801               	movf	1,w
  7530  0304  1903               	btfsc	3,2
  7531  0305  2B0D               	goto	i1l2162
  7532                           
  7533                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_ErrorHandler();
  7534  0306  0141               	movlb	1	; select bank1
  7535  0307  083B               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
  7536  0308  008A               	movwf	10
  7537  0309  083A               	movf	_EUSART1_ErrorHandler^(0+128),w
  7538  030A  000A               	callw
  7539  030B  3182               	pagesel	$
  7540                           
  7541                           ;mcc_generated_files/eusart1.c: 190:     } else {
  7542  030C  0008               	return
  7543  030D                     i1l2162:
  7544                           
  7545                           ;mcc_generated_files/eusart1.c: 191:         EUSART1_RxDataHandler();
  7546  030D  24F7               	fcall	_EUSART1_RxDataHandler
  7547  030E  0008               	return
  7548  030F                     __end_of_EUSART1_Receive_ISR:
  7549                           
  7550                           	psect	text42
  7551  062A                     __ptext42:	
  7552 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7553 ;; Defined at:
  7554 ;;		line 209 in file "mcc_generated_files/eusart1.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;		None
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		None
  7563 ;; Tracked objects:
  7564 ;;		On entry : 3F/1
  7565 ;;		On exit  : 3F/2
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7568 ;;      Params:         0       0       0       0
  7569 ;;      Locals:         0       0       0       0
  7570 ;;      Temps:          0       0       0       0
  7571 ;;      Totals:         0       0       0       0
  7572 ;;Total ram usage:        0 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_EUSART1_Initialize
  7578 ;;		_EUSART1_Receive_ISR
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582  062A                     _EUSART1_DefaultOverrunErrorHandler:	
  7583                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
  7584                           
  7585                           
  7586                           ;mcc_generated_files/eusart1.c: 212:     RC1STAbits.CREN = 0;
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
  7590  062A  0142               	movlb	2	; select bank2
  7591  062B  121D               	bcf	29,4	;volatile
  7592                           
  7593                           ;mcc_generated_files/eusart1.c: 213:     RC1STAbits.CREN = 1;
  7594  062C  161D               	bsf	29,4	;volatile
  7595  062D  0008               	return
  7596  062E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7597                           
  7598                           	psect	text43
  7599  0633                     __ptext43:	
  7600 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7601 ;; Defined at:
  7602 ;;		line 207 in file "mcc_generated_files/eusart1.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		None
  7611 ;; Tracked objects:
  7612 ;;		On entry : 3F/1
  7613 ;;		On exit  : 3F/1
  7614 ;;		Unchanged: 3F/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7616 ;;      Params:         0       0       0       0
  7617 ;;      Locals:         0       0       0       0
  7618 ;;      Temps:          0       0       0       0
  7619 ;;      Totals:         0       0       0       0
  7620 ;;Total ram usage:        0 bytes
  7621 ;; Hardware stack levels used: 1
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_EUSART1_Initialize
  7626 ;;		_EUSART1_Receive_ISR
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630  0633                     _EUSART1_DefaultFramingErrorHandler:	
  7631                           ;psect for function _EUSART1_DefaultFramingErrorHandler
  7632                           
  7633                           
  7634                           ;incstack = 0
  7635                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
  7636  0633  0008               	return
  7637  0634                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7638                           
  7639                           	psect	text44
  7640  0631                     __ptext44:	
  7641 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7642 ;; Defined at:
  7643 ;;		line 217 in file "mcc_generated_files/eusart1.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 3F/1
  7654 ;;		On exit  : 3F/2
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7657 ;;      Params:         0       0       0       0
  7658 ;;      Locals:         0       0       0       0
  7659 ;;      Temps:          0       0       0       0
  7660 ;;      Totals:         0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used: 1
  7663 ;; Hardware stack levels required when called: 1
  7664 ;; This function calls:
  7665 ;;		_EUSART1_RxDataHandler
  7666 ;; This function is called by:
  7667 ;;		_EUSART1_Initialize
  7668 ;;		_EUSART1_Receive_ISR
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672  0631                     _EUSART1_DefaultErrorHandler:	
  7673                           ;psect for function _EUSART1_DefaultErrorHandler
  7674                           
  7675                           
  7676                           ;mcc_generated_files/eusart1.c: 218:     EUSART1_RxDataHandler();
  7677                           
  7678                           ;incstack = 0
  7679                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7680  0631  24F7               	fcall	_EUSART1_RxDataHandler
  7681  0632  0008               	return
  7682  0633                     __end_of_EUSART1_DefaultErrorHandler:
  7683                           
  7684                           	psect	text45
  7685  04F7                     __ptext45:	
  7686 ;; *************** function _EUSART1_RxDataHandler *****************
  7687 ;; Defined at:
  7688 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;		None
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      void 
  7695 ;; Registers used:
  7696 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/2
  7699 ;;		On exit  : 3F/2
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7702 ;;      Params:         0       0       0       0
  7703 ;;      Locals:         0       0       0       0
  7704 ;;      Temps:          1       0       0       0
  7705 ;;      Totals:         1       0       0       0
  7706 ;;Total ram usage:        1 bytes
  7707 ;; Hardware stack levels used: 1
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_EUSART1_Receive_ISR
  7712 ;;		_EUSART1_DefaultErrorHandler
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716  04F7                     _EUSART1_RxDataHandler:	
  7717                           ;psect for function _EUSART1_RxDataHandler
  7718                           
  7719                           
  7720                           ;mcc_generated_files/eusart1.c: 199:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  7721                           
  7722                           ;incstack = 0
  7723                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7724  04F7  0142               	movlb	2	; select bank2
  7725  04F8  0819               	movf	25,w	;volatile
  7726  04F9  00F5               	movwf	??_EUSART1_RxDataHandler
  7727  04FA  0874               	movf	_eusart1RxHead,w
  7728  04FB  3E48               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  7729  04FC  0086               	movwf	6
  7730  04FD  0187               	clrf	7
  7731  04FE  0875               	movf	??_EUSART1_RxDataHandler,w
  7732  04FF  0081               	movwf	1
  7733  0500  3001               	movlw	1
  7734  0501  00F5               	movwf	??_EUSART1_RxDataHandler
  7735  0502  0875               	movf	??_EUSART1_RxDataHandler,w
  7736  0503  07F4               	addwf	_eusart1RxHead,f	;volatile
  7737                           
  7738                           ;mcc_generated_files/eusart1.c: 200:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7739  0504  3008               	movlw	8
  7740  0505  0274               	subwf	_eusart1RxHead,w
  7741  0506  1803               	btfsc	3,0
  7742                           
  7743                           ;mcc_generated_files/eusart1.c: 201:     {;mcc_generated_files/eusart1.c: 202:         e
      +                          usart1RxHead = 0;
  7744  0507  01F4               	clrf	_eusart1RxHead	;volatile
  7745                           
  7746                           ;mcc_generated_files/eusart1.c: 204:     eusart1RxCount++;
  7747  0508  3001               	movlw	1
  7748  0509  00F5               	movwf	??_EUSART1_RxDataHandler
  7749  050A  0875               	movf	??_EUSART1_RxDataHandler,w
  7750  050B  07F2               	addwf	_eusart1RxCount,f	;volatile
  7751  050C  0008               	return
  7752  050D                     __end_of_EUSART1_RxDataHandler:
  7753                           
  7754                           	psect	text46
  7755  058A                     __ptext46:	
  7756 ;; *************** function _ADC_ISR *****************
  7757 ;; Defined at:
  7758 ;;		line 160 in file "mcc_generated_files/adc.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;		None
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      void 
  7765 ;; Registers used:
  7766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7767 ;; Tracked objects:
  7768 ;;		On entry : 3F/E
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7772 ;;      Params:         0       0       0       0
  7773 ;;      Locals:         0       0       0       0
  7774 ;;      Temps:          0       0       0       0
  7775 ;;      Totals:         0       0       0       0
  7776 ;;Total ram usage:        0 bytes
  7777 ;; Hardware stack levels used: 1
  7778 ;; Hardware stack levels required when called: 2
  7779 ;; This function calls:
  7780 ;;		Absolute function
  7781 ;;		_ADC_DefaultInterruptHandler
  7782 ;; This function is called by:
  7783 ;;		_INTERRUPT_InterruptManager
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787  058A                     _ADC_ISR:	
  7788                           ;psect for function _ADC_ISR
  7789                           
  7790                           
  7791                           ;mcc_generated_files/adc.c: 163:     PIR1bits.ADIF = 0;
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in _ADC_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7795  058A  100D               	bcf	13,0	;volatile
  7796                           
  7797                           ;mcc_generated_files/adc.c: 165:  if(ADC_InterruptHandler)
  7798  058B  0140               	movlb	0	; select bank0
  7799  058C  0858               	movf	_ADC_InterruptHandler,w
  7800  058D  0459               	iorwf	_ADC_InterruptHandler+1,w
  7801  058E  1903               	btfsc	3,2
  7802  058F  0008               	return
  7803                           
  7804                           ;mcc_generated_files/adc.c: 166:     {;mcc_generated_files/adc.c: 167:         ADC_Inter
      +                          ruptHandler();
  7805  0590  0859               	movf	_ADC_InterruptHandler+1,w
  7806  0591  008A               	movwf	10
  7807  0592  0858               	movf	_ADC_InterruptHandler,w
  7808  0593  000A               	callw
  7809  0594  3185               	pagesel	$
  7810  0595  0008               	return
  7811  0596                     __end_of_ADC_ISR:
  7812                           
  7813                           	psect	text47
  7814  0390                     __ptext47:	
  7815 ;; *************** function _ADC_DefaultInterruptHandler *****************
  7816 ;; Defined at:
  7817 ;;		line 175 in file "mcc_generated_files/adc.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;		None
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  result          2    3[COMMON] unsigned short 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7826 ;; Tracked objects:
  7827 ;;		On entry : 3F/0
  7828 ;;		On exit  : 3E/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7831 ;;      Params:         0       0       0       0
  7832 ;;      Locals:         2       0       0       0
  7833 ;;      Temps:          1       0       0       0
  7834 ;;      Totals:         3       0       0       0
  7835 ;;Total ram usage:        3 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 1
  7838 ;; This function calls:
  7839 ;;		_ADC_GetConversionResult
  7840 ;; This function is called by:
  7841 ;;		_ADC_Initialize
  7842 ;;		_ADC_ISR
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846  0390                     _ADC_DefaultInterruptHandler:	
  7847                           ;psect for function _ADC_DefaultInterruptHandler
  7848                           
  7849                           
  7850                           ;mcc_generated_files/adc.c: 179:     powerBits = (powerBits << 1) | (powerBits >> 23);
  7851                           
  7852                           ;incstack = 0
  7853                           ; Regs used in _ADC_DefaultInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7854  0390  3001               	movlw	1
  7855  0391  00F7               	movwf	??_ADC_DefaultInterruptHandler
  7856  0392                     u80_25:
  7857  0392  0D57               	rlf	_powerBits+2,w	;volatile
  7858  0393  0DD5               	rlf	_powerBits,f	;volatile
  7859  0394  0DD6               	rlf	_powerBits+1,f	;volatile
  7860  0395  0DD7               	rlf	_powerBits+2,f	;volatile
  7861  0396  0BF7               	decfsz	??_ADC_DefaultInterruptHandler,f
  7862  0397  2B92               	goto	u80_25
  7863                           
  7864                           ;mcc_generated_files/adc.c: 180:     if (powerBits & 1) do { LATAbits.LATA0 = 1; } while
      +                          (0);
  7865  0398  1C55               	btfss	_powerBits,0	;volatile
  7866  0399  2B9C               	goto	i1l438
  7867  039A  1418               	bsf	24,0	;volatile
  7868  039B  2B9D               	goto	i1l1920
  7869  039C                     i1l438:
  7870  039C  1018               	bcf	24,0	;volatile
  7871  039D                     i1l1920:
  7872                           
  7873                           ;mcc_generated_files/adc.c: 184:     if (periodCounter++ & 1) {
  7874  039D  0871               	movf	_periodCounter,w
  7875  039E  0AF1               	incf	_periodCounter,f
  7876  039F  3901               	andlw	1
  7877  03A0  1903               	btfsc	3,2
  7878  03A1  0008               	return
  7879                           
  7880                           ;mcc_generated_files/adc.c: 185:         adc_result_t result = ADC_GetConversionResult()
      +                          ;
  7881  03A2  260C               	fcall	_ADC_GetConversionResult
  7882  03A3  0876               	movf	?_ADC_GetConversionResult+1,w
  7883  03A4  00F9               	movwf	ADC_DefaultInterruptHandler@result+1
  7884  03A5  0875               	movf	?_ADC_GetConversionResult,w
  7885  03A6  00F8               	movwf	ADC_DefaultInterruptHandler@result
  7886                           
  7887                           ;mcc_generated_files/adc.c: 186:         tempBuffer[tempBufferIndex++] = result;
  7888  03A7  3570               	lslf	_tempBufferIndex,w
  7889  03A8  3E50               	addlw	(low (_tempBuffer| 0))& (0+255)
  7890  03A9  0086               	movwf	6
  7891  03AA  0187               	clrf	7
  7892  03AB  0878               	movf	ADC_DefaultInterruptHandler@result,w
  7893  03AC  3FC0               	movwi [0]fsr1
  7894  03AD  0879               	movf	ADC_DefaultInterruptHandler@result+1,w
  7895  03AE  3FC1               	movwi [1]fsr1
  7896  03AF  3001               	movlw	1
  7897  03B0  00F7               	movwf	??_ADC_DefaultInterruptHandler
  7898  03B1  0877               	movf	??_ADC_DefaultInterruptHandler,w
  7899  03B2  07F0               	addwf	_tempBufferIndex,f
  7900                           
  7901                           ;mcc_generated_files/adc.c: 187:         if (tempBufferIndex >= 2) tempBufferIndex = 0;
  7902  03B3  3002               	movlw	2
  7903  03B4  0270               	subwf	_tempBufferIndex,w
  7904  03B5  1C03               	skipc
  7905  03B6  0008               	return
  7906  03B7  01F0               	clrf	_tempBufferIndex
  7907  03B8  0008               	return
  7908  03B9                     __end_of_ADC_DefaultInterruptHandler:
  7909                           
  7910                           	psect	text48
  7911  060C                     __ptext48:	
  7912 ;; *************** function _ADC_GetConversionResult *****************
  7913 ;; Defined at:
  7914 ;;		line 126 in file "mcc_generated_files/adc.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;		None
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;		None
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  2    0[COMMON] unsigned short 
  7921 ;; Registers used:
  7922 ;;		wreg
  7923 ;; Tracked objects:
  7924 ;;		On entry : 3F/0
  7925 ;;		On exit  : 3F/1
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7928 ;;      Params:         2       0       0       0
  7929 ;;      Locals:         0       0       0       0
  7930 ;;      Temps:          0       0       0       0
  7931 ;;      Totals:         2       0       0       0
  7932 ;;Total ram usage:        2 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_ADC_DefaultInterruptHandler
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941  060C                     _ADC_GetConversionResult:	
  7942                           ;psect for function _ADC_GetConversionResult
  7943                           
  7944                           
  7945                           ;mcc_generated_files/adc.c: 129:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _ADC_GetConversionResult: [wreg]
  7949  060C  0141               	movlb	1	; select bank1
  7950  060D  081C               	movf	28,w	;volatile
  7951  060E  00F6               	movwf	?_ADC_GetConversionResult+1
  7952  060F  081B               	movf	27,w	;volatile
  7953  0610  00F5               	movwf	?_ADC_GetConversionResult
  7954  0611  0008               	return
  7955  0612                     __end_of_ADC_GetConversionResult:
  7956  007E                     btemp	set	126	;btemp
  7957  007E                     int$flags	set	126
  7958  007E                     wtemp0	set	126
  7959                           
  7960                           	psect	idloc
  7961                           
  7962                           ;Config register IDLOC0 @ 0x8000
  7963                           ;	unspecified, using default values
  7964  8000                     	org	32768
  7965  8000  3FFF               	dw	16383
  7966                           
  7967                           ;Config register IDLOC1 @ 0x8001
  7968                           ;	unspecified, using default values
  7969  8001                     	org	32769
  7970  8001  3FFF               	dw	16383
  7971                           
  7972                           ;Config register IDLOC2 @ 0x8002
  7973                           ;	unspecified, using default values
  7974  8002                     	org	32770
  7975  8002  3FFF               	dw	16383
  7976                           
  7977                           ;Config register IDLOC3 @ 0x8003
  7978                           ;	unspecified, using default values
  7979  8003                     	org	32771
  7980  8003  3FFF               	dw	16383
  7981                           
  7982                           	psect	config
  7983                           
  7984                           ;Config register CONFIG1 @ 0x8007
  7985                           ;	External Oscillator mode selection bits
  7986                           ;	FEXTOSC = OFF, Oscillator not enabled
  7987                           ;	Power-up default value for COSC bits
  7988                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  7989                           ;	Clock Out Enable bit
  7990                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  7991                           ;	Clock Switch Enable bit
  7992                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7993                           ;	Fail-Safe Clock Monitor Enable bit
  7994                           ;	FCMEN = ON, FSCM timer enabled
  7995  8007                     	org	32775
  7996  8007  3FEC               	dw	16364
  7997                           
  7998                           ;Config register CONFIG2 @ 0x8008
  7999                           ;	Master Clear Enable bit
  8000                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8001                           ;	Power-up Timer Enable bit
  8002                           ;	PWRTE = OFF, PWRT disabled
  8003                           ;	Low-Power BOR enable bit
  8004                           ;	LPBOREN = OFF, ULPBOR disabled
  8005                           ;	Brown-out reset enable bits
  8006                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8007                           ;	Brown-out Reset Voltage Selection
  8008                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8009                           ;	Zero-cross detect disable
  8010                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8011                           ;	Peripheral Pin Select one-way control
  8012                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8013                           ;	Stack Overflow/Underflow Reset Enable bit
  8014                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8015  8008                     	org	32776
  8016  8008  3FFF               	dw	16383
  8017                           
  8018                           ;Config register CONFIG3 @ 0x8009
  8019                           ;	WDT Period Select bits
  8020                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8021                           ;	WDT operating mode
  8022                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8023                           ;	WDT Window Select bits
  8024                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8025                           ;	WDT input clock selector
  8026                           ;	WDTCCS = SC, Software Control
  8027  8009                     	org	32777
  8028  8009  3F9F               	dw	16287
  8029                           
  8030                           ;Config register CONFIG4 @ 0x800A
  8031                           ;	Boot Block Size Selection bits
  8032                           ;	BBSIZE = BB512, 512 words boot block size
  8033                           ;	Boot Block Enable bit
  8034                           ;	BBEN = OFF, Boot Block disabled
  8035                           ;	SAF Enable bit
  8036                           ;	SAFEN = OFF, SAF disabled
  8037                           ;	Application Block Write Protection bit
  8038                           ;	WRTAPP = OFF, Application Block not write protected
  8039                           ;	Boot Block Write Protection bit
  8040                           ;	WRTB = OFF, Boot Block not write protected
  8041                           ;	Configuration Register Write Protection bit
  8042                           ;	WRTC = OFF, Configuration Register not write protected
  8043                           ;	Storage Area Flash Write Protection bit
  8044                           ;	WRTSAF = OFF, SAF not write protected
  8045                           ;	Low Voltage Programming Enable bit
  8046                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8047  800A                     	org	32778
  8048  800A  3FFF               	dw	16383
  8049                           
  8050                           ;Config register CONFIG5 @ 0x800B
  8051                           ;	UserNVM Program memory code protection bit
  8052                           ;	CP = OFF, UserNVM code protection disabled
  8053  800B                     	org	32779
  8054  800B  3FFF               	dw	16383

Data Sizes:
    Strings     107
    Constant    89
    Data        0
    BSS         26
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     32      58
    BANK1            80     26      34
    BANK2            80      0       0

Pointer List with Targets:

    sendString2Serial@str	PTR unsigned char  size(2) Largest target is 26
		 -> main@parameters(BANK1[5]), STR_13(CODE[23]), setHeaterPower@tempStr(BANK0[4]), STR_12(CODE[23]), 
		 -> setDcFanSpeed@tempStr(BANK0[4]), STR_11(CODE[26]), STR_10(CODE[5]), STR_9(CODE[7]), 
		 -> sendTemperature@tempStr(BANK0[4]), 

    sendChannelsReply@chans	PTR unsigned char  size(1) Largest target is 5
		 -> main@parameters(BANK1[5]), 

    getParams@params	PTR unsigned char  size(1) Largest target is 5
		 -> main@parameters(BANK1[5]), 

    getParams@readLine	PTR unsigned char  size(1) Largest target is 15
		 -> main@readBuffer(BANK1[15]), 

    getCommandAndParams@params	PTR unsigned char  size(1) Largest target is 5
		 -> main@parameters(BANK1[5]), 

    getCommandAndParams@readLine	PTR unsigned char  size(1) Largest target is 15
		 -> main@readBuffer(BANK1[15]), 

    string2int@numberStr	PTR unsigned char  size(1) Largest target is 5
		 -> main@parameters(BANK1[5]), 

    int2string@numberStr	PTR unsigned char  size(1) Largest target is 4
		 -> setHeaterPower@tempStr(BANK0[4]), setDcFanSpeed@tempStr(BANK0[4]), sendTemperature@tempStr(BANK0[4]), 

    startsWith@str2	PTR unsigned char  size(1) Largest target is 15
		 -> main@readBuffer(BANK1[15]), 

    startsWith@str1	PTR unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[5]), STR_6(CODE[7]), STR_4(CODE[6]), 

    isEqual@str2	PTR unsigned char  size(1) Largest target is 15
		 -> main@readBuffer(BANK1[15]), 

    isEqual@str1	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), ADC_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler
    _ADC_ISR->_ADC_DefaultInterruptHandler
    _ADC_DefaultInterruptHandler->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_setHeaterPower
    _string2int->___bmul
    _setHeaterPower->_int2string
    _setDcFanSpeed->_int2string
    ___awdiv->___wmul
    _sendTemperature->_int2string
    _int2string->___lbmod
    ___lbmod->___lbdiv
    _sendChannelsReply->_sendString2Serial
    _sendString2Serial->_EUSART1_Write
    _sendLf2Serial->_EUSART1_Write
    _getCommandAndParams->_getParams
    _getCommandAndParams->_isEqual
    _getCommandAndParams->_startsWith
    _getBeanTemperature->_convert2Celsius
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADC_Initialize->_ADC_SelectChannel
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0   16771
                                             30 BANK0      2     2      0
                                              0 BANK1     26    26      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
                 _getBeanTemperature
                _getCommandAndParams
                  _sendChannelsReply
                    _sendTemperature
                      _setDcFanSpeed
                     _setHeaterPower
                         _string2int
 ---------------------------------------------------------------------------------
 (1) _string2int                                           5     5      0     530
                                              4 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _setHeaterPower                                      11    11      0    4539
                                             19 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                         _int2string
                      _sendLf2Serial
                  _sendString2Serial
                       _setPowerBits
 ---------------------------------------------------------------------------------
 (2) _setPowerBits                                         3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _setDcFanSpeed                                        8     8      0    4536
                                             19 BANK0      8     8      0
                 _PWM3_LoadDutyValue
                            ___awdiv
                             ___wmul
                         _int2string
                      _sendLf2Serial
                  _sendString2Serial
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     152
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _sendTemperature                                      6     6      0    2838
                                             19 BANK0      6     6      0
                         _int2string
                      _sendLf2Serial
                  _sendString2Serial
 ---------------------------------------------------------------------------------
 (2) _int2string                                           8     7      1    1772
                                             11 BANK0      8     7      1
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              6     5      1     502
                                              5 BANK0      6     5      1
                            ___lbdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              5     4      1     421
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _sendChannelsReply                                    1     1      0    1004
                                              4 BANK0      1     1      0
                      _sendLf2Serial
                  _sendString2Serial
 ---------------------------------------------------------------------------------
 (2) _sendString2Serial                                    3     1      2     906
                                              1 BANK0      3     1      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _sendLf2Serial                                        0     0      0      31
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getCommandAndParams                                  5     4      1    1749
                                              4 BANK0      5     4      1
                          _getParams
                            _isEqual
                         _startsWith
 ---------------------------------------------------------------------------------
 (2) _startsWith                                           4     1      3     670
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _isEqual                                              4     1      3     341
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _getParams                                            4     3      1     392
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _getBeanTemperature                                   7     7      0     288
                                              3 BANK0      7     7      0
                    _convert2Celsius
 ---------------------------------------------------------------------------------
 (2) _convert2Celsius                                      3     1      2     121
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     636
                     _ADC_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM3_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     484
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     152
                  _ADC_SelectChannel
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_SelectChannel                                    2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0      23
                   Absolute function *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0      23
                   Absolute function *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _ADC_DefaultInterruptHandler                          3     3      0      23
                                              2 COMMON     3     3      0
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SelectChannel
       _ADC_SetInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM3_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _getBeanTemperature
     _convert2Celsius
   _getCommandAndParams
     _getParams
     _isEqual
     _startsWith
   _sendChannelsReply
     _sendLf2Serial
       _EUSART1_Write
     _sendString2Serial
       _EUSART1_Write
   _sendTemperature
     _int2string
       ___lbdiv
       ___lbmod
         ___lbdiv (ARG)
     _sendLf2Serial
     _sendString2Serial
   _setDcFanSpeed
     _PWM3_LoadDutyValue
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _int2string
     _sendLf2Serial
     _sendString2Serial
   _setHeaterPower
     ___awdiv
     ___wmul
     _int2string
     _sendLf2Serial
     _sendString2Serial
     _setPowerBits
   _string2int
     ___bmul

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_ISR *
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
       _ADC_GetConversionResult
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      3A       5       72.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1A      22       7       42.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      66      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      66      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Feb 18 10:26:05 2022

                             _sendChannelsReply 0571                                  ___bmul@product 0022  
                                  ___awdiv@sign 002C                          __end_of_FVR_Initialize 062A  
                            ?_sendChannelsReply 0075                             ___wmul@multiplicand 0022  
                                _setHeaterPower 014B                                     isEqual@str1 0020  
                                   isEqual@str2 0022                                             l132 05AB  
                                           l638 046B                                             l856 045D  
                               __end_of_ADC_ISR 0596                 __end_of_ADC_SetInterruptHandler 0626  
                               _TMR2_Initialize 0545                             ??_sendChannelsReply 0024  
                                           wreg 0009                                  startsWith@str1 0020  
                                startsWith@str2 0022                    ?_ADC_DefaultInterruptHandler 0075  
                                  main@aCommand 00B9                                 string2int@index 0026  
                                          l2416 040A                                            l2418 0413  
                                          l2610 00DE                                            l2620 0239  
                                          l2428 0422                                            l2436 044A  
                                          l2604 00CF                                            l2630 0248  
                                          l2622 022F                                            l2550 0323  
                                          l2640 024C                                            l2624 0240  
                                          l2552 0310                                            l2704 010F  
                                          l2642 0269                                            l2554 032A  
                                          l2730 0146                                            l2722 0135  
                                          l2714 0117                                            l2564 0339  
                                          l2716 0123                                            l2900 0040  
                                          l2574 03CD                                            l2822 021C  
                                          l2806 01F3                                            l2654 0521  
                                          l2726 013E                                            l2736 03DF  
                                          l2576 03BA                                            l2816 020E  
                                          l2664 0465                                            l2912 005A  
                                          l2904 0030                                            l2586 03DD  
                                          l2578 03D4                                            l2682 053C  
                                          l2828 022A                                            l2924 0071  
                                          l2916 0062                                            l2932 007D  
                                          l2678 0536                                            l2782 02CA  
                                          l2918 0065                                            l2934 0097  
                                          l2784 02B0                                            l2960 0086  
                                          l2698 0104                                            l2786 02D0  
                                          l2796 02DC                                            l2878 036A  
                                          STR_1 061C                                            STR_2 061C  
                                          STR_3 0600                                            STR_4 0600  
                                          STR_5 05F2                                            STR_6 05F2  
                                          STR_7 0617                                            STR_8 0617  
                                          STR_9 05EB                                            _LATA 0018  
                                          _LATC 001A                                            u1445 044D  
                                          u1625 05B6                                            _T2PR 028D  
                                          u1475 04C1                                            u1725 011A  
                                          u1645 046C                                            u1655 0471  
                                          u1745 0124                                            u1755 012E  
                                          u1765 0136                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            _WPUA 1F39  
                                          _WPUC 1F4F                                   _EUSART1_Write 05AA  
                        sendTemperature@tempStr 0035                                            _main 0028  
                                 ?_EUSART1_Read 0075                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
             ADC_DefaultInterruptHandler@result 0078                                            start 0019  
                                  main@beanTemp 00B4                       __end_of_sendChannelsReply 057E  
                             ___bmul@multiplier 0023                               ??_sendTemperature 0033  
                        __end_of_setHeaterPower 0199                         __end_of_TMR0_Initialize 058A  
                               ?_FVR_Initialize 0075                                string2int@result 0027  
                 __end_of_OSCILLATOR_Initialize 05AA                           _eusart1RxStatusBuffer 0040  
                                         _ADACT 009F                                           ?_main 0075  
                               __end_of___awdiv 014B                                 __end_of___lbdiv 0424  
                                         STR_10 0612                                           STR_11 047E  
                                         STR_12 04C9                                           STR_13 04E0  
                               __end_of___lbmod 0463                                 ___awdiv@divisor 0026  
                                         _T2CON 028E                                           _T2HLT 028F  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l438 039C                                           i1l298 0017  
                     convert2Celsius@avg_result 0020                                 ___awdiv@counter 002B  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                    main@readByte 00B5  
                                         u80_25 0392                                           _TRISA 0012  
                                         _TRISC 0014                                 __end_of_isEqual 033B  
                                ?_EUSART1_Write 0075                         __end_of_PWM3_Initialize 05C3  
                                         pclath 000A                                  ??_EUSART1_Read 0020  
                                         status 0003                                           wtemp0 007E  
                               ___lbdiv@divisor 0020      __end_of_EUSART1_DefaultFramingErrorHandler 0634  
          ??_EUSART1_DefaultFramingErrorHandler 0075             ?_EUSART1_DefaultFramingErrorHandler 0075  
            _EUSART1_DefaultFramingErrorHandler 0633                                 ___lbdiv@counter 0023  
                               __initialization 001A                      __end_of_EUSART1_Initialize 0367  
                                  __end_of_main 009A                                 ?_setHeaterPower 0075  
                       __end_of_TMR2_Initialize 0554                                       ??_ADC_ISR 007A  
                   ?_INTERRUPT_InterruptManager 0075                              _getBeanTemperature 0367  
                                        ??_main 003E                             ?_getBeanTemperature 0075  
                                        _ADCON0 009D                                          _ADCON1 009E  
                                        _ADRESH 009C                                          _ADRESL 009B  
                              ___awdiv@dividend 0028                                          _ANSELA 1F38  
                                        _ANSELC 1F4E                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RC1STA 011D                                          _RC2PPS 1F22  
                                        _RC4PPS 1F24                                          i1l2310 000D  
                                        i1l2152 02F1                                          _ODCONA 1F3A  
                                        i1l2162 030D                                          _ODCONC 1F50  
                                        i1l2158 02FF                                          i1l1920 039D  
                                        _INLVLA 1F3C                                          _INLVLC 1F52  
                                        _FVRCON 090C                                          _OSCFRQ 0893  
                                        _TX1REG 011A                                          _TX1STA 011E  
                               getParams@length 0022                                 getParams@params 0020  
                          ??_getBeanTemperature 0023                                  main@dcFanSpeed 00B6  
                               _convert2Celsius 05B3                                          ___bmul 0534  
                                        ___wmul 0463                                       ??___awdiv 002A  
                                     ??___lbdiv 0021                                       ??___lbmod 0026  
                      ?_EUSART1_SetErrorHandler 0020                                ?_TMR0_Initialize 0075  
                              ___awdiv@quotient 002D                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                       ??_isEqual 0023  
                                _PMD_Initialize 05C3                                __end_of_pwmLevel 0571  
                               ??_EUSART1_Write 0020         ADC_SetInterruptHandler@InterruptHandler 0020  
                               _eusart1RxBuffer 0048                                ___lbdiv@dividend 0022  
                              ?_PWM3_Initialize 0075                               _SYSTEM_Initialize 0596  
                               ___lbmod@divisor 0025                         __end_of__initialization 0025  
                               ___lbmod@counter 0029                              ?_SYSTEM_Initialize 0075  
                           ___bmul@multiplicand 0020                   __end_of_EUSART1_RxDataHandler 050D  
                                __pcstackCOMMON 0075                             ??_SYSTEM_Initialize 0022  
                              ?_TMR2_Initialize 0075                                ___lbdiv@quotient 0024  
                        __end_of_PMD_Initialize 05CB                            __end_of_EUSART1_Read 0403  
                      getBeanTemperature@result 0027                         _ADC_GetConversionResult 060C  
                   __end_of_EUSART1_Receive_ISR 030F                       __end_of_SYSTEM_Initialize 05A0  
                                 _eusart1RxHead 0074                                   _eusart1RxTail 0073  
                                    __pbssBANK0 0040                 ??_EUSART1_SetRxInterruptHandler 0022  
                               _sendTemperature 0498                         __end_of_convert2Celsius 05BB  
                   getCommandAndParams@readLine 0028                            sendString2Serial@str 0021  
                         setHeaterPower@tempStr 0039                             setHeaterPower@power 0038  
               __end_of_EUSART1_SetErrorHandler 05EB                                ??_FVR_Initialize 0020  
                                    __pmaintext 0028                                         ?___bmul 0020  
                                       ?___wmul 0020                                      __pintentry 0004  
                                       _ADC_ISR 058A                                 ?_PMD_Initialize 0075  
        __end_of_EUSART1_SetFramingErrorHandler 05E3                  _EUSART1_SetFramingErrorHandler 05DB  
                                 ?_setPowerBits 0020                    ?_EUSART1_DefaultErrorHandler 0075  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                       _OSCSTAT 0890                                         _OSCTUNE 0892  
                                       _PWM3DCH 0315                                         _PWM3DCL 0314  
                                       _PWM3CON 0316                                         _SLRCONA 1F3B  
                                       _SLRCONC 1F51                                  main@readBuffer 00A0  
                                    _int2string 009A                             sendTemperature@temp 0034  
                                 _setDcFanSpeed 026F                                  main@parameters 00AF  
                             __end_of_getParams 026F                                ??_setHeaterPower 0033  
                          _ADC_InterruptHandler 0058                         _ADC_SetInterruptHandler 0621  
                                       ___awdiv 00FA                                         ___lbdiv 0403  
                                       ___lbmod 0444                       ??_ADC_GetConversionResult 0077  
                           _getCommandAndParams 01E4                                  ??_setPowerBits 0023  
                           int2string@numberStr 002B                                         __ptext1 02AC  
                                       __ptext2 0534                                         __ptext3 014B  
                                       __ptext4 05F9                                         __ptext5 026F  
                                       __ptext6 0463                                         __ptext7 00FA  
                                       __ptext8 04B1                                         __ptext9 0498  
                                       _isEqual 030F                           _OSCILLATOR_Initialize 05A0  
                            _EUSART1_Initialize 033B                        ??_PIN_MANAGER_Initialize 0020  
                       __end_of_sendTemperature 04B1                   ??_EUSART1_DefaultErrorHandler 0076  
                                       clrloop0 0607                            end_of_initialization 0025  
                          ?_getCommandAndParams 0024                             ?_EUSART1_Initialize 0075  
                         __end_of_powerBitTable 01E4                                  ?_setDcFanSpeed 0075  
                   _EUSART1_OverrunErrorHandler 00BC                                ?_convert2Celsius 0020  
                                    _tempBuffer 0050                                 int2string@index 0032  
         __end_of_EUSART1_SetRxInterruptHandler 05D3                   _EUSART1_SetRxInterruptHandler 05CB  
                            setDcFanSpeed@level 0038                                   _sendLf2Serial 062E  
                            setDcFanSpeed@speed 003A                            ??_EUSART1_Initialize 0022  
                              ___lbmod@dividend 0028             __end_of_ADC_DefaultInterruptHandler 03B9  
                   _ADC_DefaultInterruptHandler 0390                             EUSART1_Write@txData 0020  
                         ??_getCommandAndParams 0025                                     ?_int2string 002B  
                                    _startsWith 03B9                                     ___lbmod@rem 002A  
                 ??_ADC_DefaultInterruptHandler 0077                       ??_ADC_SetInterruptHandler 0022  
                                  _EUSART1_Read 03DF                      __end_of_PWM3_LoadDutyValue 04C9  
                                    _string2int 02AC                                  ?_sendLf2Serial 0075  
                                __end_of___bmul 0545               getCommandAndParams@lengthOfParams 0027  
                                __end_of___wmul 047E                                  _ADC_Initialize 050D  
                        ?_OSCILLATOR_Initialize 0075                                   _periodCounter 0071  
                           start_initialization 001A                                ?_sendTemperature 0075  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                                 ??_setDcFanSpeed 0033  
                         __end_of_EUSART1_Write 05B3                            __end_of_setPowerBits 0600  
                                      ??___bmul 0021                                ??_PMD_Initialize 0020  
                                      ??___wmul 0024                          sendChannelsReply@chans 0024  
                         _EUSART1_RxDataHandler 04F7                  ?_EUSART1_SetRxInterruptHandler 0020  
                        __end_of_ADC_Initialize 0521                                        ?_ADC_ISR 0075  
                                _eusart1RxCount 0072                          setHeaterPower@newLevel 003D  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 00C0  
                                     ___latbits 0000                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                 main@heaterPower 00B7  
                                   ?_startsWith 0020                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                                       __pnvBANK0 0055  
                                     __pnvBANK1 00BA                                 ??_sendLf2Serial 0021  
                                   ?_string2int 0075                             string2int@numberStr 0028  
                        _PIN_MANAGER_Initialize 0424                               _ADC_SelectChannel 0554  
                             _sendString2Serial 0521                                       _getParams 022C  
                                      ?___awdiv 0026                                        ?___lbdiv 0020  
                                      ?___lbmod 0025                                 ?_ADC_Initialize 0075  
                            ?_ADC_SelectChannel 0075                              ?_sendString2Serial 0021  
                  ??_INTERRUPT_InterruptManager 007A                                        ?_isEqual 0020  
                                      _BAUD1CON 011F      __end_of_EUSART1_DefaultOverrunErrorHandler 062E  
          ??_EUSART1_DefaultOverrunErrorHandler 0075             ?_EUSART1_DefaultOverrunErrorHandler 0075  
            _EUSART1_DefaultOverrunErrorHandler 062A                             ??_ADC_SelectChannel 0020  
                          _EUSART1_ErrorHandler 00BA                             ??_sendString2Serial 0023  
                               _tempBufferIndex 0070                              int2string@hundreds 002F  
                       _EUSART1_SetErrorHandler 05E3                                        _T2CLKCON 0290  
                             ??_TMR0_Initialize 0020                                  ___wmul@product 0024  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0020  
                                     clear_ram0 0606                                        _PIE1bits 0717  
                                      _PIE3bits 0719                       __end_of_ADC_SelectChannel 0563  
                     __end_of_sendString2Serial 0534                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _PIR4bits 0710                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0075                                      ?_getParams 0020  
                                     _powerBits 0055                               ??_PWM3_Initialize 0020  
                                    _ADCON0bits 009D                               ___wmul@multiplier 0020  
                      ADC_SelectChannel@channel 0021                                       main@index 00B8  
                             getParams@readLine 0023                                    ??_int2string 002C  
                             ??_TMR2_Initialize 0020                           EUSART1_Read@readValue 0021  
                     getCommandAndParams@params 0024                        ?_ADC_GetConversionResult 0075  
                       ??_OSCILLATOR_Initialize 0020                              _PWM3_LoadDutyValue 04B1  
                            __end_of_int2string 00FA                                    _setPowerBits 05F9  
                     ??_EUSART1_SetErrorHandler 0022             __end_of_EUSART1_DefaultErrorHandler 0633  
                   _EUSART1_DefaultErrorHandler 0631                     __end_of_getCommandAndParams 022C  
                                      __ptext10 009A                                        __ptext11 0444  
                                      __ptext20 022C                                        __ptext12 0403  
                                      __ptext21 0367                                        __ptext13 0571  
                                      __ptext30 0626                                        __ptext22 05B3  
                                      __ptext14 0521                                        __ptext31 033B  
                                      __ptext23 0596                                        __ptext15 062E  
                                      __ptext32 05CB                                        __ptext24 0545  
                                      __ptext16 05AA                                        __ptext41 02DE  
                                      __ptext33 05D3                                        __ptext25 057E  
                                      __ptext17 01E4                                        __ptext42 062A  
                                      __ptext34 05DB                                        __ptext26 05BB  
                                      __ptext18 03B9                                        __ptext43 0633  
                                      __ptext35 05E3                                        __ptext27 05C3  
                                      __ptext19 030F                                        __ptext44 0631  
                                      __ptext36 050D                                        __ptext28 0424  
                                      __ptext45 04F7                                        __ptext37 0621  
                                      __ptext29 05A0                                        __ptext46 058A  
                                      __ptext38 0554                                        __ptext47 0390  
                                      __ptext39 03DF                                        __ptext48 060C  
                           ?_PWM3_LoadDutyValue 0020                      __end_of_getBeanTemperature 0390  
                                    _RC1STAbits 011D                      setHeaterPower@newPowerBits 0035  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                            ??_PWM3_LoadDutyValue 0022  
                                      _pwmLevel 0563                                     ??_getParams 0021  
                                      int$flags 007E                            setDcFanSpeed@tempStr 0034  
            __end_of_INTERRUPT_InterruptManager 0019                      _INTERRUPT_InterruptManager 0004  
                   _EUSART1_FramingErrorHandler 00BE                             getBeanTemperature@i 0029  
                           _EUSART1_Receive_ISR 02DE                                      _INTCONbits 000B  
                                __pstringtext10 0617                                  __pstringtext11 061C  
                                __pstringtext12 0000                        ?_ADC_SetInterruptHandler 0020  
                                      intlevel1 0000                                    ??_startsWith 0023  
                          ?_EUSART1_Receive_ISR 0075                           __end_of_setDcFanSpeed 02AC  
                                 _powerBitTable 0199                         ?_PIN_MANAGER_Initialize 0075  
               __end_of_ADC_GetConversionResult 0612          __end_of_EUSART1_SetOverrunErrorHandler 05DB  
                _EUSART1_SetOverrunErrorHandler 05D3                                int2string@number 0030  
                              int2string@tenths 0031                                ??_ADC_Initialize 0022  
                                  ??_string2int 0024  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 0020                              _eusart1RxLastError 0054  
                                 __pstringtext1 0199                                   __pstringtext2 0563  
                                 __pstringtext3 047E                                   __pstringtext4 04C9  
                                 __pstringtext5 04E0                                   __pstringtext6 05EB  
                                 __pstringtext7 05F2                                   __pstringtext8 0600  
                                 __pstringtext9 0612                                  _FVR_Initialize 0626  
                            __end_of_startsWith 03DF                               ??_convert2Celsius 0022  
                               _TMR0_Initialize 057E                              __end_of_string2int 02DE  
                         ??_EUSART1_Receive_ISR 0076                  __end_of_PIN_MANAGER_Initialize 0444  
                       ??_EUSART1_RxDataHandler 0075                                 _PWM3_Initialize 05BB  
                             setPowerBits@value 0020                           __end_of_sendLf2Serial 0631  
